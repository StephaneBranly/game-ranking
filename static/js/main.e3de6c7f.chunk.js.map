{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","EmojiEvents","marginRight","title","Header","classes","className","AppBar","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","Footer","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","createMuiTheme","primary","App","ThemeProvider","footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAWMA,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJC,SAAU,EACVC,aAAcJ,EAAMK,QAAQ,IAE9BC,YAAa,CACXC,YAAaP,EAAMK,QAAQ,IAE7BG,MAAO,CACLL,SAAU,QAKC,SAASM,IACtB,IAAMC,EAAUZ,IAEhB,OACI,qBAAKa,UAAWD,EAAQR,KAAxB,SACI,cAACU,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACA,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAaH,UAAWD,EAAQJ,cAChC,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQF,MAA5C,iC,+ECtBRV,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJC,SAAU,EACVc,gBAAiBjB,EAAMkB,QAAQC,UAAUC,KACzCC,MAAO,OACPR,SAAU,QACVS,OAAQ,QAKG,SAASC,IACtB,IAAMb,EAAUZ,IAEhB,EAA0B0B,IAAMC,SAAS,WAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,eAACC,EAAA,EAAD,CAAkBF,MAAOA,EAAOG,SALb,SAACC,EAAOC,GAC3BJ,EAASI,IAI+CpB,UAAWD,EAAQR,KAA3E,UACE,cAAC8B,EAAA,EAAD,CAAwBC,MAAM,UAAUP,MAAM,UAAUQ,KAAM,cAAC,IAAD,MAC9D,cAACF,EAAA,EAAD,CAAwBC,MAAM,QAAQP,MAAM,QAAQQ,KAAM,cAAC,IAAD,MAC1D,cAACF,EAAA,EAAD,CAAwBC,MAAM,UAAUP,MAAM,UAAUQ,KAAM,cAAC,IAAD,MAC9D,cAACF,EAAA,EAAD,CAAwBC,MAAM,WAAWP,MAAM,WAAWQ,KAAM,cAAC,IAAD,S,oBCjCzDlC,EAAQmC,YAAe,CAClCjB,QAAS,CACPkB,QAAS,CACPhB,KAAM,WAERD,UAAW,CACTC,KAAM,cAKNtB,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,OAkBAoC,MAbf,WACE,IAAM3B,EAAUZ,IAEhB,OACE,cAACwC,EAAA,EAAD,CAAetC,MAAOA,EAAtB,SACE,sBAAKW,UAAU,MAAf,UACE,cAACF,EAAD,IACA,cAACc,EAAD,CAAQZ,UAAWD,EAAQ6B,eCjBpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3de6c7f.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport Timeline from '@material-ui/icons/Timeline';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport Settings from '@material-ui/icons/Settings';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n  },\n}),\n);\n  \nexport default function Footer(){\n  const classes = useStyles(); \n  \n  const [value, setValue] = React.useState('recents');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n      <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={<Timeline />} />\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={<EmojiEvents />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={<Group />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={<Settings />} />\n    </BottomNavigation>\n  );\n}","import Header from './components/header/Header'\nimport Footer from './components/footer/Footer'\n\nimport { createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#00996e\",\n    },\n    secondary: {\n      main: \"#83fc97\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n   \n  }),\n);\n\nfunction App() {\n  const classes = useStyles(); \n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Header></Header>\n        <Footer className={classes.footer}></Footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}