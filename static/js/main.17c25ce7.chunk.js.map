{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","utils/lib.tsx","utils/elo.tsx","components/scoreChip/ScoreChip.tsx","components/lineChartResult/LineChartResult.tsx","components/pages/summary/Summary.tsx","components/pages/players/PlayersHeader.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/EditPlayer.tsx","components/pages/players/PlayerCompleteCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/LoadSave.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/GamesAddResultWho.tsx","components/pages/games/GameAddResultWhen.tsx","components/pages/games/GameAddResultRanks.tsx","components/pages/games/DeleteResult.tsx","components/pages/games/GameAddResult.tsx","components/pages/games/ResultCard.tsx","components/pages/games/DeleteGame.tsx","components/pages/games/EditGame.tsx","components/pages/games/GameCompleteCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","components/pages/notifications/Notification.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","zIndex","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","getPlayerProfile","players","uuidPlayer","filter","player","uuid","getResult","results","resultUuid","result","getPlayerLabel","username","length","toUpperCase","calculateRanking","game","rankHistory","push","playersRank","map","playerUuid","score","deltaScore","lastEntry","sort","a","b","date","forEach","newEntry","generateNewEntry","p","nbRank","i","ranks","rankFilter","rank","currentPlayer","otherPlayers","index","getIndexInEntry","lastScoreCurrentPlayer","sumDeltaScore","otherPlayer","A","B","lastScoreOtherPlayer","win","expected","divFactor","newScore","old","exp","elo","entry","findIndex","obj","toChartScore","scores","chartScore","entreyToChartScore","playerRank","Math","round","generateGameFromLoadedData","newData","gamename","newResult","Date","some","sortedRanks","calculatePresentPlayers","calculateNbPosition","games","total","resultRank","marginLeft","border","first","color","second","third","ScoreChip","text","Chip","size","style","LineChartResult","stateLineDesign","opacity","useState","lineDesign","setLineDesign","generateLineScorePlayer","historyEntry","playing","playerInfo","Grid","container","item","direction","justify","alignContent","alignItems","xs","borderColor","renderPlayersScore","data","uuidPresentPlayers","uuidOtherPlayers","indexOf","ResponsiveContainer","height","LineChart","margin","top","right","left","XAxis","dataKey","tick","YAxis","yAxisId","domain","Tooltip","content","propsTooltip","active","payload","Paper","paddingTop","paddingBottom","paddingLeft","paddingRight","toLocaleString","Legend","verticalAlign","onMouseEnter","onMouseLeave","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","alt","CartesianGrid","stroke","strokeDasharray","Line","type","strokeWidth","strokeOpacity","flat","badge","padding","Summary","Container","Card","PlayersHeader","Button","startIcon","onClick","require","randomColor","new_player","setPlayers","concat","addPlayer","Padding","ColorPicker","Name","borderRadius","PlayerCard","setCurrentPlayer","IconButton","showZero","EditPlayer","React","setPlayer","Dialog","open","onClose","event","reason","setEditMode","DialogTitle","DialogContent","DialogContentText","Input","e","target","onChangeComplete","c","hex","disableAlpha","DialogActions","autoFocus","handleChangePlayer","Main","PlayerCompleteCard","editMode","undefined","NavigateBefore","ButtonGroup","disableElevation","Edit","align","changePlayerData","Players","new_data","el","Object","assign","addNotification","subSection","borderLeft","About","Settings","display","accept","id","handlerLoadData","htmlFor","component","Publish","GetApp","handlerSaveData","LoadSaveProps","GamesHeader","newGame","setGames","addGame","GameCard","setCurrentGame","GameAddResultWho","playerInResults","selectedPlayers","togglePlayer","setSelectedPlayers","dividers","List","ListItem","dense","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","checked","ListItemText","primary","GameAddResultWhen","utils","DateFnsUtils","DateTimePicker","selectedDate","setSelectedDate","showTodayButton","format","GameAddResultRanks","renderPossibilities","possibilities","MenuItem","Select","handleChange","DeleteResult","setDeleteResultOpen","deleteResult","GameAddResult","currentStep","setCurrentStep","addResultOpen","deleteResultOpen","fullWidth","maxWidth","setAddResultOpen","Delete","disabled","validResult","sorted","addResult","endIcon","PostAdd","nextStep","NavigateNext","ResultCard","DeleteGame","setDeleteGameOpen","deleteGame","EditGame","currentGamename","setGamename","handleChangeGamename","GameCompleteCard","deleteGameOpen","changeGameData","displayResults","newGamename","Games","currentGame","Pages","renderPage","Alert","elevation","Notification","handleClose","setNotification","notification","Snackbar","autoHideDuration","severity","createMuiTheme","error","App","page","setPage","pagesProps","FileSaver","json","JSON","stringify","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","parse","files","readAsText","footerProps","newPage","notificationsProps","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17c25ce7.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 100,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={currentPage === \"summary\" ? <Timeline /> : <TimelineOutlined />} />\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import { randomFill } from \"crypto\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../types/data\"\nimport { elo, elo_expected } from \"./elo\";\n\nexport const getPlayerProfile = (players: Array<playerType>, uuidPlayer: string): playerType => {\n    return (players.filter(player => (player.uuid === uuidPlayer))[0])\n}\n\nexport const getResult = (results: Array<resultType>, resultUuid: string): resultType => {\n    return (results.filter(result => (result.uuid === resultUuid))[0])\n}\n\nexport const getPlayerLabel = (player: playerType): string => {\n    if(player.username.length>1)\n        return player.username[0].toUpperCase()+player.username[1];\n    return player.username[0].toUpperCase();\n}\n\n\n\nexport const calculateRanking = (game: gameType): Array<historyEntryType> => {\n    if(!game.results)\n        return [];\n    let rankHistory: Array<historyEntryType>  = []\n    rankHistory.push({ resultUuid: \"\", playersRank: []})\n    rankHistory[0].playersRank = game.players.map(player => { return { playerUuid: player.uuid, score: 1200, deltaScore: 0 }}) \n    let lastEntry: historyEntryType = rankHistory[0]\n    game.results.sort((a,b) => a.date >= b.date ? 1 : -1).forEach(result => {\n        const newEntry = generateNewEntry(result, lastEntry)\n        rankHistory.push(newEntry);\n        lastEntry = newEntry\n    });\n    return rankHistory;\n}\n\nexport const generateNewEntry = (result: resultType, lastEntry: historyEntryType) => {\n    let newEntry: historyEntryType = {\n        resultUuid: result.uuid,\n        playersRank: []\n    };\n    lastEntry.playersRank.forEach(p => { newEntry.playersRank.push({ playerUuid: p.playerUuid, score: p.score, deltaScore: p.deltaScore})})\n    let nbRank: any = {}\n    for(let i=0; i<result.ranks.length; i++)\n        nbRank[i+1] = result.ranks.filter(rankFilter => (i+1 === rankFilter.rank)).length\n\n    result.ranks.forEach(currentPlayer => {\n        const otherPlayers = result.ranks.filter(rankFilter => (currentPlayer.rank !== rankFilter.rank))\n        const index = getIndexInEntry(currentPlayer.uuid,newEntry)\n        const lastScoreCurrentPlayer = lastEntry.playersRank[getIndexInEntry(currentPlayer.uuid,lastEntry)].score\n        let sumDeltaScore = 0\n        otherPlayers.forEach(otherPlayer => { \n            const lastScoreOtherPlayer = lastEntry.playersRank[getIndexInEntry(otherPlayer.uuid,lastEntry)].score\n            const win = currentPlayer.rank < otherPlayer.rank ? 1 : 0;\n            const expected = elo_expected(lastScoreCurrentPlayer,lastScoreOtherPlayer)\n            const divFactor = nbRank[currentPlayer.rank] * nbRank[otherPlayer.rank]\n            const newScore = elo(lastScoreCurrentPlayer, expected, win, divFactor)\n            sumDeltaScore += newScore - lastScoreCurrentPlayer\n        })\n        newEntry.playersRank[index].score = lastScoreCurrentPlayer + sumDeltaScore\n        newEntry.playersRank[index].deltaScore = sumDeltaScore\n    });\n    return newEntry\n}\n\n\nexport const getIndexInEntry = (playerUuid: string, entry: historyEntryType): number => {\n    return entry.playersRank.findIndex((obj => obj.playerUuid === playerUuid));\n}\n\nexport const toChartScore = (scores: Array<historyEntryType>) => {\n    const chartScore: any = []\n    scores.forEach((score) => chartScore.push(entreyToChartScore(score)))\n    return chartScore\n}\n\nconst entreyToChartScore = (score: historyEntryType) => {\n    let obj:any={}\n    obj['resultUuid']=score.resultUuid\n    score.playersRank.forEach(playerRank => obj[playerRank.playerUuid]=Math.round(playerRank.score))\n    return obj\n}\n\nexport const generateGameFromLoadedData  = (game: { gamename: any; uuid: any; results: resultType[]; }) => {\n  let newData: gameType = {\n    gamename: game.gamename,\n    uuid: game.uuid,\n    players: [],\n    results: [],\n    rankHistory: []\n  }\n \n  game.results.forEach((result: resultType) => {\n    const newResult: resultType = result\n    newResult.date = new Date(newResult.date)\n    newData.results.push(newResult);\n    newResult.ranks.forEach(rank => {\n    if(newData.players)\n    {\n        if(!newData.players.some(player => player.uuid === rank.uuid))\n        newData.players?.push({uuid:rank.uuid,rank:0});\n    }\n    else\n      newData.players=[{uuid:rank.uuid,rank:0}];\n    });\n  })\n  \n  newData.rankHistory = calculateRanking(newData);\n\n  if(newData.players)\n  {\n      const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      newData.players = sortedRanks;\n  }\n  return newData\n}\n\nexport const calculatePresentPlayers = (game: gameType): Array<scoreType> => {\n    const players: Array<scoreType> = []\n    game.results.forEach(result => {\n        result.ranks.forEach(rank => {\n        if(!players.some(player => player.uuid === rank.uuid))\n            players.push({uuid:rank.uuid,rank:0});\n        })\n    })\n    return players\n} \n\nexport const calculateNbPosition = (games: Array<gameType>, playerUuid: string, position: number) => {\n    let total = 0;\n    games.forEach(game => {\n        game.results.forEach(result => {\n            const resultRank = result.ranks.filter(rank => rank.uuid === playerUuid)\n            if(resultRank.length && resultRank[0].rank === position) total += 1\n        })\n    })\n    return total\n}","export const elo_expected = (A: number, B: number): number => {\n    return 1 / (1 + 10 ** ((B - A) / 400))\n}\n\nexport const elo = (old: number, exp: number, score: 0 | 1, nbTeam:number=1) => {\n    return old + 32 * (score - exp) / nbTeam\n}","import React from 'react';\nimport { Chip, createStyles, makeStyles } from \"@material-ui/core\";\nimport { EmojiEvents } from '@material-ui/icons';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        backgroundColor: \"rgba(0,0,0,0.9)\",\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        border: \"2px solid #FFFFFF\",\n        zIndex: 0\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n    },\n    third: {\n        color: \"#cd7f32\",\n    }\n}),\n);\nexport interface ScoreChipProps{\n  rank: number\n  score: number\n  deltaScore: boolean\n}\n\nexport default function ScoreChip(props: ScoreChipProps){\n    const classes = useStyles(); \n\n    const getRankBadge = (rank: number) => \n    {\n        if(rank===1) \n            return <EmojiEvents className={classes.first}/>\n        else if(rank===2)\n            return <EmojiEvents className={classes.second}/>\n        else if(rank===3)\n        return <EmojiEvents className={classes.third}/>\n        return <></>\n    }\n\n    let text: string = `${Math.round(props.score)}`, color: string = \"#FDFDFD\"\n    if(props.deltaScore){\n        text = props.score < 0 ? `${Math.round(props.score)}` : `+${Math.round(props.score)}`\n        color= props.score < 0 ? \"#FF2020\" : \"#10FFB0\"\n    }\n    return <Chip className={classes.root} icon={getRankBadge(props.rank)} label={text} size=\"small\" variant=\"outlined\" style={{color: color}}/>\n}\n","import {\n    Grid,\n    Chip,\n    Avatar,\n    Badge,\n    Typography,\n    Paper,\n  } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { LineChart, XAxis, Legend, CartesianGrid, Tooltip, Line, ResponsiveContainer, YAxis } from \"recharts\";\nimport { theme } from \"../../App\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../../types/data\";\nimport { getPlayerLabel, getPlayerProfile, getResult, toChartScore } from \"../../utils/lib\";\nimport ScoreChip from \"../scoreChip/ScoreChip\";\n  \nexport interface LineChartResultProps {\n  players: Array<playerType>,\n  game: gameType,\n}\n\n\n\nexport default function LineChartResult(props: LineChartResultProps){\n  const stateLineDesign = (players: Array<scoreType>, uuid: string) => {\n    let opacity: Record<string, number> = {}\n    let width: Record<string, number> = {}\n   \n    players.forEach((player) => {\n      if(uuid && player.uuid===uuid)\n      {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 4\n      } else if(uuid) {\n        opacity[player.uuid] = 0.7\n        width[player.uuid] = 2\n      } else {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 2\n      }\n    })\n    return { opacity: opacity, width: width }\n  }\n  const [lineDesign, setLineDesign] = useState(stateLineDesign(props.game.players, \"\"));\n\n  const generateLines = (players: Array<scoreType>) => {\n    return players.map((player) => {\n        return <Line key={player.uuid} type=\"natural\" strokeWidth={lineDesign.width[player.uuid]} strokeOpacity={lineDesign.opacity[player.uuid]} dataKey={player.uuid} stroke={getPlayerProfile(props.players,player.uuid).color} yAxisId={1}/>\n      })\n  }\n\n  const handleMouseEnter = (uuid: string) => {\n    setLineDesign(stateLineDesign(props.game.players, uuid))\n  };\n\n  const handleMouseLeave = () => {\n    setLineDesign(stateLineDesign(props.game.players, \"\"));\n  };\n\n\n  const renderLegend = () => {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\"  spacing={5} style={{paddingBottom: theme.spacing(2)}}>\n        {\n          props.game.rankHistory[props.game.rankHistory.length-1].playersRank.sort((a, b) => a.score < b.score ? 1 : -1).map((player,index) => {\n              // <Tooltip title={Math.round(player.score)}>\n                  return <Grid item key={index} onMouseEnter={() => handleMouseEnter(player.playerUuid)} onMouseLeave={() => handleMouseLeave()}><Badge\n                      overlap=\"circle\"\n                      style={{borderColor: \"rgba(0,0,0,0)\"}}\n                      anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                      }}\n                      badgeContent={<ScoreChip rank={index+1} score={player.score} deltaScore={false}/>}\n                  >\n                      <Avatar alt={getPlayerProfile(props.players,player.playerUuid).username} style={{backgroundColor: getPlayerProfile(props.players,player.playerUuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,player.playerUuid))}</Avatar>\n                  </Badge></Grid>\n            })\n        }\n      </Grid>\n    );\n  }\n  const generateLineScorePlayer = (historyEntry: historyEntryType, playerUuid: string, playing: boolean) => {\n    const playerRank = historyEntry.playersRank.filter((player) => player.playerUuid === playerUuid)[0]\n    const playerInfo = getPlayerProfile(props.players, playerUuid)\n    if(playing)\n    {\n      const color = playerRank.deltaScore < 0 ? \"#FF2020\" : \"#10FFB0\" \n      const deltaScore = playerRank.deltaScore < 0 ? `${Math.round(playerRank.deltaScore)}` : `+${Math.round(playerRank.deltaScore)}`\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} style={{backgroundColor: playerInfo.color, color: \"#FFFFFF\"}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1} style={{color: color}}>({deltaScore})</Grid>\n            </Grid>\n    }\n    else\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} variant=\"outlined\" style={{borderColor: playerInfo.color}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1}></Grid>\n            </Grid>\n  }\n\n  const renderPlayersScore = (result: resultType, data: any) => {\n    const historyEntry = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0] as historyEntryType\n\n    const uuidPresentPlayers: Array<string> = []\n    const uuidOtherPlayers: Array<string> = []\n    result.ranks.forEach(rank => uuidPresentPlayers.push(rank.uuid))\n    props.game.players.filter((player) => uuidPresentPlayers.indexOf(player.uuid) <= -1).forEach((player) => uuidOtherPlayers.push(player.uuid))\n    const componentPresentPlayers = uuidPresentPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, true)\n    })\n    const componentOtherPlayers = uuidOtherPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, false)\n    })\n   \n    return [componentPresentPlayers,componentOtherPlayers]\n  }\n\n  const renderTooltip = (propsTooltip: any) => {\n    const { active, payload, label} = propsTooltip\n    if (active && payload && payload.length && label) {\n      return (\n        <Paper variant=\"outlined\" style={{ paddingTop: theme.spacing(2), paddingBottom: theme.spacing(2),paddingLeft: theme.spacing(2),paddingRight: theme.spacing(4)}}>\n          <Typography>{label ? getResult(props.game.results,label).date.toLocaleString() : \"Start\"}</Typography>\n          <Grid container direction=\"column\" spacing={1}>{renderPlayersScore(getResult(props.game.results, label), payload)}</Grid>\n        </Paper>\n      );\n    }\n\n    return null;\n};\n  \n  return (\n    props.game.rankHistory.length && props.game.players.length ? \n    <div style={{width:'100%'}}>\n    <ResponsiveContainer width=\"100%\" height={400}>\n    <LineChart\n      height={400}\n      data={toChartScore(props.game.rankHistory)}\n      margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\n      >\n      <XAxis dataKey=\"resultUuid\" tick={false} />\n      <YAxis yAxisId={1} domain={['dataMin - 50', 'dataMax + 50']}/>\n      <Tooltip content={renderTooltip} />\n      <Legend verticalAlign=\"top\" content={renderLegend}/>\n      <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"3 3\"/>\n      {generateLines(props.game.players).flat()}\n    </LineChart></ResponsiveContainer></div> : <></>\n  );  \n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Badge,\n  Typography,\n  Paper,\nGrid,\nCard,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport LineChartResult from '../../lineChartResult/LineChartResult';\nimport { gameType, playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n    badge: {\n        padding: theme.spacing(1),\n    },\n    first: {\n        padding: theme.spacing(2),\n        border: \"1px solid #FFD700\",\n        background: \"linear-gradient(to top, #FFD700, #FCF6BA)\"\n    },\n    second: {\n        padding: theme.spacing(2),\n        border: \"1px solid #C0C0C0\",\n        background: \"linear-gradient(to top, #B0B0B0, #DFDFDF)\"\n    },\n    third: {\n        padding: theme.spacing(2),\n        border: \"1px solid #cd7f32\",\n        background: \"linear-gradient(to top, #ad5f12, #dd9f52)\"\n    }\n}),\n);\n\nexport interface SummaryProps{\n    players: Array<playerType>,\n    games: Array<gameType>\n}\n\nexport default function Summary(props: SummaryProps){\n  const classes = useStyles(); \n  \n  const renderLineChart = () => {\n      return props.games.map(game => <Grid item><Card><LineChartResult players={props.players} game={game}/></Card></Grid>)\n  }\n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Grid\n                container\n                item\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"stretch\"\n            >\n                <Grid item><Paper className={classes.second}><Grid\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"baseline\"\n                >\n                    <Grid item><Typography>Silver player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n                </Grid>\n                <Grid item><Paper className={classes.first}><Grid\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"baseline\"\n                >\n                    <Grid item><Typography>Gold player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n                </Grid>\n                <Grid item><Paper className={classes.third}><Grid\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"baseline\"\n                >\n                    <Grid item><Typography>Bronze player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n                </Grid>\n            \n            </Grid>\n            {renderLineChart()}\n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { dataType, playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let new_player: playerType = \n    {   \n      uuid: uuid(),\n      username: \"New Player\",\n      color: color,\n    };    \n    props.setPlayers(props.players.concat(new_player));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  ClickAwayListener,\n  InputBase,\n  Typography\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { gameType, playerType } from '../../../types/data';\nimport { calculateNbPosition } from '../../../utils/lib';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    games: Array<gameType>,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n    setCurrentPlayer: React.Dispatch<React.SetStateAction<playerType|undefined>>,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n  return (\n    <Grid item spacing={1} onClick={() => props.setCurrentPlayer(props.player)}>\n        <Card className={classes.Padding}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\"><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                            <Typography>{props.player.username}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,1)} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,2)} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,3)} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\nimport { playerType } from '../../../types/data';\nimport { ChromePicker } from 'react-color';\n\nexport interface EditPlayerProps{\n    player: playerType\n    handleChangePlayer: (player: playerType) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function EditPlayer(props: EditPlayerProps){  \n    const [player, setPlayer] = React.useState(props.player);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Edit player\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={player.username} onChange={(e) => setPlayer({...player, username: e.target.value})} ></Input>\n          </DialogContentText>\n          <DialogContentText>\n            <ChromePicker color={player.color} onChangeComplete={(c) => setPlayer({...player, color: c.hex})} disableAlpha={true}/>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangePlayer(player); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n//   Tooltip,\n} from \"@material-ui/core\";\nimport { playerType } from '../../../types/data';\nimport { Edit, NavigateBefore } from '@material-ui/icons';\nimport { severityType } from '../../../types/notification';\nimport EditPlayer from './EditPlayer'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface PlayerCompleteCardProps{\n    player: playerType,\n    changePlayerData: (player: playerType, uuid: string) => void,\n    setCurrentPlayer: React.Dispatch<React.SetStateAction<playerType|undefined>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function PlayerCompleteCard(props: PlayerCompleteCardProps){\n  const classes = useStyles(); \n\n  const [editMode, setEditMode] = React.useState(false);\n \n  const handleChangePlayer = (player: playerType) => {\n    props.changePlayerData(player, player.uuid)\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentPlayer(undefined)}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography style={{color: props.player.color}} variant=\"h3\" align=\"center\">\n                {props.player.username}\n            </Typography>\n        </Grid>\n       \n        </Grid>\n    </Card>\n    {editMode && <EditPlayer setEditMode={setEditMode} handleChangePlayer={handleChangePlayer} player={props.player}></EditPlayer>}\n    </>\n  );\n}","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { gameType, playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\nimport PlayerCompleteCard from './PlayerCompleteCard';\n\nexport interface PlayersProps{\n  players: Array<playerType>,\n  games: Array<gameType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Players(props: PlayersProps){\n\n    const [currentPlayer, setCurrentPlayer] = useState(undefined as unknown as playerType | undefined);\n\n\n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} games={props.games} changePlayerData={changePlayerData} setCurrentPlayer={setCurrentPlayer}></PlayerCard>))\n    };\n\n    const changePlayerData = (player: playerType, uuid: string) => {\n      let new_data: Array<playerType> = props.players;\n      new_data.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, player) : el))   \n      props.setPlayers(new_data);\n    }\n\n  return (\n    <Container>\n      { currentPlayer ?\n        <PlayerCompleteCard player={currentPlayer} changePlayerData={changePlayerData} addNotification={props.addNotification} setCurrentPlayer={setCurrentPlayer} /> :\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader players={props.players} setPlayers={props.setPlayers}></PlayersHeader>\n            {renderPlayerCards(props.players)}\n       </Grid> }\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by @stephane_branly.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it.</Typography>\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport { Publish, GetApp } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface LoadSaveProps{\n    handlerSaveData: () => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: LoadSaveProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  // className={classes.input}\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                    startIcon={<Publish />}\n                  >\n                    Load data\n                  </Button>\n                </label>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<GetApp />}\n                onClick={props.handlerSaveData}\n              >\n                Save data\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport LoadSave, { LoadSaveProps } from './LoadSave';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsProps{\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: SettingsProps){\n    const classes = useStyles(); \n  \n    const LoadSaveProps: LoadSaveProps = \n    { \n      handlerSaveData: props.handlerSaveData,\n      handlerLoadData: props.handlerLoadData,\n    }\n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <LoadSave {...LoadSaveProps}></LoadSave>\n          <About></About>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addGame = () => {\n    let newGame: gameType = \n    {   \n      uuid: uuid(),\n      gamename: \"New game\",\n      results: [],\n      players: [],\n      rankHistory: []\n    }\n    props.setGames(props.games.concat(newGame));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addGame()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.setCurrentGame(props.game)}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography>{props.game.gamename}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultWhoProps{\n    players: Array<playerType>,\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultWho(props: GameAddResultWhoProps){\n  const classes = useStyles(); \n\n  const playerInResults = (uuidPlayer: string) => {\n    return (props.selectedPlayers.filter(player => (player.uuid === uuidPlayer)).length !== 0)\n  }\n  const togglePlayer = (uuidPlayer: string) => {\n    if(playerInResults(uuidPlayer))\n      props.setSelectedPlayers(props.selectedPlayers.filter(player => player.uuid !== uuidPlayer));\n    else\n      props.setSelectedPlayers([...props.selectedPlayers,{uuid: uuidPlayer, rank: 1}]);\n  }\n   \n  const renderCheckboxPlayers = (players: Array<playerType>) => {\n    return players.map((player) => \n    <ListItem key={player.uuid} dense button onClick={() => togglePlayer(player.uuid)}>\n      <ListItemIcon>\n          <Checkbox\n            edge=\"end\"\n            tabIndex={-1}\n            disableRipple\n            checked={playerInResults(player.uuid)}\n            onClick={() => togglePlayer(player.uuid)}\n            style={{color: player.color}}\n        />\n        </ListItemIcon>\n        <ListItemText id={player.uuid} primary={player.username} />\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n      <Typography>Who was playing?</Typography>\n      <List>\n        {renderCheckboxPlayers(props.players)}\n      </List>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n} from \"@material-ui/core\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\nexport interface GameAddResultWhenProps{\n    selectedDate: Date,\n    setSelectedDate: React.Dispatch<React.SetStateAction<Date>>\n}\n\nexport default function GameAddResultWhen(props: GameAddResultWhenProps){\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    props.setSelectedDate(date as Date);\n  };\n\n  return (\n    <DialogContent dividers>\n        <Typography>When?</Typography>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n            value={props.selectedDate}\n            onChange={handleDateChange}\n            showTodayButton\n            format=\"dd/MM/yyyy HH:mm\"\n            />\n        </MuiPickersUtilsProvider>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n  Avatar,\n  Grid,\n  MenuItem,\n  Select,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\nimport { getPlayerProfile, getPlayerLabel } from '../../../utils/lib';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultRanksProps{\n    players: Array<playerType>\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultRanks(props: GameAddResultRanksProps){\n  const classes = useStyles(); \n  \n  const handleChange = (event: any,uuidPlayer: string) => {\n    let new_data: Array<scoreType> = props.selectedPlayers;\n    new_data.map((el: scoreType) => (el.uuid === uuidPlayer ? el.rank=event.target.value : el))   \n    props.setSelectedPlayers(new_data);\n  };\n\n  const renderPossibilities = () =>  {\n    let possibilities: any = [];\n\n    for(let i = 1; i<props.selectedPlayers.length+1; i++)\n    possibilities.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n\n    return possibilities;\n  }\n \n\n\n  const renderPlayerRank = (selectedPlayers: Array<scoreType>) => {\n    return selectedPlayers.map((player) =>\n    <ListItem key={player.uuid} dense button>\n      <Grid container\n        direction=\"row\"\n        alignItems=\"baseline\"\n        justify=\"space-between\"\n        spacing={1}\n        >\n          <Grid item><Avatar alt={player.uuid} style={{backgroundColor: getPlayerProfile(props.players, player.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players, player.uuid))}</Avatar></Grid>\n          <Grid item><Typography>{getPlayerProfile(props.players, player.uuid).username}</Typography></Grid>\n          <Grid item><Select\n              value={player.rank}\n              onChange={(event) => handleChange(event,player.uuid)}\n            >\n              {renderPossibilities()}\n          </Select>\n        </Grid>\n        </Grid>\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n        <Typography>Ranks</Typography>\n        <List>\n          {renderPlayerRank(props.selectedPlayers)}\n        </List>\n    </DialogContent>);\n}\n","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\n\nexport interface DeleteResultProps{\n  deleteResult: () => void,\n  setDeleteResultOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteResult(props: DeleteResultProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteResultOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this Result?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this Result and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteResultOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteResult()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { gameType, playerType, scoreType, resultType } from '../../../types/data';\nimport { Delete, NavigateBefore, NavigateNext, PostAdd } from '@material-ui/icons';\nimport GameAddResultWho from './GamesAddResultWho';\nimport GameAddResultWhen from './GameAddResultWhen';\nimport GameAddResultRanks from './GameAddResultRanks';\nimport { severityType } from '../../../types/notification';\nimport { getPlayerProfile } from '../../../utils/lib';\nimport { uuid } from 'uuidv4';\nimport DeleteResult from './DeleteResult';\n\nexport interface GameAddResultProps{\n    game: gameType,\n    players: Array<playerType>,\n    addResultOpen: {id:string|undefined, open:boolean},\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    addResult: (result: resultType, id: string | undefined) => void,\n    deleteResult: (uuid: string) => void,\n}\n\nexport default function GameAddResult(props: GameAddResultProps){\n  const [currentStep, setCurrentStep] = React.useState(\"who\");\n  const [selectedDate, setSelectedDate] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].date : new Date());\n  const [selectedPlayers, setSelectedPlayers] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].ranks : [] as Array<scoreType>);\n  const [deleteResultOpen, setDeleteResultOpen] = React.useState(false);\n\n  const displayCurrentStep = () => {\n    if(currentStep === \"who\")\n      return (<GameAddResultWho players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    if(currentStep === \"when\")\n      return (<GameAddResultWhen setSelectedDate={setSelectedDate} selectedDate={selectedDate}/>);\n\n    if(currentStep === \"ranks\")\n      return (<GameAddResultRanks players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    return <Typography>ERROR</Typography>\n  }\n\n  const nextStep = () => {\n    if(currentStep === \"who\")\n    {\n      if(selectedPlayers.length < 2)\n        props.addNotification(\"Please select a least 2 players\",\"error\");\n      else\n      {\n        setCurrentStep(\"when\");\n        const sorted = selectedPlayers.sort((a, b) => getPlayerProfile(props.players,a.uuid).username > getPlayerProfile(props.players,b.uuid).username ? 1 : -1)\n        setSelectedPlayers(sorted);\n      }\n    }\n    else if(currentStep === \"when\")\n      setCurrentStep(\"ranks\");\n  }\n  const backStep = () => {\n    if(currentStep === \"when\")\n      setCurrentStep(\"who\");\n    else if(currentStep === \"ranks\")\n      setCurrentStep(\"when\");\n  }\n\n  const addResult = () => {\n    let rank: number = 0;\n    let validResult: boolean = false;\n    selectedPlayers.forEach(player => {\n      if(rank===0)\n        rank=player.rank;\n      if(rank!==player.rank)\n        validResult=true;\n    });\n    if(validResult){\n      const sorted = selectedPlayers.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      setSelectedPlayers(sorted);\n      \n      const result: resultType = \n      {\n        date: selectedDate,\n        ranks: selectedPlayers,\n        uuid: uuid(),\n      }\n      if(props.addResultOpen.id)\n        props.addNotification(\"Result correctly edited\",\"success\");\n      else\n        props.addNotification(\"New result correctly added\",\"success\");\n\n      props.setAddResultOpen({id:undefined, open: false})\n      props.addResult(result,props.addResultOpen.id);\n    }\n    else\n      props.addNotification(\"Results need at least two different rank\",\"error\");\n  }\n\n  const deleteResult = () => {\n    setDeleteResultOpen(false)\n    props.setAddResultOpen({id:undefined, open:false})\n    props.deleteResult(props.addResultOpen.id!)\n  }\n\n  return (\n    <><Dialog fullWidth={true} maxWidth=\"sm\" open={props.addResultOpen.open}>\n    {props.addResultOpen.id ?  <DialogTitle>Edit result</DialogTitle> :  <DialogTitle>New result</DialogTitle>}\n    {displayCurrentStep()}\n    <DialogActions>\n      <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n        <Button onClick={() => props.setAddResultOpen({id:undefined, open:false})} >\n            Cancel\n        </Button>\n        {props.addResultOpen.id && <Button onClick={() => setDeleteResultOpen(true)}><Delete/></Button>}\n        <Button autoFocus disabled={currentStep === \"who\"} onClick={() => backStep()}>\n          <NavigateBefore/>\n        </Button>\n        {currentStep === \"ranks\" ? \n            <Button autoFocus onClick={() => addResult()} endIcon={<PostAdd/>}>\n              Send\n            </Button> :\n            <Button autoFocus onClick={() => nextStep()}>\n              <NavigateNext/>\n            </Button>\n        }\n       </ButtonGroup>\n    </DialogActions>\n  </Dialog>\n        {deleteResultOpen && <DeleteResult setDeleteResultOpen={setDeleteResultOpen} deleteResult={deleteResult}/>}\n  </>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Avatar,\n  Badge,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { playerRankHistory, playerType, resultType } from '../../../types/data';\nimport { getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ScoreChip from '../../scoreChip/ScoreChip';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n}),\n);\n\nexport interface ResultCardProps{\n    result: resultType,\n    players: Array<playerType>,\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    playersRank: Array<playerRankHistory>\n}\n\nexport default function ResultCard(props: ResultCardProps){\n  const classes = useStyles(); \n\n  \n  const displayPlayersBadges = () => {\n    return (props.result.ranks.map((rank) => \n    {\n        const playerRank = props.playersRank.filter(player => player.playerUuid === rank.uuid)[0] \n        const title = `New score: ${Math.round(playerRank.score)}`\n\n        return <Grid item>\n            <Tooltip title={title}>\n            <Badge\n            overlap=\"circle\"\n            style={{borderColor: \"rgba(0,0,0,0)\"}}\n            anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n            }}\n            badgeContent={<ScoreChip rank={rank.rank} score={playerRank.deltaScore} deltaScore={true}/>}\n            >\n            \n            <Avatar alt={getPlayerProfile(props.players,rank.uuid).username} style={{backgroundColor: getPlayerProfile(props.players,rank.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,rank.uuid))}</Avatar>\n            </Badge>\n            </Tooltip>\n        </Grid>\n    }\n    ));\n  }\n\n  return (\n    <Grid item>\n        <Card className={classes.Padding} onClick={()=>props.setAddResultOpen({id: props.result.uuid, open:true})}>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n            <Grid item>\n                <Grid \n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    {displayPlayersBadges()}\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Typography>{props.result.date.toLocaleString()}</Typography>\n            </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n  );\n}","import React, { ChangeEvent, VoidFunctionComponent } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\n\nexport interface DeleteGameProps{\n  deleteGame: () => void,\n  setDeleteGameOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteGame(props: DeleteGameProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteGameOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this game?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this game and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteGameOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteGame()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\n\n\nexport interface EditGameProps{\n    handleChangeGamename: (newGamename: string) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n    currentGamename: string,\n}\n\nexport default function EditGame(props: EditGameProps){  \n    const [gamename, setGamename] = React.useState(props.currentGamename);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Change the gamename\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={gamename} onChange={(e) => setGamename(e.target.value)} ></Input>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangeGamename(gamename); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n//   Tooltip,\n} from \"@material-ui/core\"\nimport { gameType, playerType, resultType } from '../../../types/data'\nimport { Delete, Edit, NavigateBefore, PostAdd } from '@material-ui/icons'\nimport GameAddResult from './GameAddResult'\nimport { severityType } from '../../../types/notification'\nimport { calculatePresentPlayers, calculateRanking } from '../../../utils/lib'\nimport ResultCard from './ResultCard'\nimport DeleteGame from './DeleteGame'\nimport EditGame from './EditGame'\nimport LineChartResult from '../../lineChartResult/LineChartResult'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n)\nexport interface GameCompleteCardProps{\n    game: gameType,\n    players: Array<playerType>,\n    changeGameData: (game: gameType, uuid: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    deleteGame: (uuid: string) => void\n}\n\nexport default function GameCompleteCard(props: GameCompleteCardProps){\n  const classes = useStyles()\n\n  const [addResultOpen, setAddResultOpen] = React.useState({id: undefined as string|undefined, open:false})\n  const [editMode, setEditMode] = React.useState(false)\n  const [deleteGameOpen, setDeleteGameOpen] = React.useState(false)\n\n  const handleChangeGamename = (newGamename: string) => {\n    let newData: gameType = Object.assign({}, props.game)\n    newData.gamename = newGamename\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const deleteGame = () => {\n    props.addNotification(\"Game correctly deleted\",\"success\")\n    setDeleteGameOpen(false)\n    props.deleteGame(props.game.uuid)\n  }\n\n  const deleteResult = (id: string) => {\n    let newData: gameType = Object.assign({}, props.game)\n    newData.results = newData.results.filter(result => result.uuid !== id)\n    newData.players = calculatePresentPlayers(newData)\n    newData.rankHistory = calculateRanking(newData)\n\n    props.addNotification(\"Result correctly deleted\",\"success\")\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const addResult = (newResult: resultType, id: string|undefined) => {\n    let newData: gameType = Object.assign({}, props.game)\n    if(!newData.results)\n        newData.results = []\n    else if(id)\n        newData.results = newData.results.filter(item => item.uuid !== id)\n    newData.results.push(newResult)\n    newData.players = calculatePresentPlayers(newData)\n    newData.rankHistory = calculateRanking(newData)\n\n    if(newData.players)\n    {\n        const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n        newData.players = sortedRanks\n    }\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const displayResults = () => {\n    if (props.game.results){\n        return props.game.results.sort((a,b) => a.date < b.date ? 1 : -1).map(result => {\n            const playersRank = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0].playersRank\n            return <ResultCard result={result} players={props.players} setAddResultOpen={setAddResultOpen} playersRank={playersRank}></ResultCard>}\n        );\n    }\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentGame(undefined)}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button endIcon={<PostAdd/>}  onClick={() => setAddResultOpen({id: undefined, open:true})}>New result</Button>\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                    <Button onClick={() => setDeleteGameOpen(true)}><Delete/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography color=\"primary\" variant=\"h3\" align=\"center\">\n                {props.game.gamename}\n            </Typography>\n        </Grid>\n        {props.game.players && \n        <Grid item>\n            <LineChartResult players={props.players} game={props.game}/>\n        </Grid>}\n       \n        </Grid>\n        {addResultOpen.open ? <GameAddResult game={props.game} players={props.players} addResultOpen={addResultOpen} setAddResultOpen={setAddResultOpen} addNotification={props.addNotification} addResult={addResult} deleteResult={deleteResult}></GameAddResult> : <></>}\n    </Card>\n    <Grid \n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={1}\n    >\n        {displayResults()}\n    </Grid>\n    {deleteGameOpen && <DeleteGame setDeleteGameOpen={setDeleteGameOpen} deleteGame={deleteGame}></DeleteGame>}\n    {editMode && <EditGame setEditMode={setEditMode} handleChangeGamename={handleChangeGamename} currentGamename={props.game.gamename}></EditGame>}\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { gameType, playerType } from '../../../types/data';\nimport GameCompleteCard from './GameCompleteCard';\nimport { severityType } from '../../../types/notification';\n\nexport interface GamesProps{\n    games: Array<gameType>,\n    players: Array<playerType>\n    setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Games(props: GamesProps){\n    const [currentGame, setCurrentGame] = useState(undefined as unknown as gameType|undefined);\n\n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData} setCurrentGame={setCurrentGame}></GameCard>))\n    };\n\n    const changeGameData = (game: gameType, uuid: string) => {\n        let new_data: Array<gameType> = props.games\n        new_data.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, game) : el))   \n        props.setGames(new_data);\n    }\n\n    const deleteGame = (uuid: string) => {\n        let new_data: Array<gameType> = props.games.filter(item => item.uuid !== uuid);\n        setCurrentGame(undefined);\n        props.setGames(new_data);\n        props.addNotification(\"Game correctly deleted\",\"success\");\n    }\n\n    return (\n    <Container>\n        { currentGame?\n            <GameCompleteCard game={currentGame} changeGameData={changeGameData} setCurrentGame={setCurrentGame} players={props.players} addNotification={props.addNotification} deleteGame={deleteGame}></GameCompleteCard>\n            :\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n                <GamesHeader games={props.games} setGames={props.setGames}></GamesHeader>\n                {renderGameCards(props.games)}\n        </Grid>\n        }\n    </Container>\n  );\n}","import React from 'react';\nimport Summary from \"./summary/Summary\"\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport { gameType, playerType } from '../../types/data';\nimport { severityType } from '../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n   \n  },\n}),\n);\n  \nexport interface PagesProps{\n  currentPage: string,\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'summary':\n          return <Summary players={props.players} games={props.games}></Summary>;\n        case 'players':\n          return <Players players={props.players} games={props.games} setPlayers={props.setPlayers} addNotification={props.addNotification}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData}></Settings>;\n        case 'games':\n          return <Games games={props.games} setGames={props.setGames} players={props.players} addNotification={props.addNotification}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport interface NotificationProps{\n  notification: notificationType,\n  setNotification: any,\n}\n\nexport default function Notification(props: NotificationProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotification({open: false});\n  };\n\n    return (\n       props.notification.open ?  \n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal:'right'}}\n          open={props.notification.open}\n          autoHideDuration={6000} \n          onClose={handleClose}\n        >\n          <Alert severity={props.notification.severity ? props.notification.severity : \"info\"} onClose={handleClose}>{props.notification.text}</Alert>\n        </Snackbar> \n        :\n        <></>\n  );\n}","import React from \"react\"\nimport {\n  createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme,\n} from \"@material-ui/core/styles\"\nimport Header from \"./components/header/Header\"\nimport Footer, { FooterProps } from \"./components/footer/Footer\"\nimport Pages, { PagesProps } from \"./components/pages/Pages\"\nimport { dataType, gameType, playerType } from \"./types/data\"\nimport Notifications, { NotificationProps } from \"./components/pages/notifications/Notification\"\nimport { notificationType, severityType } from \"./types/notification\"\nimport { generateGameFromLoadedData } from \"./utils/lib\"\n\nexport const theme = createMuiTheme({\n  palette: {\n    error: {\n      main: \"#DD0505\",\n    },\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n})\n\nconst useStyles = makeStyles((theme) => createStyles({\n  App: {\n    paddingBottom: theme.spacing(15),\n  },\n}))\n\nfunction App() {\n  const [page, setPage] = React.useState(\"summary\")\n  const [players, setPlayers] = React.useState([]as Array<playerType>)\n  const [games, setGames] = React.useState([] as Array<gameType>)\n  const [notification, setNotification] = React.useState({ open: false } as notificationType)\n\n  const classes = useStyles()\n\n  const handlerSaveData = () => {\n    const data = {\n      players,\n      games: games.map(game => { return { uuid: game.uuid, gamename: game.gamename, results: game.results }})\n    }\n    const FileSaver = require(\"file-saver\")\n    const json = JSON.stringify(data)\n    const blob = new Blob([json], { type: \"application/json\" })\n    FileSaver.saveAs(blob, \"save_game-ranking.json\")\n  }\n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      e.preventDefault()\n      const reader = new FileReader()\n      reader.onload = async (e) => {\n        if (e.target?.result) {\n          const data = JSON.parse(e.target.result as string)\n          setPlayers(data.players)\n          const games: Array<gameType> = data.games.map((game: { uuid: any; gamename: any; results: any }) => generateGameFromLoadedData(game))\n          setGames(games)\n          addNotification(\"Data correctly loaded\", \"success\")\n          setPage(\"summary\")\n        }\n      }\n      if (e.target?.files) {\n        reader.readAsText(e.target.files[0])\n      }\n    } catch {\n      addNotification(\"Error when loading data\", \"error\")\n    }\n  }\n\n  const addNotification = (text: string, severity?: severityType) => {\n    const new_notification = {\n      open: true,\n      text,\n      severity: severity || undefined,\n    }\n    setNotification(new_notification)\n  }\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, newPage: string) => {\n    setPage(newPage)\n  }\n\n  const pagesProps: PagesProps = {\n    currentPage: page,\n    games,\n    setGames,\n    players,\n    setPlayers,\n    handlerSaveData,\n    handlerLoadData,\n    addNotification,\n  }\n\n  const footerProps: FooterProps = {\n    handleChangeCurrentPage,\n    currentPage: page,\n  }\n\n  const notificationsProps: NotificationProps = {\n    notification,\n    setNotification,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header />\n        <Pages {...pagesProps} />\n        <Footer {...footerProps} />\n      </div>\n      <Notifications {...notificationsProps} />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}