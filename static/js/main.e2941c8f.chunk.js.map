{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/pages/summary/Summary.tsx","components/pages/players/PlayersHeader.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/LoadSave.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","badge","padding","first","border","second","third","Summary","Container","Grid","container","direction","justify","alignItems","item","Paper","Badge","PlayersHeader","Card","data","players","length","Button","color","startIcon","onClick","require","randomColor","new_data","Object","assign","push","uuid","username","setData","addPlayer","Padding","ColorPicker","zIndex","Name","paddingLeft","paddingRight","borderRadius","margin","PlayerCard","React","useState","colorPickerOpen","setColorPickerOpen","player","setUsername","IconButton","size","style","ClickAwayListener","onClickAway","changePlayerData","handleChangeUsername","InputBase","e","target","defaultValue","badgeContent","showZero","onChangeComplete","hex","disableAlpha","Players","map","el","subSection","marginLeft","borderLeft","About","Settings","display","accept","id","type","handlerLoadData","htmlFor","component","Publish","GetApp","handlerSaveData","LoadSaveProps","GamesHeader","games","new_game","gamename","GameCard","game","setGamename","changeGameData","handleChangeGamename","Games","Pages","renderPage","createMuiTheme","primary","App","paddingBottom","setValue","pages_props","FileSaver","json","JSON","stringify","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","a","result","parse","files","readAsText","footer_prop","event","newValue","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2941c8f.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={currentPage === \"summary\" ? <Timeline /> : <TimelineOutlined />} />\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Badge,\n  Typography,\n  Paper,\nGrid,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n    badge: {\n        padding: theme.spacing(1),\n    },\n    first: {\n        padding: theme.spacing(2),\n        border: \"1px solid #FFD700\",\n        background: \"linear-gradient(to top, #FFD700, #FCF6BA)\"\n    },\n    second: {\n        padding: theme.spacing(2),\n        border: \"1px solid #C0C0C0\",\n        background: \"linear-gradient(to top, #B0B0B0, #DFDFDF)\"\n    },\n    third: {\n        padding: theme.spacing(2),\n        border: \"1px solid #cd7f32\",\n        background: \"linear-gradient(to top, #ad5f12, #dd9f52)\"\n    }\n}),\n);\n\nexport interface SummaryProps{\n\n}\n\nexport default function Summary(props: SummaryProps){\n  const classes = useStyles(); \n  \n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Grid item><Paper className={classes.second}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Silver player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.first}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Gold player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.third}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Bronze player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n          \n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { dataType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  data: dataType,\n  setData: React.Dispatch<React.SetStateAction<dataType>>\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let new_data = Object.assign({}, props.data);  // creating copy of state variable jasper\n    new_data.players.push(\n      {   \n        uuid: uuid(),\n        username: \"New Player\",\n        color: color,\n      });    \n    props.setData(new_data);\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.data.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  ClickAwayListener,\n  InputBase\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport { playerType } from '../../../types/data';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n\n  const [colorPickerOpen, setColorPickerOpen] = React.useState(false);\n  const [username, setUsername] = React.useState(props.player.username);\n\n  const handleColorChangeComplete = (color: ColorResult) => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.color = color.hex;\n    props.changePlayerData(new_data, props.player.uuid);\n  };\n\n  const handleChangeUsername = () => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.username = username;\n    props.changePlayerData(new_data, props.player.uuid);\n  }\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\" onClick={()=>{setColorPickerOpen(true)}}><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                                <ClickAwayListener onClickAway={() => handleChangeUsername()}><InputBase className={classes.Name} onChange={(e) => setUsername(e.target.value)} defaultValue={props.player.username}/></ClickAwayListener>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={4} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={14} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={0} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {colorPickerOpen && (\n                <ClickAwayListener onClickAway={() => setColorPickerOpen(false)}>\n                    <ChromePicker className={classes.ColorPicker} color={props.player.color} onChangeComplete={handleColorChangeComplete} disableAlpha={true}/>\n                </ClickAwayListener>\n            )}\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { dataType, playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n\n}),\n);\n\nexport interface PlayersProps{\n  data: dataType,\n  setData: React.Dispatch<React.SetStateAction<dataType>>\n}\n\nexport default function Players(props: PlayersProps){\n    const classes = useStyles(); \n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} changePlayerData={changePlayerData}></PlayerCard>))\n    };\n\n    const changePlayerData = (data: playerType, uuid: string) => {\n      let new_data: dataType = Object.assign({}, props.data);\n      new_data.players.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, data) : el))   \n      props.setData(new_data);\n    }\n\n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader data={props.data} setData={props.setData}></PlayersHeader>\n            {renderPlayerCards(props.data.players)}\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography  variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by @stephane_branly.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography  variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it.</Typography>\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport { Publish, GetApp } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface LoadSaveProps{\n    handlerSaveData: () => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: LoadSaveProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  // className={classes.input}\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                    startIcon={<Publish />}\n                  >\n                    Load data\n                  </Button>\n                </label>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<GetApp />}\n                onClick={props.handlerSaveData}\n              >\n                Save data\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport LoadSave, { LoadSaveProps } from './LoadSave';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsProps{\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: SettingsProps){\n    const classes = useStyles(); \n  \n    const LoadSaveProps: LoadSaveProps = \n    { \n      handlerSaveData: props.handlerSaveData,\n      handlerLoadData: props.handlerLoadData,\n    }\n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <LoadSave {...LoadSaveProps}></LoadSave>\n          <About></About>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { dataType, gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  data: dataType,\n  setData: React.Dispatch<React.SetStateAction<dataType>>\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    let new_data: dataType = Object.assign({}, props.data);\n    let new_game: gameType = {   \n      uuid: uuid(),\n      gamename: \"New game\",\n    }\n    new_data.games.push(new_game);    \n    props.setData(new_data);\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.data.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addPlayer()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  ClickAwayListener,\n  InputBase\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n  const [gamename, setGamename] = React.useState(props.game.gamename);\n\n  const handleChangeGamename = () => {\n    let new_data: gameType = Object.assign({}, props.game); \n    new_data.gamename = gamename;\n    props.changeGameData(new_data, props.game.uuid);\n  }\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                                <ClickAwayListener onClickAway={() => handleChangeGamename()}><InputBase className={classes.Name} onChange={(e) => setGamename(e.target.value)} defaultValue={props.game.gamename}/></ClickAwayListener>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { dataType, gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface GamesProps{\n    data: dataType,\n    setData: React.Dispatch<React.SetStateAction<dataType>>\n}\n\nexport default function Games(props: GamesProps){\n    const classes = useStyles(); \n    \n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData}></GameCard>))\n    };\n\n    const changeGameData = (data: gameType, uuid: string) => {\n        let new_data: dataType = Object.assign({}, props.data) ;\n        new_data.games.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, data) : el))   \n        props.setData(new_data);\n    }\n\n    return (\n        <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <GamesHeader data={props.data} setData={props.setData}></GamesHeader>\n            {renderGameCards(props.data.games)}\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport Summary from \"./summary/Summary\"\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport { dataType } from '../../types/data';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n   \n  },\n}),\n);\n  \nexport interface PagesProps{\n  currentPage: string,\n  data: dataType,\n  setData: React.Dispatch<React.SetStateAction<dataType>>,\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  const classes = useStyles(); \n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'summary':\n          return <Summary></Summary>;\n        case 'players':\n          return <Players data={props.data} setData={props.setData}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData}></Settings>;\n        case 'games':\n          return <Games data={props.data} setData={props.setData}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import Header from './components/header/Header'\nimport Footer, { FooterProps } from './components/footer/Footer'\nimport Pages, { PagesProps } from './components/pages/Pages'\nimport React from 'react';\nimport { createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { dataType } from './types/data';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    App: {\n      paddingBottom: theme.spacing(15)\n    }\n  }),\n);\n\nfunction App() {\n  let datatmp: dataType = {\n    players: [],\n    games: []\n  }\n\n  const [value, setValue] = React.useState('summary');\n  const [data, setData] = React.useState(datatmp);\n\n  const classes = useStyles(); \n\n  \n\n  const handlerSaveData = () => {\n    var FileSaver = require('file-saver');\n    var json = JSON.stringify(data);\n    var blob = new Blob([json], {type: \"application/json\"});\n    FileSaver.saveAs(blob, \"save_game-ranking.json\");\n  } \n\n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (e) => {   \n      if(e.target?.result)\n      {\n        const data = JSON.parse(e.target.result as string);\n        setData(data);  \n      }\n    };\n    if(e.target?.files)\n    {\n      reader.readAsText(e.target.files[0]);\n    }\n  };\n\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setValue(newValue);\n  };\n\n  let pages_props: PagesProps = {\n    currentPage:value,\n    data:data,\n    handlerSaveData: handlerSaveData,\n    handlerLoadData: handlerLoadData,\n    setData: setData,\n  }\n  let footer_prop: FooterProps = {\n    handleChangeCurrentPage:handleChangeCurrentPage,\n    currentPage:value\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header></Header>\n        <Pages {...pages_props}></Pages>\n        <Footer {...footer_prop}></Footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}