{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/pages/summary/Summary.tsx","components/pages/players/PlayersHeader.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/LoadSave.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/GamesAddResultWho.tsx","components/pages/games/GameAddResultWhen.tsx","utils/lib.tsx","utils/elo.tsx","components/pages/games/GameAddResultResults.tsx","components/pages/games/GameAddResult.tsx","components/scoreChip/ScoreChip.tsx","components/pages/games/ResultCard.tsx","components/pages/games/DeleteGame.tsx","components/pages/games/EditGame.tsx","components/lineChartResult/LineChartResult.tsx","components/pages/games/GameCompleteCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","components/pages/notifications/Notification.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","zIndex","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","badge","padding","first","border","second","third","Summary","Container","Grid","container","direction","justify","alignItems","item","Paper","Badge","PlayersHeader","Card","players","length","Button","color","startIcon","onClick","require","randomColor","new_player","uuid","username","setPlayers","concat","addPlayer","Padding","ColorPicker","Name","paddingLeft","paddingRight","borderRadius","margin","PlayerCard","React","useState","colorPickerOpen","setColorPickerOpen","player","setUsername","addNotification","IconButton","size","style","ClickAwayListener","onClickAway","new_data","Object","assign","changePlayerData","handleChangeUsername","InputBase","e","target","defaultValue","badgeContent","showZero","onChangeComplete","hex","disableAlpha","Players","map","el","subSection","marginLeft","borderLeft","About","Settings","display","accept","id","type","handlerLoadData","htmlFor","component","Publish","GetApp","handlerSaveData","LoadSaveProps","GamesHeader","games","newGame","gamename","results","rankHistory","setGames","addGame","GameCard","setCurrentGame","game","GameAddResultWho","playerInResults","uuidPlayer","selectedPlayers","filter","togglePlayer","setSelectedPlayers","rank","DialogContent","dividers","List","ListItem","dense","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","checked","ListItemText","primary","GameAddResultWhen","utils","DateFnsUtils","DateTimePicker","selectedDate","date","setSelectedDate","showTodayButton","format","getPlayerProfile","getResult","resultUuid","result","getPlayerLabel","toUpperCase","calculateRanking","push","playersRank","playerUuid","score","deltaScore","lastEntry","sort","a","b","forEach","newEntry","generateNewEntry","p","ranks","currentPlayer","nbSameRank","rankFilter","otherPlayers","index","getIndexInEntry","lastScoreCurrentPlayer","sumDeltaScore","otherPlayer","A","B","lastScoreOtherPlayer","win","expected","newScore","old","exp","elo","entry","findIndex","obj","toChartScore","scores","chartScore","entreyToChartScore","console","log","playerRank","Math","round","generateGameFromLoadedData","newData","newResult","Date","some","sortedRanks","GameAddResultResults","renderPossibilities","possibilities","i","MenuItem","Avatar","alt","Select","event","handleChange","GameAddResult","currentStep","setCurrentStep","addResultOpen","Dialog","fullWidth","maxWidth","open","DialogTitle","DialogActions","setAddResultOpen","undefined","autoFocus","disabled","NavigateBefore","validResult","sorted","addResult","endIcon","PostAdd","nextStep","NavigateNext","ScoreChip","text","Chip","ResultCard","Tooltip","overlap","borderColor","anchorOrigin","vertical","horizontal","toLocaleString","DeleteGame","onClose","reason","setDeleteGameOpen","DialogContentText","deleteGame","EditGame","currentGamename","setGamename","setEditMode","Input","handleChangeGamename","LineChartResult","stateLineDesign","opacity","lineDesign","setLineDesign","generateLineScorePlayer","historyEntry","playing","playerInfo","alignContent","xs","renderPlayersScore","data","uuidPresentPlayers","uuidOtherPlayers","indexOf","ResponsiveContainer","height","LineChart","top","right","left","XAxis","dataKey","tick","YAxis","yAxisId","domain","content","propsTooltip","active","payload","paddingTop","paddingBottom","Legend","verticalAlign","onMouseEnter","onMouseLeave","CartesianGrid","stroke","strokeDasharray","Line","strokeWidth","strokeOpacity","flat","Main","GameCompleteCard","editMode","deleteGameOpen","ButtonGroup","disableElevation","Edit","Delete","align","changeGameData","displayResults","newGamename","Games","currentGame","Pages","renderPage","Alert","elevation","Notification","handleClose","setNotification","notification","Snackbar","autoHideDuration","severity","createMuiTheme","error","App","page","setPage","pagesProps","FileSaver","json","JSON","stringify","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","parse","files","readAsText","footerProps","newPage","notificationsProps","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e7a1cac.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 100,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={currentPage === \"summary\" ? <Timeline /> : <TimelineOutlined />} />\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Badge,\n  Typography,\n  Paper,\nGrid,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n    badge: {\n        padding: theme.spacing(1),\n    },\n    first: {\n        padding: theme.spacing(2),\n        border: \"1px solid #FFD700\",\n        background: \"linear-gradient(to top, #FFD700, #FCF6BA)\"\n    },\n    second: {\n        padding: theme.spacing(2),\n        border: \"1px solid #C0C0C0\",\n        background: \"linear-gradient(to top, #B0B0B0, #DFDFDF)\"\n    },\n    third: {\n        padding: theme.spacing(2),\n        border: \"1px solid #cd7f32\",\n        background: \"linear-gradient(to top, #ad5f12, #dd9f52)\"\n    }\n}),\n);\n\nexport interface SummaryProps{\n\n}\n\nexport default function Summary(props: SummaryProps){\n  const classes = useStyles(); \n  \n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Grid item><Paper className={classes.second}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Silver player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.first}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Gold player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.third}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Bronze player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n          \n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { dataType, playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let new_player: playerType = \n    {   \n      uuid: uuid(),\n      username: \"New Player\",\n      color: color,\n    };    \n    props.setPlayers(props.players.concat(new_player));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  ClickAwayListener,\n  InputBase\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport { playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n\n  const [colorPickerOpen, setColorPickerOpen] = React.useState(false);\n  const [username, setUsername] = React.useState(props.player.username);\n\n  const handleColorChangeComplete = (color: ColorResult) => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.color = color.hex;\n    props.changePlayerData(new_data, props.player.uuid);\n  };\n\n  const handleChangeUsername = () => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.username = username;\n    props.changePlayerData(new_data, props.player.uuid);\n  }\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.addNotification('click on user','info')}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\" onClick={()=>{setColorPickerOpen(true)}}><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                                <ClickAwayListener onClickAway={() => handleChangeUsername()}><InputBase className={classes.Name} onChange={(e) => setUsername(e.target.value)} defaultValue={props.player.username}/></ClickAwayListener>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={4} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={14} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={0} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {colorPickerOpen && (\n                <ClickAwayListener onClickAway={() => setColorPickerOpen(false)}>\n                    <ChromePicker className={classes.ColorPicker} color={props.player.color} onChangeComplete={handleColorChangeComplete} disableAlpha={true}/>\n                </ClickAwayListener>\n            )}\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n\n}),\n);\n\nexport interface PlayersProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Players(props: PlayersProps){\n    const classes = useStyles(); \n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} changePlayerData={changePlayerData} addNotification={props.addNotification}></PlayerCard>))\n    };\n\n    const changePlayerData = (player: playerType, uuid: string) => {\n      let new_data: Array<playerType> = props.players;\n      new_data.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, player) : el))   \n      props.setPlayers(new_data);\n    }\n\n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader players={props.players} setPlayers={props.setPlayers}></PlayersHeader>\n            {renderPlayerCards(props.players)}\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by @stephane_branly.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it.</Typography>\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport { Publish, GetApp } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface LoadSaveProps{\n    handlerSaveData: () => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: LoadSaveProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  // className={classes.input}\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                    startIcon={<Publish />}\n                  >\n                    Load data\n                  </Button>\n                </label>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<GetApp />}\n                onClick={props.handlerSaveData}\n              >\n                Save data\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport LoadSave, { LoadSaveProps } from './LoadSave';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsProps{\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: SettingsProps){\n    const classes = useStyles(); \n  \n    const LoadSaveProps: LoadSaveProps = \n    { \n      handlerSaveData: props.handlerSaveData,\n      handlerLoadData: props.handlerLoadData,\n    }\n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <LoadSave {...LoadSaveProps}></LoadSave>\n          <About></About>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addGame = () => {\n    let newGame: gameType = \n    {   \n      uuid: uuid(),\n      gamename: \"New game\",\n      results: [],\n      players: [],\n      rankHistory: []\n    }\n    props.setGames(props.games.concat(newGame));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addGame()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.setCurrentGame(props.game)}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography>{props.game.gamename}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultWhoProps{\n    players: Array<playerType>,\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultWho(props: GameAddResultWhoProps){\n  const classes = useStyles(); \n\n  const playerInResults = (uuidPlayer: string) => {\n    return (props.selectedPlayers.filter(player => (player.uuid === uuidPlayer)).length !== 0)\n  }\n  const togglePlayer = (uuidPlayer: string) => {\n    if(playerInResults(uuidPlayer))\n      props.setSelectedPlayers(props.selectedPlayers.filter(player => player.uuid !== uuidPlayer));\n    else\n      props.setSelectedPlayers([...props.selectedPlayers,{uuid: uuidPlayer, rank: 1}]);\n  }\n   \n  const renderCheckboxPlayers = (players: Array<playerType>) => {\n    return players.map((player) => \n    <ListItem key={player.uuid} dense button onClick={() => togglePlayer(player.uuid)}>\n      <ListItemIcon>\n          <Checkbox\n            edge=\"end\"\n            tabIndex={-1}\n            disableRipple\n            checked={playerInResults(player.uuid)}\n            onClick={() => togglePlayer(player.uuid)}\n            style={{color: player.color}}\n        />\n        </ListItemIcon>\n        <ListItemText id={player.uuid} primary={player.username} />\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n      <Typography>Who was playing?</Typography>\n      <List>\n        {renderCheckboxPlayers(props.players)}\n      </List>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n} from \"@material-ui/core\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\nexport interface GameAddResultWhenProps{\n    selectedDate: Date,\n    setSelectedDate: React.Dispatch<React.SetStateAction<Date>>\n}\n\nexport default function GameAddResultWhen(props: GameAddResultWhenProps){\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    props.setSelectedDate(date as Date);\n  };\n\n  return (\n    <DialogContent dividers>\n        <Typography>When?</Typography>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n            value={props.selectedDate}\n            onChange={handleDateChange}\n            showTodayButton\n            format=\"dd/MM/yyyy HH:mm\"\n            />\n        </MuiPickersUtilsProvider>\n    </DialogContent>);\n}","import { gameType, historyEntryType, playerType, resultType } from \"../types/data\"\nimport { elo, elo_expected } from \"./elo\";\n\nexport const getPlayerProfile = (players: Array<playerType>, uuidPlayer: string): playerType => {\n    return (players.filter(player => (player.uuid === uuidPlayer))[0])\n}\n\nexport const getResult = (results: Array<resultType>, resultUuid: string): resultType => {\n    return (results.filter(result => (result.uuid === resultUuid))[0])\n}\n\nexport const getPlayerLabel = (player: playerType): string => {\n    if(player.username.length>1)\n        return player.username[0].toUpperCase()+player.username[1];\n    return player.username[0].toUpperCase();\n}\n\n\n\nexport const calculateRanking = (game: gameType): Array<historyEntryType> => {\n    if(!game.results)\n        return [];\n    let rankHistory: Array<historyEntryType>  = []\n    rankHistory.push({ resultUuid: \"\", playersRank: []})\n    rankHistory[0].playersRank = game.players.map(player => { return { playerUuid: player.uuid, score: 1200, deltaScore: 0 }}) \n    let lastEntry: historyEntryType = rankHistory[0]\n    game.results.sort((a,b) => a.date >= b.date ? 1 : -1).forEach(result => {\n        const newEntry = generateNewEntry(result, lastEntry)\n        rankHistory.push(newEntry);\n        lastEntry = newEntry\n    });\n    return rankHistory;\n}\n\nexport const generateNewEntry = (result: resultType, lastEntry: historyEntryType) => {\n    let newEntry: historyEntryType = {\n        resultUuid: result.uuid,\n        playersRank: []\n    };\n    lastEntry.playersRank.forEach(p => { newEntry.playersRank.push({ playerUuid: p.playerUuid, score: p.score, deltaScore: p.deltaScore})})\n    result.ranks.forEach(currentPlayer => {\n        const nbSameRank = result.ranks.filter(rankFilter => (currentPlayer.rank === rankFilter.rank)).length\n        const otherPlayers = result.ranks.filter(rankFilter => (currentPlayer.rank !== rankFilter.rank))\n        const index = getIndexInEntry(currentPlayer.uuid,newEntry)\n        const lastScoreCurrentPlayer = lastEntry.playersRank[getIndexInEntry(currentPlayer.uuid,lastEntry)].score\n        let sumDeltaScore = 0\n        otherPlayers.forEach(otherPlayer => { \n            const lastScoreOtherPlayer = lastEntry.playersRank[getIndexInEntry(otherPlayer.uuid,lastEntry)].score\n            const win = currentPlayer.rank < otherPlayer.rank ? 1 : 0;\n            const expected = elo_expected(lastScoreCurrentPlayer,lastScoreOtherPlayer)\n            const newScore = elo(lastScoreCurrentPlayer, expected, win, nbSameRank)\n            sumDeltaScore += newScore - lastScoreCurrentPlayer\n        })\n        newEntry.playersRank[index].score = lastScoreCurrentPlayer + sumDeltaScore\n        newEntry.playersRank[index].deltaScore = sumDeltaScore\n    });\n    return newEntry\n}\n\n\nexport const getIndexInEntry = (playerUuid: string, entry: historyEntryType): number => {\n    return entry.playersRank.findIndex((obj => obj.playerUuid === playerUuid));\n}\n\nexport const toChartScore = (scores: Array<historyEntryType>) => {\n    const chartScore: any = []\n    scores.forEach((score) => chartScore.push(entreyToChartScore(score)))\n    console.log(chartScore)\n    return chartScore\n}\nconst entreyToChartScore = (score: historyEntryType) => {\n    let obj:any={}\n    obj['resultUuid']=score.resultUuid\n    score.playersRank.forEach(playerRank => obj[playerRank.playerUuid]=Math.round(playerRank.score))\n    return obj\n}\n\nexport const generateGameFromLoadedData  = (game: { gamename: any; uuid: any; results: resultType[]; }) => {\n  let newData: gameType = {\n    gamename: game.gamename,\n    uuid: game.uuid,\n    players: [],\n    results: [],\n    rankHistory: []\n  }\n \n  game.results.forEach((result: resultType) => {\n    const newResult: resultType = result\n    newResult.date = new Date(newResult.date)\n    newData.results.push(newResult);\n    newResult.ranks.forEach(rank => {\n    if(newData.players)\n    {\n        if(!newData.players.some(player => player.uuid === rank.uuid))\n        newData.players?.push({uuid:rank.uuid,rank:0});\n    }\n    else\n      newData.players=[{uuid:rank.uuid,rank:0}];\n    });\n  })\n  \n  newData.rankHistory = calculateRanking(newData);\n\n  if(newData.players)\n  {\n      const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      newData.players = sortedRanks;\n  }\n  return newData\n}","export const elo_expected = (A: number, B: number): number => {\n    return 1 / (1 + 10 ** ((B - A) / 400))\n}\n\nexport const elo = (old: number, exp: number, score: 0 | 1, nbTeam:number=1) => {\n    return old + 32 * (score - exp) / nbTeam\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n  Avatar,\n  Grid,\n  MenuItem,\n  Select,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\nimport { getPlayerProfile, getPlayerLabel } from '../../../utils/lib';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultResultsProps{\n    players: Array<playerType>\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultResults(props: GameAddResultResultsProps){\n  const classes = useStyles(); \n  \n  const handleChange = (event: any,uuidPlayer: string) => {\n    let new_data: Array<scoreType> = props.selectedPlayers;\n    new_data.map((el: scoreType) => (el.uuid === uuidPlayer ? el.rank=event.target.value : el))   \n    props.setSelectedPlayers(new_data);\n  };\n\n  const renderPossibilities = () =>  {\n    let possibilities: any = [];\n\n    for(let i = 1; i<props.selectedPlayers.length+1; i++)\n    possibilities.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n\n    return possibilities;\n  }\n \n\n\n  const renderPlayerRank = (selectedPlayers: Array<scoreType>) => {\n    return selectedPlayers.map((player) =>\n    <ListItem key={player.uuid} dense button>\n      <Grid container\n        direction=\"row\"\n        alignItems=\"baseline\"\n        justify=\"space-between\"\n        spacing={1}\n        >\n          <Grid item><Avatar alt={player.uuid} style={{backgroundColor: getPlayerProfile(props.players, player.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players, player.uuid))}</Avatar></Grid>\n          <Grid item><Typography>{getPlayerProfile(props.players, player.uuid).username}</Typography></Grid>\n          <Grid item><Select\n              value={player.rank}\n              onChange={(event) => handleChange(event,player.uuid)}\n            >\n              {renderPossibilities()}\n          </Select>\n        </Grid>\n        </Grid>\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n        <Typography>Results</Typography>\n        <List>\n          {renderPlayerRank(props.selectedPlayers)}\n        </List>\n    </DialogContent>);\n}\n","import React from 'react';\nimport {\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { gameType, playerType, scoreType, resultType } from '../../../types/data';\nimport { NavigateBefore, NavigateNext, PostAdd } from '@material-ui/icons';\nimport GameAddResultWho from './GamesAddResultWho';\nimport GameAddResultWhen from './GameAddResultWhen';\nimport GameAddResultResults from './GameAddResultResults';\nimport { severityType } from '../../../types/notification';\nimport { getPlayerProfile } from '../../../utils/lib';\nimport { uuid } from 'uuidv4';\n\nexport interface GameAddResultProps{\n    game: gameType,\n    players: Array<playerType>,\n    addResultOpen: {id:string|undefined, open:boolean},\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    addResult: (result: resultType, id: string | undefined) => void,\n}\n\nexport default function GameAddResult(props: GameAddResultProps){\n  const [currentStep, setCurrentStep] = React.useState(\"who\");\n  const [selectedDate, setSelectedDate] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].date : new Date());\n  const [selectedPlayers, setSelectedPlayers] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].ranks : [] as Array<scoreType>);\n\n  const displayCurrentStep = () => {\n    if(currentStep === \"who\")\n      return (<GameAddResultWho players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    if(currentStep === \"when\")\n      return (<GameAddResultWhen setSelectedDate={setSelectedDate} selectedDate={selectedDate}/>);\n\n    if(currentStep === \"results\")\n      return (<GameAddResultResults players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    return <Typography>ERROR</Typography>\n  }\n\n  const nextStep = () => {\n    if(currentStep === \"who\")\n    {\n      if(selectedPlayers.length < 2)\n        props.addNotification(\"Please select a least 2 players\",\"error\");\n      else\n      {\n        setCurrentStep(\"when\");\n        const sorted = selectedPlayers.sort((a, b) => getPlayerProfile(props.players,a.uuid).username > getPlayerProfile(props.players,b.uuid).username ? 1 : -1)\n        setSelectedPlayers(sorted);\n      }\n    }\n    else if(currentStep === \"when\")\n      setCurrentStep(\"results\");\n  }\n  const backStep = () => {\n    if(currentStep === \"when\")\n      setCurrentStep(\"who\");\n    else if(currentStep === \"results\")\n      setCurrentStep(\"when\");\n  }\n\n  const addResult = () => {\n    let rank: number = 0;\n    let validResult: boolean = false;\n    selectedPlayers.forEach(player => {\n      if(rank===0)\n        rank=player.rank;\n      if(rank!==player.rank)\n        validResult=true;\n    });\n    if(validResult){\n      const sorted = selectedPlayers.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      setSelectedPlayers(sorted);\n      \n      const result: resultType = \n      {\n        date: selectedDate,\n        ranks: selectedPlayers,\n        uuid: uuid(),\n      }\n      if(props.addResultOpen.id)\n        props.addNotification(\"Result correctly edited\",\"success\");\n      else\n        props.addNotification(\"New result correctly added\",\"success\");\n\n      props.setAddResultOpen({id:undefined, open: false})\n      props.addResult(result,props.addResultOpen.id);\n    }\n    else\n      props.addNotification(\"Results need at least two different rank\",\"error\");\n  }\n\n  return (\n    <Dialog fullWidth={true} maxWidth=\"sm\" open={props.addResultOpen.open}>\n    {props.addResultOpen.id ?  <DialogTitle>Edit result</DialogTitle> :  <DialogTitle>New result</DialogTitle>}\n    {displayCurrentStep()}\n    <DialogActions>\n        <Button onClick={() => props.setAddResultOpen({id:undefined, open:false})} color=\"primary\" variant=\"outlined\">\n            Cancel\n        </Button>\n        <Button autoFocus disabled={currentStep === \"who\"} onClick={() => backStep()} color=\"primary\" variant=\"outlined\" startIcon={<NavigateBefore/>}>\n            Back\n        </Button>\n        {currentStep === \"results\" ? \n            <Button autoFocus onClick={() => addResult()} color=\"primary\" variant=\"outlined\" endIcon={<PostAdd/>}>\n              Send\n            </Button> :\n            <Button autoFocus onClick={() => nextStep()} color=\"primary\" variant=\"outlined\" endIcon={<NavigateNext/>}>\n              Next\n            </Button>\n        }\n       \n    </DialogActions>\n  </Dialog>\n  );\n}","import React from 'react';\nimport { Chip, createStyles, makeStyles } from \"@material-ui/core\";\nimport { EmojiEvents } from '@material-ui/icons';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        backgroundColor: \"rgba(0,0,0,0.9)\",\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        border: \"2px solid #FFFFFF\",\n        zIndex: 0\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n    },\n    third: {\n        color: \"#cd7f32\",\n    }\n}),\n);\nexport interface ScoreChipProps{\n  rank: number\n  score: number\n  deltaScore: boolean\n}\n\nexport default function ScoreChip(props: ScoreChipProps){\n    const classes = useStyles(); \n\n    const getRankBadge = (rank: number) => \n    {\n        if(rank===1) \n            return <EmojiEvents className={classes.first}/>\n        else if(rank===2)\n            return <EmojiEvents className={classes.second}/>\n        else if(rank===3)\n        return <EmojiEvents className={classes.third}/>\n        return <></>\n    }\n\n    let text: string = `${Math.round(props.score)}`, color: string = \"#FDFDFD\"\n    if(props.deltaScore){\n        text = props.score < 0 ? `${Math.round(props.score)}` : `+${Math.round(props.score)}`\n        color= props.score < 0 ? \"#FF2020\" : \"#10FFB0\"\n    }\n    return <Chip className={classes.root} icon={getRankBadge(props.rank)} label={text} size=\"small\" variant=\"outlined\" style={{color: color}}/>\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Avatar,\n  Badge,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { playerRankHistory, playerType, resultType } from '../../../types/data';\nimport { getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ScoreChip from '../../scoreChip/ScoreChip';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n}),\n);\n\nexport interface ResultCardProps{\n    result: resultType,\n    players: Array<playerType>,\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    playersRank: Array<playerRankHistory>\n}\n\nexport default function ResultCard(props: ResultCardProps){\n  const classes = useStyles(); \n\n  \n  const displayPlayersBadges = () => {\n    return (props.result.ranks.map((rank) => \n    {\n        const playerRank = props.playersRank.filter(player => player.playerUuid === rank.uuid)[0] \n        const title = `New score: ${Math.round(playerRank.score)}`\n\n        return <Grid item>\n            <Tooltip title={title}>\n            <Badge\n            overlap=\"circle\"\n            style={{borderColor: \"rgba(0,0,0,0)\"}}\n            anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n            }}\n            badgeContent={<ScoreChip rank={rank.rank} score={playerRank.deltaScore} deltaScore={true}/>}\n            >\n            \n            <Avatar alt={getPlayerProfile(props.players,rank.uuid).username} style={{backgroundColor: getPlayerProfile(props.players,rank.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,rank.uuid))}</Avatar>\n            </Badge>\n            </Tooltip>\n        </Grid>\n    }\n    ));\n  }\n\n  return (\n    <Grid item>\n        <Card className={classes.Padding} onClick={()=>props.setAddResultOpen({id: props.result.uuid, open:true})}>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n            <Grid item>\n                <Grid \n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    {displayPlayersBadges()}\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Typography>{props.result.date.toLocaleString()}</Typography>\n            </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n  );\n}","import React, { ChangeEvent, VoidFunctionComponent } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\n\nexport interface DeleteGameProps{\n  deleteGame: () => void,\n  setDeleteGameOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteGame(props: DeleteGameProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteGameOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this game?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this game and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteGameOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteGame()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\n\n\nexport interface EditGameProps{\n    handleChangeGamename: (newGamename: string) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n    currentGamename: string,\n}\n\nexport default function EditGame(props: EditGameProps){  \n    const [gamename, setGamename] = React.useState(props.currentGamename);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Change the gamename\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={gamename} onChange={(e) => setGamename(e.target.value)} ></Input>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangeGamename(gamename); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import {\n    Grid,\n    Chip,\n    Avatar,\n    Badge,\n    Typography,\n    Paper,\n  } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { LineChart, XAxis, Legend, CartesianGrid, Tooltip, Line, ResponsiveContainer, YAxis } from \"recharts\";\nimport { theme } from \"../../App\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../../types/data\";\nimport { getPlayerLabel, getPlayerProfile, getResult, toChartScore } from \"../../utils/lib\";\nimport ScoreChip from \"../scoreChip/ScoreChip\";\n  \nexport interface LineChartResultProps {\n  players: Array<playerType>,\n  game: gameType,\n}\n\n\n\nexport default function LineChartResult(props: LineChartResultProps){\n  const stateLineDesign = (players: Array<scoreType>, uuid: string) => {\n    let opacity: Record<string, number> = {}\n    let width: Record<string, number> = {}\n   \n    players.forEach((player) => {\n      if(uuid && player.uuid===uuid)\n      {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 4\n      } else if(uuid) {\n        opacity[player.uuid] = 0.7\n        width[player.uuid] = 2\n      } else {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 2\n      }\n    })\n    return { opacity: opacity, width: width }\n  }\n  const [lineDesign, setLineDesign] = useState(stateLineDesign(props.game.players, \"\"));\n\n  const generateLines = (players: Array<scoreType>) => {\n    return players.map((player) => {\n        return <Line key={player.uuid} type=\"natural\" strokeWidth={lineDesign.width[player.uuid]} strokeOpacity={lineDesign.opacity[player.uuid]} dataKey={player.uuid} stroke={getPlayerProfile(props.players,player.uuid).color} yAxisId={1}/>\n      })\n  }\n\n  const handleMouseEnter = (uuid: string) => {\n    setLineDesign(stateLineDesign(props.game.players, uuid))\n  };\n\n  const handleMouseLeave = () => {\n    setLineDesign(stateLineDesign(props.game.players, \"\"));\n  };\n\n\n  const renderLegend = () => {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\"  spacing={5} style={{paddingBottom: theme.spacing(2)}}>\n        {\n          props.game.rankHistory[props.game.rankHistory.length-1].playersRank.sort((a, b) => a.score < b.score ? 1 : -1).map((player,index) => {\n              // <Tooltip title={Math.round(player.score)}>\n                  return <Grid item key={index} onMouseEnter={() => handleMouseEnter(player.playerUuid)} onMouseLeave={() => handleMouseLeave()}><Badge\n                      overlap=\"circle\"\n                      style={{borderColor: \"rgba(0,0,0,0)\"}}\n                      anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                      }}\n                      badgeContent={<ScoreChip rank={index+1} score={player.score} deltaScore={false}/>}\n                  >\n                      <Avatar alt={getPlayerProfile(props.players,player.playerUuid).username} style={{backgroundColor: getPlayerProfile(props.players,player.playerUuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,player.playerUuid))}</Avatar>\n                  </Badge></Grid>\n            })\n        }\n      </Grid>\n    );\n  }\n  const generateLineScorePlayer = (historyEntry: historyEntryType, playerUuid: string, playing: boolean) => {\n    const playerRank = historyEntry.playersRank.filter((player) => player.playerUuid === playerUuid)[0]\n    const playerInfo = getPlayerProfile(props.players, playerUuid)\n    if(playing)\n    {\n      const color = playerRank.deltaScore < 0 ? \"#FF2020\" : \"#10FFB0\" \n      const deltaScore = playerRank.deltaScore < 0 ? `${Math.round(playerRank.deltaScore)}` : `+${Math.round(playerRank.deltaScore)}`\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} style={{backgroundColor: playerInfo.color}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1} style={{color: color}}>({deltaScore})</Grid>\n            </Grid>\n    }\n    else\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} variant=\"outlined\" style={{borderColor: playerInfo.color}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1}></Grid>\n            </Grid>\n  }\n\n  const renderPlayersScore = (result: resultType, data: any) => {\n    const historyEntry = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0] as historyEntryType\n\n    const uuidPresentPlayers: Array<string> = []\n    const uuidOtherPlayers: Array<string> = []\n    result.ranks.forEach(rank => uuidPresentPlayers.push(rank.uuid))\n    props.game.players.filter((player) => uuidPresentPlayers.indexOf(player.uuid) <= -1).forEach((player) => uuidOtherPlayers.push(player.uuid))\n    const componentPresentPlayers = uuidPresentPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, true)\n    })\n    const componentOtherPlayers = uuidOtherPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, false)\n    })\n   \n    return [componentPresentPlayers,componentOtherPlayers]\n  }\n\n  const renderTooltip = (propsTooltip: any) => {\n    const { active, payload, label} = propsTooltip\n    if (active && payload && payload.length && label) {\n      return (\n        <Paper variant=\"outlined\" style={{ paddingTop: theme.spacing(2), paddingBottom: theme.spacing(2),paddingLeft: theme.spacing(2),paddingRight: theme.spacing(4)}}>\n          <Typography>{label ? getResult(props.game.results,label).date.toLocaleString() : \"Start\"}</Typography>\n          <Grid container direction=\"column\" spacing={1}>{renderPlayersScore(getResult(props.game.results, label), payload)}</Grid>\n        </Paper>\n      );\n    }\n\n    return null;\n};\n  \n  return (\n    props.game.rankHistory.length && props.game.players.length ? \n    <div style={{width:'100%'}}>\n    <ResponsiveContainer width=\"100%\" height={400}>\n    <LineChart\n      height={400}\n      data={toChartScore(props.game.rankHistory)}\n      margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\n      >\n      <XAxis dataKey=\"resultUuid\" tick={false} />\n      <YAxis yAxisId={1} domain={['dataMin - 50', 'dataMax + 50']}/>\n      <Tooltip content={renderTooltip} />\n      <Legend verticalAlign=\"top\" content={renderLegend}/>\n      <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"3 3\"/>\n      {generateLines(props.game.players).flat()}\n    </LineChart></ResponsiveContainer></div> : <></>\n  );  \n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n  Avatar,\n  Badge,\n//   Tooltip,\n} from \"@material-ui/core\";\nimport { gameType, playerType, resultType, scoreType } from '../../../types/data';\nimport { Delete, Edit, NavigateBefore, PostAdd } from '@material-ui/icons';\nimport GameAddResult from './GameAddResult';\nimport { severityType } from '../../../types/notification';\nimport { calculateRanking, getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ResultCard from './ResultCard';\nimport DeleteGame from './DeleteGame';\nimport EditGame from './EditGame';\nimport ScoreChip from '../../scoreChip/ScoreChip';\nimport LineChartResult from '../../lineChartResult/LineChartResult';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCompleteCardProps{\n    game: gameType,\n    players: Array<playerType>,\n    changeGameData: (game: gameType, uuid: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    deleteGame: (uuid: string) => void\n}\n\nexport default function GameCompleteCard(props: GameCompleteCardProps){\n  const classes = useStyles(); \n\n  const [addResultOpen, setAddResultOpen] = React.useState({id: undefined as string|undefined, open:false});\n  const [editMode, setEditMode] = React.useState(false);\n  const [deleteGameOpen, setDeleteGameOpen] = React.useState(false);\n\n  const handleChangeGamename = (newGamename: string) => {\n    let new_data: gameType = Object.assign({}, props.game); \n    new_data.gamename = newGamename;\n    props.changeGameData(new_data, props.game.uuid);\n  }\n\n  const deleteGame = () => {\n    props.addNotification(\"Game correctly deleted\",\"success\");\n    setDeleteGameOpen(false);\n    props.deleteGame(props.game.uuid);\n  }\n\n\n  const addResult = (newResult: resultType, id: string|undefined) => {\n    let new_data: gameType = Object.assign({}, props.game);\n    if(!new_data.results)\n        new_data.results = [];\n    else if(id)\n        new_data.results = new_data.results.filter(item => item.uuid !== id);\n    new_data.results.push(newResult);\n    newResult.ranks.forEach(rank => {\n        if(new_data.players)\n        {\n            if(!new_data.players.some(player => player.uuid === rank.uuid))\n                new_data.players?.push({uuid:rank.uuid,rank:0});\n        }\n        else\n            new_data.players=[{uuid:rank.uuid,rank:0}];\n    });\n    \n    new_data.rankHistory = calculateRanking(new_data);\n\n    if(new_data.players)\n    {\n        const sortedRanks = new_data.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n        new_data.players = sortedRanks;\n    }\n\n    props.changeGameData(new_data, props.game.uuid);\n  }\n\n  const displayResults = () => {\n    if (props.game.results){\n        return props.game.results.sort((a,b) => a.date < b.date ? 1 : -1).map(result => {\n            const playersRank = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0].playersRank\n            return <ResultCard result={result} players={props.players} setAddResultOpen={setAddResultOpen} playersRank={playersRank}></ResultCard>}\n        );\n    }\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentGame(undefined)}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button endIcon={<PostAdd/>}  onClick={() => setAddResultOpen({id: undefined, open:true})}>New result</Button>\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                    <Button onClick={() => setDeleteGameOpen(true)}><Delete/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography color=\"primary\" variant=\"h3\" align=\"center\">\n                {props.game.gamename}\n            </Typography>\n        </Grid>\n        {props.game.players && \n        <Grid item>\n            <LineChartResult players={props.players} game={props.game}/>\n        </Grid>}\n       \n        </Grid>\n        {addResultOpen.open ? <GameAddResult game={props.game} players={props.players} addResultOpen={addResultOpen} setAddResultOpen={setAddResultOpen} addNotification={props.addNotification} addResult={addResult}></GameAddResult> : <></>}\n    </Card>\n    <Grid \n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={1}\n    >\n        {displayResults()}\n    </Grid>\n    {deleteGameOpen && <DeleteGame setDeleteGameOpen={setDeleteGameOpen} deleteGame={deleteGame}></DeleteGame>}\n    {editMode && <EditGame setEditMode={setEditMode} handleChangeGamename={handleChangeGamename} currentGamename={props.game.gamename}></EditGame>}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { gameType, playerType } from '../../../types/data';\nimport GameCompleteCard from './GameCompleteCard';\nimport { severityType } from '../../../types/notification';\n\nexport interface GamesProps{\n    games: Array<gameType>,\n    players: Array<playerType>\n    setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Games(props: GamesProps){\n    const [currentGame, setCurrentGame] = useState(undefined as unknown as gameType|undefined);\n\n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData} setCurrentGame={setCurrentGame}></GameCard>))\n    };\n\n    const changeGameData = (game: gameType, uuid: string) => {\n        let new_data: Array<gameType> = props.games\n        new_data.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, game) : el))   \n        props.setGames(new_data);\n    }\n\n    const deleteGame = (uuid: string) => {\n        let new_data: Array<gameType> = props.games.filter(item => item.uuid !== uuid);\n        setCurrentGame(undefined);\n        props.setGames(new_data);\n        props.addNotification(\"Game correctly deleted\",\"success\");\n    }\n\n    return (\n    <Container>\n        { currentGame?\n            <GameCompleteCard game={currentGame} changeGameData={changeGameData} setCurrentGame={setCurrentGame} players={props.players} addNotification={props.addNotification} deleteGame={deleteGame}></GameCompleteCard>\n            :\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n                <GamesHeader games={props.games} setGames={props.setGames}></GamesHeader>\n                {renderGameCards(props.games)}\n        </Grid>\n        }\n    </Container>\n  );\n}","import React from 'react';\nimport Summary from \"./summary/Summary\"\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport { gameType, playerType } from '../../types/data';\nimport { severityType } from '../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n   \n  },\n}),\n);\n  \nexport interface PagesProps{\n  currentPage: string,\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  const classes = useStyles(); \n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'summary':\n          return <Summary></Summary>;\n        case 'players':\n          return <Players players={props.players} setPlayers={props.setPlayers} addNotification={props.addNotification}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData}></Settings>;\n        case 'games':\n          return <Games games={props.games} setGames={props.setGames} players={props.players} addNotification={props.addNotification}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport interface NotificationProps{\n  notification: notificationType,\n  setNotification: any,\n}\n\nexport default function Notification(props: NotificationProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotification({open: false});\n  };\n\n    return (\n       props.notification.open ?  \n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal:'right'}}\n          open={props.notification.open}\n          autoHideDuration={6000} \n          onClose={handleClose}\n        >\n          <Alert severity={props.notification.severity ? props.notification.severity : \"info\"} onClose={handleClose}>{props.notification.text}</Alert>\n        </Snackbar> \n        :\n        <></>\n  );\n}","import React from \"react\"\nimport {\n  createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme,\n} from \"@material-ui/core/styles\"\nimport Header from \"./components/header/Header\"\nimport Footer, { FooterProps } from \"./components/footer/Footer\"\nimport Pages, { PagesProps } from \"./components/pages/Pages\"\nimport { dataType, gameType, playerType } from \"./types/data\"\nimport Notifications, { NotificationProps } from \"./components/pages/notifications/Notification\"\nimport { notificationType, severityType } from \"./types/notification\"\nimport { generateGameFromLoadedData } from \"./utils/lib\"\n\nexport const theme = createMuiTheme({\n  palette: {\n    error: {\n      main: \"#DD0505\",\n    },\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n})\n\nconst useStyles = makeStyles((theme) => createStyles({\n  App: {\n    paddingBottom: theme.spacing(15),\n  },\n}))\n\nfunction App() {\n  const [page, setPage] = React.useState(\"summary\")\n  const [players, setPlayers] = React.useState([]as Array<playerType>)\n  const [games, setGames] = React.useState([] as Array<gameType>)\n  const [notification, setNotification] = React.useState({ open: false } as notificationType)\n\n  const classes = useStyles()\n\n  const handlerSaveData = () => {\n    const data = {\n      players,\n      games: games.map(game => { return { uuid: game.uuid, gamename: game.gamename, results: game.results }})\n    }\n    const FileSaver = require(\"file-saver\")\n    const json = JSON.stringify(data)\n    const blob = new Blob([json], { type: \"application/json\" })\n    FileSaver.saveAs(blob, \"save_game-ranking.json\")\n  }\n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      e.preventDefault()\n      const reader = new FileReader()\n      reader.onload = async (e) => {\n        if (e.target?.result) {\n          const data = JSON.parse(e.target.result as string)\n          setPlayers(data.players)\n          const games: Array<gameType> = data.games.map((game: { uuid: any; gamename: any; results: any }) => generateGameFromLoadedData(game))\n          setGames(games)\n          addNotification(\"Data correctly loaded\", \"success\")\n          setPage(\"summary\")\n        }\n      }\n      if (e.target?.files) {\n        reader.readAsText(e.target.files[0])\n      }\n    } catch {\n      addNotification(\"Error when loading data\", \"error\")\n    }\n  }\n\n  const addNotification = (text: string, severity?: severityType) => {\n    const new_notification = {\n      open: true,\n      text,\n      severity: severity || undefined,\n    }\n    setNotification(new_notification)\n  }\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, newPage: string) => {\n    setPage(newPage)\n  }\n\n  const pagesProps: PagesProps = {\n    currentPage: page,\n    games,\n    setGames,\n    players,\n    setPlayers,\n    handlerSaveData,\n    handlerLoadData,\n    addNotification,\n  }\n\n  const footerProps: FooterProps = {\n    handleChangeCurrentPage,\n    currentPage: page,\n  }\n\n  const notificationsProps: NotificationProps = {\n    notification,\n    setNotification,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header />\n        <Pages {...pagesProps} />\n        <Footer {...footerProps} />\n      </div>\n      <Notifications {...notificationsProps} />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}