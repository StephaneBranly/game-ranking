{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/pages/players/PlayersHeader.tsx","utils/lib.tsx","utils/elo.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/EditPlayer.tsx","components/pages/players/PlayerCompleteCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/SettingsHeader.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/GamesAddResultWho.tsx","components/pages/games/GameAddResultWhen.tsx","components/pages/games/GameAddResultRanks.tsx","components/pages/games/DeleteResult.tsx","components/pages/games/GameAddResult.tsx","components/scoreChip/ScoreChip.tsx","components/pages/games/ResultCard.tsx","components/pages/games/DeleteGame.tsx","components/pages/games/EditGame.tsx","components/lineChartResult/LineChartResult.tsx","components/pages/games/GameCompleteCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","components/pages/notifications/Notification.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","zIndex","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","padding","PlayersHeader","Grid","item","Card","container","direction","justify","alignItems","players","length","Button","color","startIcon","onClick","require","randomColor","newPlayer","uuid","username","setPlayers","concat","setCurrentPlayer","player","edit","addPlayer","getPlayerProfile","uuidPlayer","filter","getResult","results","resultUuid","result","getPlayerLabel","toUpperCase","calculateRanking","game","rankHistory","push","playersRank","map","playerUuid","score","deltaScore","lastEntry","sort","a","b","date","forEach","newEntry","generateNewEntry","p","nbRank","i","ranks","rankFilter","rank","currentPlayer","otherPlayers","index","getIndexInEntry","lastScoreCurrentPlayer","sumDeltaScore","otherPlayer","A","B","lastScoreOtherPlayer","win","expected","divFactor","newScore","old","exp","elo","entry","findIndex","obj","toChartScore","scores","chartScore","entreyToChartScore","playerRank","Math","round","generateGameFromLoadedData","newData","gamename","newResult","Date","some","sortedRanks","calculatePresentPlayers","calculateNbPosition","games","total","resultRank","Padding","first","second","third","ColorPicker","Name","paddingLeft","paddingRight","borderRadius","margin","border","PlayerCard","IconButton","size","style","Badge","badgeContent","showZero","EditPlayer","React","useState","setPlayer","Dialog","open","onClose","event","reason","setEditMode","DialogTitle","DialogContent","DialogContentText","Input","e","target","onChangeComplete","c","hex","disableAlpha","DialogActions","autoFocus","handleChangePlayer","Main","PlayerCompleteCard","editMode","undefined","NavigateBefore","ButtonGroup","disableElevation","Edit","align","changePlayerData","Players","new_data","el","Object","assign","Container","addNotification","subSection","marginLeft","borderLeft","About","matches","useMediaQuery","Link","href","Provider","Node","formula","SettingsHeader","openDataMenu","setOpenDataMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","display","accept","id","type","handlerLoadData","htmlFor","MenuItem","ListItemIcon","Publish","fontSize","ListItemText","Storage","Divider","handlerSaveData","GetApp","handlerResetData","Delete","endIcon","Favorite","window","GitHub","currentTarget","Settings","GamesHeader","newGame","setGames","setCurrentGame","addGame","GameCard","GameAddResultWho","playerInResults","selectedPlayers","togglePlayer","setSelectedPlayers","dividers","List","ListItem","dense","button","Checkbox","edge","tabIndex","disableRipple","checked","primary","GameAddResultWhen","utils","DateFnsUtils","DateTimePicker","selectedDate","setSelectedDate","showTodayButton","format","GameAddResultRanks","renderPossibilities","possibilities","Avatar","alt","Select","console","log","handleChange","DeleteResult","setDeleteResultOpen","deleteResult","borderColor","GameAddResult","currentStep","setCurrentStep","addResultOpen","deleteResultOpen","fullWidth","maxWidth","setAddResultOpen","disabled","validResult","sorted","addResult","PostAdd","nextStep","NavigateNext","ScoreChip","text","Chip","ResultCard","Tooltip","overlap","toLocaleString","DeleteGame","setDeleteGameOpen","deleteGame","EditGame","currentGamename","setGamename","handleChangeGamename","LineChartResult","stateLineDesign","opacity","lineDesign","setLineDesign","generateLineScorePlayer","historyEntry","playing","playerInfo","alignContent","xs","renderPlayersScore","data","uuidPresentPlayers","uuidOtherPlayers","indexOf","ResponsiveContainer","height","LineChart","top","right","left","XAxis","dataKey","tick","YAxis","yAxisId","domain","content","propsTooltip","active","payload","Paper","paddingTop","paddingBottom","Legend","verticalAlign","playerProfile","onMouseEnter","onMouseLeave","CartesianGrid","stroke","strokeDasharray","Line","strokeWidth","strokeOpacity","flat","GameCompleteCard","deleteGameOpen","changeGameData","displayResults","newGamename","Games","currentGame","Pages","renderPage","Alert","elevation","Notification","handleClose","setNotification","notification","Snackbar","autoHideDuration","severity","createMuiTheme","error","App","page","setPage","pagesProps","cookie","stringifiedData","JSON","stringify","localStorage","setItem","FileSaver","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","parse","files","readAsText","getItem","removeItem","footerProps","newPage","notificationsProps","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4510969d.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 100,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  setCurrentPlayer: React.Dispatch<React.SetStateAction<{player:playerType | undefined, edit: boolean}>>,\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let newPlayer: playerType = \n    {   \n      uuid: uuid(),\n      username: \"New Player\",\n      color: color,\n    };    \n    props.setPlayers(props.players.concat(newPlayer));\n    props.setCurrentPlayer({player:newPlayer, edit:true})\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import { randomFill } from \"crypto\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../types/data\"\nimport { elo, elo_expected } from \"./elo\";\n\nexport const getPlayerProfile = (players: Array<playerType>, uuidPlayer: string): playerType => {\n    return (players.filter(player => (player.uuid === uuidPlayer))[0])\n}\n\nexport const getResult = (results: Array<resultType>, resultUuid: string): resultType => {\n    return (results.filter(result => (result.uuid === resultUuid))[0])\n}\n\nexport const getPlayerLabel = (player: playerType): string => {\n    if(player.username.length>1)\n        return player.username[0].toUpperCase()+player.username[1];\n    return player.username[0].toUpperCase();\n}\n\n\n\nexport const calculateRanking = (game: gameType): Array<historyEntryType> => {\n    if(!game.results)\n        return [];\n    let rankHistory: Array<historyEntryType>  = []\n    rankHistory.push({ resultUuid: \"\", playersRank: []})\n    rankHistory[0].playersRank = game.players.map(player => { return { playerUuid: player.uuid, score: 1200, deltaScore: 0 }}) \n    let lastEntry: historyEntryType = rankHistory[0]\n    game.results.sort((a,b) => a.date >= b.date ? 1 : -1).forEach(result => {\n        const newEntry = generateNewEntry(result, lastEntry)\n        rankHistory.push(newEntry);\n        lastEntry = newEntry\n    });\n    return rankHistory;\n}\n\nexport const generateNewEntry = (result: resultType, lastEntry: historyEntryType) => {\n    let newEntry: historyEntryType = {\n        resultUuid: result.uuid,\n        playersRank: []\n    };\n    lastEntry.playersRank.forEach(p => { newEntry.playersRank.push({ playerUuid: p.playerUuid, score: p.score, deltaScore: p.deltaScore})})\n    let nbRank: any = {}\n    for(let i=0; i<result.ranks.length; i++)\n        nbRank[i+1] = result.ranks.filter(rankFilter => (i+1 === rankFilter.rank)).length\n\n    result.ranks.forEach(currentPlayer => {\n        const otherPlayers = result.ranks.filter(rankFilter => (currentPlayer.rank !== rankFilter.rank))\n        const index = getIndexInEntry(currentPlayer.uuid,newEntry)\n        const lastScoreCurrentPlayer = lastEntry.playersRank[getIndexInEntry(currentPlayer.uuid,lastEntry)].score\n        let sumDeltaScore = 0\n        otherPlayers.forEach(otherPlayer => { \n            const lastScoreOtherPlayer = lastEntry.playersRank[getIndexInEntry(otherPlayer.uuid,lastEntry)].score\n            const win = currentPlayer.rank < otherPlayer.rank ? 1 : 0;\n            const expected = elo_expected(lastScoreCurrentPlayer,lastScoreOtherPlayer)\n            const divFactor = nbRank[currentPlayer.rank] * nbRank[otherPlayer.rank]\n            const newScore = elo(lastScoreCurrentPlayer, expected, win, divFactor)\n            sumDeltaScore += newScore - lastScoreCurrentPlayer\n        })\n        newEntry.playersRank[index].score = lastScoreCurrentPlayer + sumDeltaScore\n        newEntry.playersRank[index].deltaScore = sumDeltaScore\n    });\n    return newEntry\n}\n\n\nexport const getIndexInEntry = (playerUuid: string, entry: historyEntryType): number => {\n    return entry.playersRank.findIndex((obj => obj.playerUuid === playerUuid));\n}\n\nexport const toChartScore = (scores: Array<historyEntryType>) => {\n    const chartScore: any = []\n    scores.forEach((score) => chartScore.push(entreyToChartScore(score)))\n    return chartScore\n}\n\nconst entreyToChartScore = (score: historyEntryType) => {\n    let obj:any={}\n    obj['resultUuid']=score.resultUuid\n    score.playersRank.forEach(playerRank => obj[playerRank.playerUuid]=Math.round(playerRank.score))\n    return obj\n}\n\nexport const generateGameFromLoadedData  = (game: { gamename: any; uuid: any; results: resultType[]; }) => {\n  let newData: gameType = {\n    gamename: game.gamename,\n    uuid: game.uuid,\n    players: [],\n    results: [],\n    rankHistory: []\n  }\n \n  game.results.forEach((result: resultType) => {\n    const newResult: resultType = result\n    newResult.date = new Date(newResult.date)\n    newData.results.push(newResult);\n    newResult.ranks.forEach(rank => {\n    if(newData.players)\n    {\n        if(!newData.players.some(player => player.uuid === rank.uuid))\n        newData.players?.push({uuid:rank.uuid,rank:0});\n    }\n    else\n      newData.players=[{uuid:rank.uuid,rank:0}];\n    });\n  })\n  \n  newData.rankHistory = calculateRanking(newData);\n\n  if(newData.players)\n  {\n      const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      newData.players = sortedRanks;\n  }\n  return newData\n}\n\nexport const calculatePresentPlayers = (game: gameType): Array<scoreType> => {\n    const players: Array<scoreType> = []\n    game.results.forEach(result => {\n        result.ranks.forEach(rank => {\n        if(!players.some(player => player.uuid === rank.uuid))\n            players.push({uuid:rank.uuid,rank:0});\n        })\n    })\n    return players\n} \n\nexport const calculateNbPosition = (games: Array<gameType>, playerUuid: string, position: number) => {\n    let total = 0;\n    games.forEach(game => {\n        game.results.forEach(result => {\n            const resultRank = result.ranks.filter(rank => rank.uuid === playerUuid)\n            if(resultRank.length && resultRank[0].rank === position) total += 1\n        })\n    })\n    return total\n}","export const elo_expected = (A: number, B: number): number => {\n    return 1 / (1 + 10 ** ((B - A) / 400))\n}\n\nexport const elo = (old: number, exp: number, score: 0 | 1, nbTeam:number=1) => {\n    return old + 20 * (score - exp) / nbTeam\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  Typography\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { gameType, playerType } from '../../../types/data';\nimport { calculateNbPosition } from '../../../utils/lib';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    games: Array<gameType>,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n    setCurrentPlayer: React.Dispatch<React.SetStateAction<{player:playerType | undefined, edit: boolean}>>,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n  return (\n    <Grid item spacing={1} onClick={() => props.setCurrentPlayer({player:props.player, edit:false})}>\n        <Card className={classes.Padding}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\"><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                            <Typography>{props.player.username}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container \n                        item\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,1)} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,2)} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,3)} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\nimport { playerType } from '../../../types/data';\nimport { ChromePicker } from 'react-color';\n\nexport interface EditPlayerProps{\n    player: playerType\n    handleChangePlayer: (player: playerType) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function EditPlayer(props: EditPlayerProps){  \n    const [player, setPlayer] = React.useState(props.player);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Edit player\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={player.username} onChange={(e) => setPlayer({...player, username: e.target.value})} ></Input>\n          </DialogContentText>\n          <DialogContentText>\n            <ChromePicker color={player.color} onChangeComplete={(c) => setPlayer({...player, color: c.hex})} disableAlpha={true}/>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangePlayer(player); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n//   Tooltip,\n} from \"@material-ui/core\";\nimport { playerType } from '../../../types/data';\nimport { Edit, NavigateBefore } from '@material-ui/icons';\nimport { severityType } from '../../../types/notification';\nimport EditPlayer from './EditPlayer'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface PlayerCompleteCardProps{\n    player: playerType,\n    changePlayerData: (player: playerType, uuid: string) => void,\n    setCurrentPlayer: React.Dispatch<React.SetStateAction<{player:playerType | undefined, edit: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    edit: boolean\n}\n\nexport default function PlayerCompleteCard(props: PlayerCompleteCardProps){\n  const classes = useStyles(); \n\n  const [editMode, setEditMode] = React.useState(props.edit);\n \n  const handleChangePlayer = (player: playerType) => {\n    props.changePlayerData(player, player.uuid)\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentPlayer({player:undefined,edit:false})}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography style={{color: props.player.color}} variant=\"h3\" align=\"center\">\n                {props.player.username}\n            </Typography>\n        </Grid>\n       \n        </Grid>\n    </Card>\n    {editMode && <EditPlayer setEditMode={setEditMode} handleChangePlayer={handleChangePlayer} player={props.player}></EditPlayer>}\n    </>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { gameType, playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\nimport PlayerCompleteCard from './PlayerCompleteCard';\n\nexport interface PlayersProps{\n  players: Array<playerType>,\n  games: Array<gameType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Players(props: PlayersProps){\n\n    const [currentPlayer, setCurrentPlayer] = useState({player:undefined, edit:false} as unknown as {player:playerType | undefined, edit: boolean});\n\n\n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} games={props.games} changePlayerData={changePlayerData} setCurrentPlayer={setCurrentPlayer}></PlayerCard>))\n    };\n\n    const changePlayerData = (player: playerType, uuid: string) => {\n      let new_data: Array<playerType> = props.players;\n      new_data.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, player) : el))   \n      props.setPlayers(new_data);\n    }\n\n  return (\n    <Container>\n      { currentPlayer.player ?\n        <PlayerCompleteCard player={currentPlayer.player} edit={currentPlayer.edit} changePlayerData={changePlayerData} addNotification={props.addNotification} setCurrentPlayer={setCurrentPlayer} /> :\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader players={props.players} setPlayers={props.setPlayers} setCurrentPlayer={setCurrentPlayer}></PlayersHeader>\n            {renderPlayerCards(props.players)}\n       </Grid> }\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n  Link,\n  useMediaQuery,\n} from \"@material-ui/core\"\nimport MathJax from 'react-mathjax'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    const eloExpected = `E_{A} = \\\\frac{1}{1+10^{(R_{B} - R_{A}) / 400}}, E_{B} = \\\\frac{1}{1+10^{(R_{A} - R_{B}) / 400}}`\n    const eloNewScore = `R'_{A} = R_{A} + K(S_{A} - E_{A}), R'_{B} = R_{B} + K(S_{B} - E_{B})`\n    const eloLegend = `E (expected), R (rank), K (factor = 32), S (score : 1=win, 0=loss)`\n    const eloExpectedTeam = `E_{P,o} = \\\\frac{1}{1+10^{(R_{o} - R_{P}) / 400}}`\n    const eloNewScoreTeam = `R'_{P} = R_{P} + \\\\sum_{i}{K(S_{A} - E_{P,i}) / (nbPlayersSameTeam(P) * nbPlayersSameTeam(i))},\\\\ i \\\\in opponents(P)`\n    const matches = useMediaQuery('(min-width:600px)');\n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by <Link href='https://github.com/StephaneBranly' target=\"_blank\">@stephane_branly</Link>.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it and to give feedback (positive or negative). You can add <Link href='https://github.com/StephaneBranly/game-ranking/issues' target=\"_blank\">issues</Link> if you want.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <MathJax.Provider>\n\n                            <Typography variant=\"h5\" color=\"textSecondary\">the algorithm</Typography>\n                            <Typography>Currently, the <Link href=\"https://en.wikipedia.org/wiki/Elo_rating_system\" target=\"_blank\">ELO</Link> algorithm is used.</Typography>\n                            {matches && <><MathJax.Node formula={eloExpected} />\n                            <MathJax.Node formula={eloNewScore} />\n                            <MathJax.Node formula={eloLegend} /></>}\n                            <Typography>It is adapted to work with more than 2 players and more than 2 teams.</Typography>\n                            {matches && <><MathJax.Node formula={eloExpectedTeam} />\n                            <MathJax.Node formula={eloNewScoreTeam} /></>}\n                            <Typography>If the project grows, new algorithms can be added and parameterized on the interface.</Typography>\n                            </MathJax.Provider>\n\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Card,\n  Button,\n  Menu,\n  MenuItem,\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { Publish, GetApp, Storage, Delete, Favorite, GitHub } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsHeaderProps{\n    handlerResetData: (cookie: boolean) => void,\n    handlerSaveData: (cookie: boolean) => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement> | null) => void,\n}\n\nexport default function SettingsHeader(props: SettingsHeaderProps){\n    const classes = useStyles(); \n\n    const [openDataMenu, setOpenDataMenu] = React.useState(null as null | HTMLElement)\n  \n    const handleClose = (event: any, reason: string) => {\n      setOpenDataMenu(null)\n    }\n\n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <Menu\n                onClose={handleClose}\n                open={openDataMenu !== null}\n                anchorEl={openDataMenu}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                 <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                <MenuItem>\n                  <ListItemIcon>\n                  <Publish fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Load from file</ListItemText>\n                </MenuItem>\n                </label>\n                <MenuItem onClick={() => props.handlerLoadData(null)}>\n                  <ListItemIcon>\n                  <Storage fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Load from cookies</ListItemText>\n                </MenuItem>\n                <Divider />\n                <MenuItem onClick={() => props.handlerSaveData(false)}>\n                  <ListItemIcon>\n                  <GetApp fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Save as file</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={() => props.handlerSaveData(true)}>\n                  <ListItemIcon>\n                  <Storage fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Save as cookies</ListItemText>\n                </MenuItem>\n                <Divider />\n                <MenuItem onClick={() => props.handlerResetData(false)}>\n                  <ListItemIcon>\n                  <Delete fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Delete current session</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={() => props.handlerResetData(true)}>\n                  <ListItemIcon>\n                  <Delete fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Delete cookies</ListItemText>\n                </MenuItem>\n            </Menu>\n            <ButtonGroup                 \n                variant=\"contained\"\n                color=\"primary\">\n              <Button \n                endIcon={<Favorite/>} \n                onClick={() => window.open(\"https://www.paypal.com/paypalme/StephaneBranly\", \"_blank\")}\n                >\n                  Sponsor\n              </Button>\n              <Button \n                endIcon={<GitHub/>}\n                onClick={() => window.open(\"https://github.com/StephaneBranly/game-ranking\", \"_blank\")}\n                >\n                  GitHub\n              </Button>\n              <Button\n                startIcon={<Storage />}\n                onClick={(event) => setOpenDataMenu(event.currentTarget)}\n              >\n                Data\n              </Button>\n            </ButtonGroup>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport SettingsHeader, { SettingsHeaderProps } from './SettingsHeader';\n\n\nexport interface SettingsProps{\n  handlerResetData: (cookie: boolean) => void,\n  handlerSaveData: (cookie: boolean) => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement> | null) => void,\n}\n\nexport default function Settings(props: SettingsProps){  \n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <SettingsHeader {...props}/>\n          <About/>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n  setCurrentGame: React.Dispatch<React.SetStateAction<{game: gameType|undefined, edit: boolean}>>\n\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addGame = () => {\n    let newGame: gameType = \n    {   \n      uuid: uuid(),\n      gamename: \"New game\",\n      results: [],\n      players: [],\n      rankHistory: []\n    }\n    props.setGames(props.games.concat(newGame));\n    props.setCurrentGame({game: newGame, edit: true})\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addGame()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<{game: gameType|undefined, edit: boolean}>>\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.setCurrentGame({game: props.game, edit: false})}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography>{props.game.gamename}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\n\nexport interface GameAddResultWhoProps{\n    players: Array<playerType>,\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultWho(props: GameAddResultWhoProps){\n\n  const playerInResults = (uuidPlayer: string) => {\n    return (props.selectedPlayers.filter(player => (player.uuid === uuidPlayer)).length !== 0)\n  }\n\n  const togglePlayer = (uuidPlayer: string) => {\n    if(playerInResults(uuidPlayer))\n      props.setSelectedPlayers(props.selectedPlayers.filter(player => player.uuid !== uuidPlayer));\n    else\n      props.setSelectedPlayers([...props.selectedPlayers,{uuid: uuidPlayer, rank: 1}]);\n  }\n   \n  const renderCheckboxPlayers = (players: Array<playerType>) => {\n    return players.map((player) => \n    <ListItem key={player.uuid} dense button onClick={() => togglePlayer(player.uuid)}>\n      <ListItemIcon>\n          <Checkbox\n            edge=\"end\"\n            tabIndex={-1}\n            disableRipple\n            checked={playerInResults(player.uuid)}\n            onClick={() => togglePlayer(player.uuid)}\n            style={{color: player.color}}\n        />\n        </ListItemIcon>\n        <ListItemText id={player.uuid} primary={player.username} />\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n      <Typography>Who was playing?</Typography>\n      <List>\n        {renderCheckboxPlayers(props.players)}\n      </List>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n} from \"@material-ui/core\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\nexport interface GameAddResultWhenProps{\n    selectedDate: Date,\n    setSelectedDate: React.Dispatch<React.SetStateAction<Date>>\n}\n\nexport default function GameAddResultWhen(props: GameAddResultWhenProps){\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    props.setSelectedDate(date as Date);\n  };\n\n  return (\n    <DialogContent dividers>\n        <Typography>When?</Typography>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n            value={props.selectedDate}\n            onChange={handleDateChange}\n            showTodayButton\n            format=\"dd/MM/yyyy HH:mm\"\n            />\n        </MuiPickersUtilsProvider>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n  Avatar,\n  Grid,\n  MenuItem,\n  Select,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\nimport { getPlayerProfile, getPlayerLabel } from '../../../utils/lib';\n\nexport interface GameAddResultRanksProps{\n    players: Array<playerType>\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultRanks(props: GameAddResultRanksProps){\n  const handleChange = (event: any,uuidPlayer: string) => {\n    let newData: Array<scoreType> = props.selectedPlayers;\n    newData.map((el: scoreType) => (el.uuid === uuidPlayer ? el.rank=event.target.value : el))   \n    console.log('value changed')\n    props.setSelectedPlayers(newData);\n  };\n\n  const renderPossibilities = () =>  {\n    let possibilities: any = [];\n\n    for(let i = 1; i<props.selectedPlayers.length+1; i++)\n    possibilities.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n\n    return possibilities;\n  }\n \n  const renderPlayerRank = (selectedPlayers: scoreType[]) => {\n    return selectedPlayers.map((player) =>\n    <ListItem key={player.uuid} dense button>\n      <Grid container\n        direction=\"row\"\n        alignItems=\"baseline\"\n        justify=\"space-between\"\n        spacing={1}\n        >\n          <Grid item><Avatar alt={player.uuid} style={{backgroundColor: getPlayerProfile(props.players, player.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players, player.uuid))}</Avatar></Grid>\n          <Grid item><Typography>{getPlayerProfile(props.players, player.uuid).username}</Typography></Grid>\n          <Grid item><Select\n              id={player.uuid}\n              value={player.rank}\n              onChange={(event) => handleChange(event,player.uuid)}\n            >\n              {renderPossibilities()}\n          </Select>\n        </Grid>\n        </Grid>\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n        <Typography>Ranks</Typography>\n        <List>\n          {renderPlayerRank(props.selectedPlayers)}\n        </List>\n    </DialogContent>);\n}\n","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\n\nexport interface DeleteResultProps{\n  deleteResult: () => void,\n  setDeleteResultOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteResult(props: DeleteResultProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteResultOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this Result?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this Result and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteResultOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteResult()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { gameType, playerType, scoreType, resultType } from '../../../types/data';\nimport { Delete, NavigateBefore, NavigateNext, PostAdd } from '@material-ui/icons';\nimport GameAddResultWho from './GamesAddResultWho';\nimport GameAddResultWhen from './GameAddResultWhen';\nimport GameAddResultRanks from './GameAddResultRanks';\nimport { severityType } from '../../../types/notification';\nimport { getPlayerProfile } from '../../../utils/lib';\nimport { uuid } from 'uuidv4';\nimport DeleteResult from './DeleteResult';\n\nexport interface GameAddResultProps{\n    game: gameType,\n    players: Array<playerType>,\n    addResultOpen: {id:string|undefined, open:boolean},\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    addResult: (result: resultType, id: string | undefined) => void,\n    deleteResult: (uuid: string) => void,\n}\n\nexport default function GameAddResult(props: GameAddResultProps){\n  const [currentStep, setCurrentStep] = React.useState(\"who\");\n  const [selectedDate, setSelectedDate] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].date : new Date());\n  const [selectedPlayers, setSelectedPlayers] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].ranks : [] as Array<scoreType>);\n  const [deleteResultOpen, setDeleteResultOpen] = React.useState(false);\n\n  const displayCurrentStep = () => {\n    if(currentStep === \"who\")\n      return (<GameAddResultWho players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    if(currentStep === \"when\")\n      return (<GameAddResultWhen setSelectedDate={setSelectedDate} selectedDate={selectedDate}/>);\n\n    if(currentStep === \"ranks\")\n      return (<GameAddResultRanks players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    return <Typography>ERROR</Typography>\n  }\n\n  const nextStep = () => {\n    if(currentStep === \"who\")\n    {\n      if(selectedPlayers.length < 2)\n        props.addNotification(\"Please select a least 2 players\",\"error\");\n      else\n      {\n        setCurrentStep(\"when\");\n        const sorted = selectedPlayers.sort((a, b) => getPlayerProfile(props.players,a.uuid).username > getPlayerProfile(props.players,b.uuid).username ? 1 : -1)\n        setSelectedPlayers(sorted);\n      }\n    }\n    else if(currentStep === \"when\")\n      setCurrentStep(\"ranks\");\n  }\n  const backStep = () => {\n    if(currentStep === \"when\")\n      setCurrentStep(\"who\");\n    else if(currentStep === \"ranks\")\n      setCurrentStep(\"when\");\n  }\n\n  const addResult = () => {\n    let rank: number = 0;\n    let validResult: boolean = false;\n    selectedPlayers.forEach(player => {\n      if(rank===0)\n        rank=player.rank;\n      if(rank!==player.rank)\n        validResult=true;\n    });\n    if(validResult){\n      const sorted = selectedPlayers.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      setSelectedPlayers(sorted);\n      \n      const result: resultType = \n      {\n        date: selectedDate,\n        ranks: selectedPlayers,\n        uuid: uuid(),\n      }\n      if(props.addResultOpen.id)\n        props.addNotification(\"Result correctly edited\",\"success\");\n      else\n        props.addNotification(\"New result correctly added\",\"success\");\n\n      props.setAddResultOpen({id:undefined, open: false})\n      props.addResult(result,props.addResultOpen.id);\n    }\n    else\n      props.addNotification(\"Results need at least two different rank\",\"error\");\n  }\n\n  const deleteResult = () => {\n    setDeleteResultOpen(false)\n    props.setAddResultOpen({id:undefined, open:false})\n    props.deleteResult(props.addResultOpen.id!)\n  }\n\n  return (\n    <><Dialog fullWidth={true} maxWidth=\"sm\" open={props.addResultOpen.open}>\n    {props.addResultOpen.id ?  <DialogTitle>Edit result</DialogTitle> :  <DialogTitle>New result</DialogTitle>}\n    {displayCurrentStep()}\n    <DialogActions>\n      <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n        <Button onClick={() => props.setAddResultOpen({id:undefined, open:false})} >\n            Cancel\n        </Button>\n        {props.addResultOpen.id && <Button onClick={() => setDeleteResultOpen(true)}><Delete/></Button>}\n        <Button autoFocus disabled={currentStep === \"who\"} onClick={() => backStep()}>\n          <NavigateBefore/>\n        </Button>\n        {currentStep === \"ranks\" ? \n            <Button autoFocus onClick={() => addResult()} endIcon={<PostAdd/>}>\n              Send\n            </Button> :\n            <Button autoFocus onClick={() => nextStep()}>\n              <NavigateNext/>\n            </Button>\n        }\n       </ButtonGroup>\n    </DialogActions>\n  </Dialog>\n        {deleteResultOpen && <DeleteResult setDeleteResultOpen={setDeleteResultOpen} deleteResult={deleteResult}/>}\n  </>\n  );\n}","import React from 'react';\nimport { Chip, createStyles, makeStyles } from \"@material-ui/core\";\nimport { EmojiEvents } from '@material-ui/icons';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        backgroundColor: \"rgba(0,0,0,0.9)\",\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        border: \"2px solid #FFFFFF\",\n        zIndex: 0\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n    },\n    third: {\n        color: \"#cd7f32\",\n    }\n}),\n);\nexport interface ScoreChipProps{\n  rank: number\n  score: number\n  deltaScore: boolean\n}\n\nexport default function ScoreChip(props: ScoreChipProps){\n    const classes = useStyles(); \n\n    const getRankBadge = (rank: number) => \n    {\n        if(rank===1) \n            return <EmojiEvents className={classes.first}/>\n        else if(rank===2)\n            return <EmojiEvents className={classes.second}/>\n        else if(rank===3)\n        return <EmojiEvents className={classes.third}/>\n        return <></>\n    }\n\n    let text: string = `${Math.round(props.score)}`, color: string = \"#FDFDFD\"\n    if(props.deltaScore){\n        text = props.score < 0 ? `${Math.round(props.score)}` : `+${Math.round(props.score)}`\n        color= props.score < 0 ? \"#FF2020\" : \"#10FFB0\"\n    }\n    return <Chip className={classes.root} icon={getRankBadge(props.rank)} label={text} size=\"small\" variant=\"outlined\" style={{color: color}}/>\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Avatar,\n  Badge,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { playerRankHistory, playerType, resultType } from '../../../types/data';\nimport { getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ScoreChip from '../../scoreChip/ScoreChip';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n}),\n);\n\nexport interface ResultCardProps{\n    result: resultType,\n    players: Array<playerType>,\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    playersRank: Array<playerRankHistory>\n}\n\nexport default function ResultCard(props: ResultCardProps){\n  const classes = useStyles(); \n\n  \n  const displayPlayersBadges = () => {\n    return (props.result.ranks.map((rank) => \n    {\n        const playerRank = props.playersRank.filter(player => player.playerUuid === rank.uuid)[0] \n        const title = `${getPlayerProfile(props.players, rank.uuid).username} - New score: ${Math.round(playerRank.score)}`\n\n        return <Grid item>\n            <Tooltip title={title}>\n            <Badge\n            overlap=\"circle\"\n            style={{borderColor: \"rgba(0,0,0,0)\"}}\n            anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n            }}\n            badgeContent={<ScoreChip rank={rank.rank} score={playerRank.deltaScore} deltaScore={true}/>}\n            >\n            \n            <Avatar alt={getPlayerProfile(props.players,rank.uuid).username} style={{backgroundColor: getPlayerProfile(props.players,rank.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,rank.uuid))}</Avatar>\n            </Badge>\n            </Tooltip>\n        </Grid>\n    }\n    ));\n  }\n\n  return (\n    <Grid item>\n        <Card className={classes.Padding} onClick={()=>props.setAddResultOpen({id: props.result.uuid, open:true})}>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n            <Grid item>\n                <Grid \n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    {displayPlayersBadges()}\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Typography>{props.result.date.toLocaleString()}</Typography>\n            </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n  );\n}","import React, { ChangeEvent, VoidFunctionComponent } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\n\nexport interface DeleteGameProps{\n  deleteGame: () => void,\n  setDeleteGameOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteGame(props: DeleteGameProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteGameOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this game?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this game and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteGameOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteGame()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\n\n\nexport interface EditGameProps{\n    handleChangeGamename: (newGamename: string) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n    currentGamename: string,\n}\n\nexport default function EditGame(props: EditGameProps){  \n    const [gamename, setGamename] = React.useState(props.currentGamename);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Change the gamename\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={gamename} onChange={(e) => setGamename(e.target.value)} ></Input>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangeGamename(gamename); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import {\n    Grid,\n    Chip,\n    Avatar,\n    Badge,\n    Typography,\n    Paper,\n    Tooltip as Tooltip1\n  } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { LineChart, XAxis, Legend, CartesianGrid, Tooltip, Line, ResponsiveContainer, YAxis } from \"recharts\";\nimport { theme } from \"../../App\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../../types/data\";\nimport { getPlayerLabel, getPlayerProfile, getResult, toChartScore } from \"../../utils/lib\";\nimport ScoreChip from \"../scoreChip/ScoreChip\";\n  \nexport interface LineChartResultProps {\n  players: Array<playerType>,\n  game: gameType,\n}\n\n\n\nexport default function LineChartResult(props: LineChartResultProps){\n  const stateLineDesign = (players: Array<scoreType>, uuid: string) => {\n    let opacity: Record<string, number> = {}\n    let width: Record<string, number> = {}\n   \n    players.forEach((player) => {\n      if(uuid && player.uuid===uuid)\n      {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 4\n      } else if(uuid) {\n        opacity[player.uuid] = 0.7\n        width[player.uuid] = 2\n      } else {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 2\n      }\n    })\n    return { opacity: opacity, width: width }\n  }\n  const [lineDesign, setLineDesign] = useState(stateLineDesign(props.game.players, \"\"));\n\n  const generateLines = (players: Array<scoreType>) => {\n    return players.map((player) => {\n        return <Line key={player.uuid} type=\"natural\" strokeWidth={lineDesign.width[player.uuid]} strokeOpacity={lineDesign.opacity[player.uuid]} dataKey={player.uuid} stroke={getPlayerProfile(props.players,player.uuid).color} yAxisId={1}/>\n      })\n  }\n\n  const handleMouseEnter = (uuid: string) => {\n    setLineDesign(stateLineDesign(props.game.players, uuid))\n  };\n\n  const handleMouseLeave = () => {\n    setLineDesign(stateLineDesign(props.game.players, \"\"));\n  };\n\n\n  const renderLegend = () => {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\"  spacing={5} style={{paddingBottom: theme.spacing(2)}}>\n        {\n          props.game.rankHistory[props.game.rankHistory.length-1].playersRank.sort((a, b) => a.score < b.score ? 1 : -1).map((player,index) => {\n            const playerProfile = getPlayerProfile(props.players,player.playerUuid)\n                  return <Grid item key={index} onMouseEnter={() => handleMouseEnter(player.playerUuid)} onMouseLeave={() => handleMouseLeave()}><Tooltip1 title={playerProfile.username}><Badge\n                      overlap=\"circle\"\n                      style={{borderColor: \"rgba(0,0,0,0)\"}}\n                      anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                      }}\n                      badgeContent={<ScoreChip rank={index+1} score={player.score} deltaScore={false}/>}\n                  >\n                      <Avatar alt={playerProfile.username} style={{backgroundColor: playerProfile.color}}>{getPlayerLabel(playerProfile)}</Avatar>\n                  </Badge></Tooltip1></Grid>\n            })\n        }\n      </Grid>\n    );\n  }\n  const generateLineScorePlayer = (historyEntry: historyEntryType, playerUuid: string, playing: boolean) => {\n    const playerRank = historyEntry.playersRank.filter((player) => player.playerUuid === playerUuid)[0]\n    const playerInfo = getPlayerProfile(props.players, playerUuid)\n    if(playing)\n    {\n      const color = playerRank.deltaScore < 0 ? \"#FF2020\" : \"#10FFB0\" \n      const deltaScore = playerRank.deltaScore < 0 ? `${Math.round(playerRank.deltaScore)}` : `+${Math.round(playerRank.deltaScore)}`\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} style={{backgroundColor: playerInfo.color, color: \"#FFFFFF\"}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1} style={{color: color}}>({deltaScore})</Grid>\n            </Grid>\n    }\n    else\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} variant=\"outlined\" style={{borderColor: playerInfo.color}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1}></Grid>\n            </Grid>\n  }\n\n  const renderPlayersScore = (result: resultType, data: any) => {\n    const historyEntry = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0] as historyEntryType\n\n    const uuidPresentPlayers: Array<string> = []\n    const uuidOtherPlayers: Array<string> = []\n    result.ranks.forEach(rank => uuidPresentPlayers.push(rank.uuid))\n    props.game.players.filter((player) => uuidPresentPlayers.indexOf(player.uuid) <= -1).forEach((player) => uuidOtherPlayers.push(player.uuid))\n    const componentPresentPlayers = uuidPresentPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, true)\n    })\n    const componentOtherPlayers = uuidOtherPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, false)\n    })\n   \n    return [componentPresentPlayers,componentOtherPlayers]\n  }\n\n  const renderTooltip = (propsTooltip: any) => {\n    const { active, payload, label} = propsTooltip\n    if (active && payload && payload.length && label) {\n      return (\n        <Paper variant=\"outlined\" style={{ paddingTop: theme.spacing(2), paddingBottom: theme.spacing(2),paddingLeft: theme.spacing(2),paddingRight: theme.spacing(4)}}>\n          <Typography>{label ? getResult(props.game.results,label).date.toLocaleString() : \"Start\"}</Typography>\n          <Grid container direction=\"column\" spacing={1}>{renderPlayersScore(getResult(props.game.results, label), payload)}</Grid>\n        </Paper>\n      );\n    }\n\n    return null;\n};\n  \n  return (\n    props.game.rankHistory.length && props.game.players.length ? \n    <div style={{width:'100%'}}>\n    <ResponsiveContainer width=\"100%\" height={400}>\n    <LineChart\n      height={400}\n      data={toChartScore(props.game.rankHistory)}\n      margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\n      >\n      <XAxis dataKey=\"resultUuid\" tick={false} />\n      <YAxis yAxisId={1} domain={['dataMin - 50', 'dataMax + 50']}/>\n      <Tooltip content={renderTooltip} />\n      <Legend verticalAlign=\"top\" content={renderLegend}/>\n      <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"3 3\"/>\n      {generateLines(props.game.players).flat()}\n    </LineChart></ResponsiveContainer></div> : <></>\n  );  \n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n//   Tooltip,\n} from \"@material-ui/core\"\nimport { gameType, playerType, resultType } from '../../../types/data'\nimport { Delete, Edit, NavigateBefore, PostAdd } from '@material-ui/icons'\nimport GameAddResult from './GameAddResult'\nimport { severityType } from '../../../types/notification'\nimport { calculatePresentPlayers, calculateRanking } from '../../../utils/lib'\nimport ResultCard from './ResultCard'\nimport DeleteGame from './DeleteGame'\nimport EditGame from './EditGame'\nimport LineChartResult from '../../lineChartResult/LineChartResult'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n)\nexport interface GameCompleteCardProps{\n    game: gameType,\n    players: Array<playerType>,\n    changeGameData: (game: gameType, uuid: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<{game: gameType|undefined, edit: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    deleteGame: (uuid: string) => void,\n    edit: boolean\n}\n\nexport default function GameCompleteCard(props: GameCompleteCardProps){\n  const classes = useStyles()\n\n  const [addResultOpen, setAddResultOpen] = React.useState({id: undefined as string|undefined, open:false})\n  const [editMode, setEditMode] = React.useState(props.edit)\n  const [deleteGameOpen, setDeleteGameOpen] = React.useState(false)\n\n  const handleChangeGamename = (newGamename: string) => {\n    let newData: gameType = Object.assign({}, props.game)\n    newData.gamename = newGamename\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const deleteGame = () => {\n    props.addNotification(\"Game correctly deleted\",\"success\")\n    setDeleteGameOpen(false)\n    props.deleteGame(props.game.uuid)\n  }\n\n  const deleteResult = (id: string) => {\n    let newData: gameType = Object.assign({}, props.game)\n    newData.results = newData.results.filter(result => result.uuid !== id)\n    newData.players = calculatePresentPlayers(newData)\n    newData.rankHistory = calculateRanking(newData)\n\n    props.addNotification(\"Result correctly deleted\",\"success\")\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const addResult = (newResult: resultType, id: string|undefined) => {\n    let newData: gameType = Object.assign({}, props.game)\n    if(!newData.results)\n        newData.results = []\n    else if(id)\n        newData.results = newData.results.filter(item => item.uuid !== id)\n    newData.results.push(newResult)\n    newData.players = calculatePresentPlayers(newData)\n    newData.rankHistory = calculateRanking(newData)\n\n    if(newData.players)\n    {\n        const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n        newData.players = sortedRanks\n    }\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const displayResults = () => {\n    if (props.game.results){\n        return props.game.results.sort((a,b) => a.date < b.date ? 1 : -1).map(result => {\n            const playersRank = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0].playersRank\n            return <ResultCard result={result} players={props.players} setAddResultOpen={setAddResultOpen} playersRank={playersRank}></ResultCard>}\n        );\n    }\n  }\n\n  const handlerAddResult = () => {\n    if(props.players.length<2)\n        props.addNotification(\"You must add at least 2 players before\", \"error\")\n    else\n        setAddResultOpen({id: undefined, open:true})\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentGame({game: undefined, edit: false})}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button endIcon={<PostAdd/>}  onClick={() => handlerAddResult()}>New result</Button>\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                    <Button onClick={() => setDeleteGameOpen(true)}><Delete/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography color=\"primary\" variant=\"h3\" align=\"center\">\n                {props.game.gamename}\n            </Typography>\n        </Grid>\n        {props.game.players && \n        <Grid item>\n            <LineChartResult players={props.players} game={props.game}/>\n        </Grid>}\n       \n        </Grid>\n        {addResultOpen.open ? <GameAddResult game={props.game} players={props.players} addResultOpen={addResultOpen} setAddResultOpen={setAddResultOpen} addNotification={props.addNotification} addResult={addResult} deleteResult={deleteResult}></GameAddResult> : <></>}\n    </Card>\n    <Grid \n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={1}\n    >\n        {displayResults()}\n    </Grid>\n    {deleteGameOpen && <DeleteGame setDeleteGameOpen={setDeleteGameOpen} deleteGame={deleteGame}></DeleteGame>}\n    {editMode && <EditGame setEditMode={setEditMode} handleChangeGamename={handleChangeGamename} currentGamename={props.game.gamename}></EditGame>}\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { gameType, playerType } from '../../../types/data';\nimport GameCompleteCard from './GameCompleteCard';\nimport { severityType } from '../../../types/notification';\n\nexport interface GamesProps{\n    games: Array<gameType>,\n    players: Array<playerType>\n    setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Games(props: GamesProps){\n    const [currentGame, setCurrentGame] = useState({game: undefined, edit: false} as unknown as {game: gameType|undefined, edit: boolean});\n\n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData} setCurrentGame={setCurrentGame}></GameCard>))\n    };\n\n    const changeGameData = (game: gameType, uuid: string) => {\n        let new_data: Array<gameType> = props.games\n        new_data.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, game) : el))   \n        props.setGames(new_data);\n    }\n\n    const deleteGame = (uuid: string) => {\n        let new_data: Array<gameType> = props.games.filter(item => item.uuid !== uuid);\n        setCurrentGame({game: undefined, edit: false});\n        props.setGames(new_data);\n        props.addNotification(\"Game correctly deleted\",\"success\");\n    }\n\n    return (\n    <Container>\n        { currentGame.game?\n            <GameCompleteCard game={currentGame.game} edit={currentGame.edit} changeGameData={changeGameData} setCurrentGame={setCurrentGame} players={props.players} addNotification={props.addNotification} deleteGame={deleteGame}></GameCompleteCard>\n            :\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n                <GamesHeader games={props.games} setGames={props.setGames} setCurrentGame={setCurrentGame}></GamesHeader>\n                {renderGameCards(props.games)}\n        </Grid>\n        }\n    </Container>\n  );\n}","import React from 'react';\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport { gameType, playerType } from '../../types/data';\nimport { severityType } from '../../types/notification';\n\nexport interface PagesProps{\n  currentPage: string,\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  handlerSaveData: (cookie: boolean) => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement> | null) => void,\n  addNotification: (arg0: string, arg1: severityType) => void,\n  handlerResetData: (cookie: boolean) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'players':\n          return <Players players={props.players} games={props.games} setPlayers={props.setPlayers} addNotification={props.addNotification}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData} handlerResetData={props.handlerResetData}></Settings>;\n        case 'games':\n          return <Games games={props.games} setGames={props.setGames} players={props.players} addNotification={props.addNotification}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport interface NotificationProps{\n  notification: notificationType,\n  setNotification: any,\n}\n\nexport default function Notification(props: NotificationProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotification({open: false});\n  };\n\n    return (\n       props.notification.open ?  \n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal:'right'}}\n          open={props.notification.open}\n          autoHideDuration={6000} \n          onClose={handleClose}\n        >\n          <Alert severity={props.notification.severity ? props.notification.severity : \"info\"} onClose={handleClose}>{props.notification.text}</Alert>\n        </Snackbar> \n        :\n        <></>\n  );\n}","import React from \"react\"\nimport {\n  createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme,\n} from \"@material-ui/core/styles\"\nimport Header from \"./components/header/Header\"\nimport Footer, { FooterProps } from \"./components/footer/Footer\"\nimport Pages, { PagesProps } from \"./components/pages/Pages\"\nimport { dataType, gameType, playerType } from \"./types/data\"\nimport Notifications, { NotificationProps } from \"./components/pages/notifications/Notification\"\nimport { notificationType, severityType } from \"./types/notification\"\nimport { generateGameFromLoadedData } from \"./utils/lib\"\n\nexport const theme = createMuiTheme({\n  palette: {\n    error: {\n      main: \"#DD0505\",\n    },\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n})\n\nconst useStyles = makeStyles((theme) => createStyles({\n  App: {\n    paddingBottom: theme.spacing(15),\n  },\n}))\n\nfunction App() {\n  const [page, setPage] = React.useState(\"games\")\n  const [players, setPlayers] = React.useState([]as Array<playerType>)\n  const [games, setGames] = React.useState([] as Array<gameType>)\n  const [notification, setNotification] = React.useState({ open: false } as notificationType)\n\n  const classes = useStyles()\n\n  const getJsonSavedData = () => {\n    const data = {\n      players,\n      games: games.map(game => { return { uuid: game.uuid, gamename: game.gamename, results: game.results }})\n    }\n    return data\n  }\n\n  const handlerSaveData = (cookie: boolean) => {\n    const stringifiedData = JSON.stringify(getJsonSavedData())\n\n    if(cookie)\n    {\n      try {\n        localStorage.setItem('data', stringifiedData)\n        addNotification('Data saved as cookies', \"success\")\n      } catch(e) {\n        addNotification('Error when saving as cookies', \"error\")\n      }\n    }\n    else {\n      const FileSaver = require(\"file-saver\")\n      const blob = new Blob([stringifiedData], { type: \"application/json\" })\n      FileSaver.saveAs(blob, \"save_game-ranking.json\")\n    }\n  }\n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement> | null) => {\n    if(e){\n      try {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n          if (e.target?.result) {\n            const data = JSON.parse(e.target.result as string)\n            setPlayers(data.players)\n            const games: Array<gameType> = data.games.map((game: { uuid: any; gamename: any; results: any }) => generateGameFromLoadedData(game))\n            setGames(games)\n            addNotification(\"Data correctly loaded\", \"success\")\n            setPage(\"games\")\n          }\n        }\n        if (e.target?.files) {\n          reader.readAsText(e.target.files[0])\n        }\n      } catch {\n        addNotification(\"Error when loading data\", \"error\")\n      }\n    }\n    else{\n      if(localStorage.getItem('data'))\n      {\n        const data = JSON.parse(localStorage.getItem('data')!)\n        setPlayers(data.players)\n        const games: Array<gameType> = data.games.map((game: { uuid: any; gamename: any; results: any }) => generateGameFromLoadedData(game))\n        setGames(games)\n        addNotification(\"Data correctly loaded\", \"success\")\n        setPage(\"games\")\n      }\n      else \n        addNotification(\"Data not found in cookies\", \"warning\")\n    }\n  }\n\n  const handlerResetData = (cookie: boolean) => {\n    if(cookie){\n      localStorage.removeItem('data')\n      addNotification(\"Cookie correctly removed\", \"success\")\n    } else {\n      setPlayers([])\n      setGames([])\n      addNotification(\"Current session correctly reinitiliazed\", \"success\")\n    }\n  }\n\n  const addNotification = (text: string, severity?: severityType) => {\n    const new_notification = {\n      open: true,\n      text,\n      severity: severity || undefined,\n    }\n    setNotification(new_notification)\n  }\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, newPage: string) => {\n    setPage(newPage)\n  }\n\n  const pagesProps: PagesProps = {\n    currentPage: page,\n    games,\n    setGames,\n    players,\n    setPlayers,\n    handlerSaveData,\n    handlerLoadData,\n    handlerResetData,\n    addNotification,\n  }\n\n  const footerProps: FooterProps = {\n    handleChangeCurrentPage,\n    currentPage: page,\n  }\n\n  const notificationsProps: NotificationProps = {\n    notification,\n    setNotification,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header />\n        <Pages {...pagesProps} />\n        <Footer {...footerProps} />\n      </div>\n      <Notifications {...notificationsProps} />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}