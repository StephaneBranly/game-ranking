{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/pages/summary/Summary.tsx","components/pages/players/PlayersHeader.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/LoadSave.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/GameCompleteCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","components/pages/notifications/Notification.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","badge","padding","first","border","second","third","Summary","Container","Grid","container","direction","justify","alignItems","item","Paper","Badge","PlayersHeader","Card","players","length","Button","color","startIcon","onClick","require","randomColor","new_player","uuid","username","setPlayers","concat","addPlayer","Padding","ColorPicker","zIndex","Name","paddingLeft","paddingRight","borderRadius","margin","PlayerCard","React","useState","colorPickerOpen","setColorPickerOpen","player","setUsername","addNotification","IconButton","size","style","ClickAwayListener","onClickAway","new_data","Object","assign","changePlayerData","handleChangeUsername","InputBase","e","target","defaultValue","badgeContent","showZero","onChangeComplete","hex","disableAlpha","Players","map","el","subSection","marginLeft","borderLeft","About","Settings","display","accept","id","type","handlerLoadData","htmlFor","component","Publish","GetApp","handlerSaveData","LoadSaveProps","GamesHeader","games","new_game","gamename","setGames","GameCard","setCurrentGame","game","GameCompleteCard","setGamename","undefined","NavigateBefore","ButtonGroup","disableElevation","endIcon","PostAdd","Edit","Delete","changeGameData","handleChangeGamename","Games","currentGame","Pages","renderPage","Alert","elevation","Notification","handleClose","event","reason","setNotification","open","notification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","text","createMuiTheme","primary","App","paddingBottom","page","setPage","pages_props","data","FileSaver","json","JSON","stringify","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","a","result","parse","files","readAsText","footer_prop","new_page","notifications_props","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAWMA,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJC,SAAU,EACVC,aAAcJ,EAAMK,QAAQ,IAE9BC,OAAQ,CACNC,WAAY,0EAEdC,YAAa,CACXC,YAAaT,EAAMK,QAAQ,IAE7BK,MAAO,CACLP,SAAU,QAKC,SAASQ,IACtB,IAAMC,EAAUd,IAEhB,OACI,qBAAKe,UAAWD,EAAQV,KAAxB,SACI,cAACI,EAAA,EAAD,CAAQO,UAAWD,EAAQN,OAAQQ,SAAS,SAA5C,SACA,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAaF,UAAWD,EAAQJ,cAChC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWD,EAAQF,MAA5C,iC,oJCrBRZ,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJC,SAAU,EACVe,gBAAiBlB,EAAMmB,QAAQC,UAAUC,KACzCC,MAAO,OACPR,SAAU,QACVS,OAAQ,QAUG,SAASC,EAAOC,GAC7B,IAAMb,EAAUd,IAEV4B,EAAcD,EAAMC,YAC1B,OACE,eAACC,EAAA,EAAD,CAAkBC,MAAOF,EAAaG,SAAUJ,EAAMK,wBAAyBjB,UAAWD,EAAQV,KAAlG,UACE,cAAC6B,EAAA,EAAD,CAAwBC,MAAM,UAAUJ,MAAM,UAAUK,KAAsB,YAAhBP,EAA4B,cAAC,IAAD,IAAe,cAAC,IAAD,MACzG,cAACK,EAAA,EAAD,CAAwBC,MAAM,QAAQJ,MAAM,QAAQK,KAAsB,UAAhBP,EAA0B,cAAC,IAAD,IAAkB,cAAC,IAAD,MACtG,cAACK,EAAA,EAAD,CAAwBC,MAAM,UAAUJ,MAAM,UAAUK,KAAsB,YAAhBP,EAA4B,cAAC,IAAD,IAAY,cAAC,IAAD,MACtG,cAACK,EAAA,EAAD,CAAwBC,MAAM,WAAWJ,MAAM,WAAWK,KAAsB,aAAhBP,EAA6B,cAAC,IAAD,IAAe,cAAC,IAAD,S,wCC9B5G5B,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTiC,MAAO,CACHC,QAASnC,EAAMK,QAAQ,IAE3B+B,MAAO,CACHD,QAASnC,EAAMK,QAAQ,GACvBgC,OAAQ,oBACR9B,WAAY,6CAEhB+B,OAAQ,CACJH,QAASnC,EAAMK,QAAQ,GACvBgC,OAAQ,oBACR9B,WAAY,6CAEhBgC,MAAO,CACHJ,QAASnC,EAAMK,QAAQ,GACvBgC,OAAQ,oBACR9B,WAAY,kDASL,SAASiC,EAAQf,GAC9B,IAAMb,EAAUd,IAEhB,OACE,cAAC2C,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,UAJf,UAMI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACC,EAAA,EAAD,CAAOnC,UAAWD,EAAQ0B,OAA1B,SAAkC,eAACI,EAAA,EAAD,CAC7CC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,WAJkC,UAMzC,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAAC/B,EAAA,EAAD,8BAA6C,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACE,EAAA,EAAD,UAAO,cAAC,IAAD,eAE9E,cAACP,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACC,EAAA,EAAD,CAAOnC,UAAWD,EAAQwB,MAA1B,SAAiC,eAACM,EAAA,EAAD,CAC5CC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,WAJiC,UAMxC,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAAC/B,EAAA,EAAD,4BAA2C,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACE,EAAA,EAAD,UAAO,cAAC,IAAD,eAE5E,cAACP,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACC,EAAA,EAAD,CAAOnC,UAAWD,EAAQ2B,MAA1B,SAAiC,eAACG,EAAA,EAAD,CAC5CC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,WAJiC,UAMxC,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAAC/B,EAAA,EAAD,8BAA6C,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACE,EAAA,EAAD,UAAO,cAAC,IAAD,oB,gDC3DpFnD,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJiC,QAASnC,EAAMK,QAAQ,SAUZ,SAAS6C,EAAczB,GACpC,IAAMb,EAAUd,IAgBhB,OACE,cAAC4C,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,UACE,eAACT,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,WACXzC,QAAS,EACTQ,UAAWD,EAAQV,KANrB,UAQE,cAACwC,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,eAAC/B,EAAA,EAAD,WAAaS,EAAM2B,QAAQC,OAA3B,kBACX,cAACX,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CACErC,QAAQ,YACRsC,MAAM,UACNC,UAAW,cAAC,IAAD,IACXC,QAAS,kBA9BL,WAChB,IACIF,EADcG,EAAQ,IACdC,GACRC,EACJ,CACEC,KAAMA,iBACNC,SAAU,aACVP,MAAOA,GAET9B,EAAMsC,WAAWtC,EAAM2B,QAAQY,OAAOJ,IAqBXK,IAJjB,uC,gECtCRnE,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTiE,QAAS,CACL/B,QAASnC,EAAMK,QAAQ,IAE3B+B,MAAO,CACHmB,MAAO,WAEXjB,OAAQ,CACJiB,MAAO,WAGXhB,MAAO,CACHgB,MAAO,WAEXY,YAAa,CACTrD,SAAU,WACVsD,OAAQ,GAEZC,KAAM,CACFC,YAAatE,EAAMK,QAAQ,GAC3BkE,aAAcvE,EAAMK,QAAQ,GAC5BmE,aAAcxE,EAAMK,QAAQ,GAC5BoE,OAAQ,MACRpC,OAAQ,4BACRf,MAAOtB,EAAMK,QAAQ,UAWd,SAASqE,GAAWjD,GACjC,IAAMb,EAAUd,KAEhB,EAA8C6E,IAAMC,UAAS,GAA7D,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAgCH,IAAMC,SAASnD,EAAMsD,OAAOjB,UAA5D,mBAAOA,EAAP,KAAiBkB,EAAjB,KAcA,OACE,cAACtC,EAAA,EAAD,CAAMK,MAAI,EAAC1C,QAAS,EAApB,SACI,eAAC8C,EAAA,EAAD,CAAMtC,UAAWD,EAAQsD,QAAST,QAAS,kBAAMhC,EAAMwD,gBAAgB,gBAAgB,SAAvF,UACI,eAACvC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WAJf,UAMI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACL,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WACXzC,QAAS,EALb,UAOI,cAACqC,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACmC,EAAA,EAAD,CAAYC,KAAK,QAAQ1B,QAAS,WAAKqB,GAAmB,IAA1D,SAAkE,cAAC,KAAD,CAAQM,MAAO,CAAC7B,MAAO9B,EAAMsD,OAAOxB,aACjH,cAACb,EAAA,EAAD,CAAMK,MAAI,EAAV,SACQ,cAACsC,GAAA,EAAD,CAAmBC,YAAa,kBAzBjC,WAC3B,IAAIC,EAAuBC,OAAOC,OAAO,GAAIhE,EAAMsD,QACnDQ,EAASzB,SAAWA,EACpBrC,EAAMiE,iBAAiBH,EAAU9D,EAAMsD,OAAOlB,MAsBoB8B,IAAtC,SAA8D,cAACC,GAAA,EAAD,CAAW/E,UAAWD,EAAQyD,KAAMxC,SAAU,SAACgE,GAAD,OAAOb,EAAYa,EAAEC,OAAOlE,QAAQmE,aAActE,EAAMsD,OAAOjB,oBAI3L,cAACpB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACL,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WACXzC,QAAS,EALb,UAOI,cAACqC,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACE,EAAA,EAAD,CAAO+C,aAAc,EAAGC,UAAQ,EAACpF,UAAWD,EAAQwB,MAAOmB,MAAM,UAAjE,SAA2E,cAAC,IAAD,QACtF,cAACb,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACE,EAAA,EAAD,CAAO+C,aAAc,GAAIC,UAAQ,EAACpF,UAAWD,EAAQ0B,OAAQiB,MAAM,UAAnE,SAA6E,cAAC,IAAD,QACxF,cAACb,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACE,EAAA,EAAD,CAAO+C,aAAc,EAAGC,UAAQ,EAACpF,UAAWD,EAAQ2B,MAAOgB,MAAM,UAAjE,SAA2E,cAAC,IAAD,gBAKjGsB,GACG,cAACQ,GAAA,EAAD,CAAmBC,YAAa,kBAAMR,GAAmB,IAAzD,SACI,cAAC,KAAD,CAAcjE,UAAWD,EAAQuD,YAAaZ,MAAO9B,EAAMsD,OAAOxB,MAAO2C,iBApDzD,SAAC3C,GACjC,IAAIgC,EAAuBC,OAAOC,OAAO,GAAIhE,EAAMsD,QACnDQ,EAAShC,MAAQA,EAAM4C,IACvB1E,EAAMiE,iBAAiBH,EAAU9D,EAAMsD,OAAOlB,OAiDwFuC,cAAc,WCnGxJ,IAAMtG,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,OAWE,SAASoG,GAAQ5E,GACZ3B,KAAhB,IAE2BsD,EAIrBsC,EAAmB,SAACX,EAAoBlB,GAC5C,IAAI0B,EAA8B9D,EAAM2B,QACxCmC,EAASe,KAAI,SAACC,GAAD,OAAqBA,EAAG1C,OAASA,EAAO2B,OAAOC,OAAOc,EAAIxB,GAAUwB,KACjF9E,EAAMsC,WAAWwB,IAGrB,OACE,cAAC9C,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UACXzC,QAAS,EALb,UAOI,cAAC6C,EAAD,CAAeE,QAAS3B,EAAM2B,QAASW,WAAYtC,EAAMsC,cAnBtCX,EAoBA3B,EAAM2B,QAnBrBA,EAAQkD,KAAI,SAACvB,GAAD,OAAwB,cAACL,GAAD,CAAYK,OAAQA,EAAQW,iBAAkBA,EAAkBT,gBAAiBxD,EAAMwD,2BClB3I,IAAMnF,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTkC,QAAS,CACLA,QAASnC,EAAMK,QAAQ,IAE3BmG,WACA,CACIlC,YAAatE,EAAMK,QAAQ,GAC3BoG,WAAYzG,EAAMK,QAAQ,GAC1BqG,WAAY,iCAQL,SAASC,GAAMlF,GAC1B,IAAMb,EAAUd,KAEhB,OACI,cAAC4C,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,UACI,eAACT,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,gBACRC,WAAW,UACXzC,QAAS,EACTQ,UAAWD,EAAQuB,QANvB,UAQI,cAACO,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKsC,MAAM,UAA/B,wBAEJ,cAACb,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACN,EAAA,EAAD,CAAW5B,UAAWD,EAAQ4F,WAA9B,UACI,cAACxF,EAAA,EAAD,CAAaC,QAAQ,KAAKsC,MAAM,gBAAhC,wBACA,cAACvC,EAAA,EAAD,uDAGR,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACN,EAAA,EAAD,CAAW5B,UAAWD,EAAQ4F,WAA9B,UACI,cAACxF,EAAA,EAAD,CAAaC,QAAQ,KAAKsC,MAAM,gBAAhC,yBACA,cAACvC,EAAA,EAAD,wF,wBC1CtBlB,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTkC,QAAS,CACLA,QAASnC,EAAMK,QAAQ,SAUhB,SAASuG,GAASnF,GAC7B,IAAMb,EAAUd,KAEhB,OACI,cAAC4C,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,UACF,eAACT,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,WACXzC,QAAS,EACTQ,UAAWD,EAAQuB,QANrB,UAQE,eAACO,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBACIqC,MAAO,CAAEyB,QAAS,QAClBC,OAAO,QAEPC,GAAG,0BACHC,KAAK,OACLnF,SAAUJ,EAAMwF,kBAElB,uBAAOC,QAAQ,0BAAf,SACE,cAAC5D,EAAA,EAAD,CACErC,QAAQ,YACRsC,MAAM,UACN4D,UAAU,OACV3D,UAAW,cAAC4D,GAAA,EAAD,IAJb,4BAUN,cAAC1E,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CACErC,QAAQ,YACRsC,MAAM,UACNC,UAAW,cAAC6D,GAAA,EAAD,IACX5D,QAAShC,EAAM6F,gBAJjB,gCCjDd,IAAMxH,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTkC,QAAS,CACLA,QAASnC,EAAMK,QAAQ,SAUhB,SAASuG,GAASnF,GACb3B,KAAhB,IAEMyH,EACN,CACED,gBAAiB7F,EAAM6F,gBACvBL,gBAAiBxF,EAAMwF,iBAEzB,OACA,cAACxE,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UACXzC,QAAS,EALb,UAOE,cAAC,GAAD,eAAckH,IACd,cAACZ,GAAD,S,yBC7BJ7G,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJiC,QAASnC,EAAMK,QAAQ,SAUZ,SAASmH,GAAY/F,GAClC,IAAMb,EAAUd,KAahB,OACE,cAAC4C,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,UACE,eAACT,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,WACXzC,QAAS,EACTQ,UAAWD,EAAQV,KANrB,UAQE,cAACwC,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,eAAC/B,EAAA,EAAD,WAAaS,EAAMgG,MAAMpE,OAAzB,gBACX,cAACX,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CACErC,QAAQ,YACRsC,MAAM,UACNC,UAAW,cAAC,KAAD,IACXC,QAAS,kBA3BL,WAChB,IAAIiE,EACJ,CACE7D,KAAMA,iBACN8D,SAAU,YAEZlG,EAAMmG,SAASnG,EAAMgG,MAAMzD,OAAO0D,IAqBPzD,IAJjB,qCCzCd,IAAMnE,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTiE,QAAS,CACL/B,QAASnC,EAAMK,QAAQ,IAE3B+B,MAAO,CACHmB,MAAO,WAEXjB,OAAQ,CACJiB,MAAO,WAGXhB,MAAO,CACHgB,MAAO,WAEXY,YAAa,CACTrD,SAAU,WACVsD,OAAQ,GAEZC,KAAM,CACFC,YAAatE,EAAMK,QAAQ,GAC3BkE,aAAcvE,EAAMK,QAAQ,GAC5BmE,aAAcxE,EAAMK,QAAQ,GAC5BoE,OAAQ,MACRpC,OAAQ,4BACRf,MAAOtB,EAAMK,QAAQ,UAUd,SAASwH,GAASpG,GAC/B,IAAMb,EAAUd,KAGhB,OACE,cAAC4C,EAAA,EAAD,CAAMK,MAAI,EAAC1C,QAAS,EAApB,SACI,cAAC8C,EAAA,EAAD,CAAMtC,UAAWD,EAAQsD,QAAST,QAAS,kBAAMhC,EAAMqG,eAAerG,EAAMsG,OAA5E,SACI,cAACrF,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WAJf,SAMI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACL,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WACXzC,QAAS,EALb,SAOI,cAACqC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAAC/B,EAAA,EAAD,UAAaS,EAAMsG,KAAKJ,uB,sDCrD9C7H,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTiE,QAAS,CACL/B,QAASnC,EAAMK,QAAQ,IAE3B+B,MAAO,CACHmB,MAAO,WAEXjB,OAAQ,CACJiB,MAAO,WAGXhB,MAAO,CACHgB,MAAO,WAEXY,YAAa,CACTrD,SAAU,WACVsD,OAAQ,GAEZC,KAAM,CACFC,YAAatE,EAAMK,QAAQ,GAC3BkE,aAAcvE,EAAMK,QAAQ,GAC5BmE,aAAcxE,EAAMK,QAAQ,GAC5BoE,OAAQ,MACRpC,OAAQ,4BACRf,MAAOtB,EAAMK,QAAQ,UAUd,SAAS2H,GAAiBvG,GACvC,IAAMb,EAAUd,KAEhB,EAAgC6E,IAAMC,SAASnD,EAAMsG,KAAKJ,UAA1D,mBAAOA,EAAP,KAAiBM,EAAjB,KAQA,OACE,cAACvF,EAAA,EAAD,CAAMK,MAAI,EAAC1C,QAAS,EAApB,SACI,eAAC8C,EAAA,EAAD,CAAMtC,UAAWD,EAAQsD,QAAzB,UACI,eAACxB,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WAJf,UAMI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SAAW,cAACmC,EAAA,EAAD,CAAYC,KAAK,SAAS1B,QAAS,kBAAMhC,EAAMqG,oBAAeI,IAA9D,SAA0E,cAACC,GAAA,EAAD,UAEzF,cAACzF,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAAC/B,EAAA,EAAD,CAAYuC,MAAM,UAAlB,SACC9B,EAAMsG,KAAKJ,aAGhB,cAACjF,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACqF,GAAA,EAAD,CAAaC,kBAAgB,EAACpH,QAAQ,YAAYsC,MAAM,UAAxD,UACI,cAACD,EAAA,EAAD,CAAQgF,QAAS,cAACC,GAAA,EAAD,IAAjB,wBACA,cAACjF,EAAA,EAAD,UAAQ,cAACkF,GAAA,EAAD,MACR,cAAClF,EAAA,EAAD,UAAQ,cAACmF,GAAA,EAAD,cAIpB,cAAC/F,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WAJf,SAMI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACL,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,WACXzC,QAAS,EALb,SAOI,cAACqC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACsC,GAAA,EAAD,CAAmBC,YAAa,kBA9C7B,WAC3B,IAAIC,EAAqBC,OAAOC,OAAO,GAAIhE,EAAMsG,MACjDxC,EAASoC,SAAWA,EACpBlG,EAAMiH,eAAenD,EAAU9D,EAAMsG,KAAKlE,MA2CoB8E,IAAtC,SAA8D,cAAC/C,GAAA,EAAD,CAAW/E,UAAWD,EAAQyD,KAAMxC,SAAU,SAACgE,GAAD,OAAOoC,EAAYpC,EAAEC,OAAOlE,QAAQmE,aAActE,EAAMsG,KAAKJ,0BCxFrM,IAAM7H,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACTkC,QAAS,CACLA,QAASnC,EAAMK,QAAQ,SAUhB,SAASuI,GAAMnH,GACV3B,KAAhB,IAIyB2H,EAFzB,EAAsC7C,wBAASsD,GAA/C,mBAAOW,EAAP,KAAoBf,EAApB,KAMMY,EAAiB,SAACX,EAAgBlE,GACpC,IAAI0B,EAA4B9D,EAAMgG,MACtClC,EAASe,KAAI,SAACC,GAAD,OAAmBA,EAAG1C,OAASA,EAAO2B,OAAOC,OAAOc,EAAIwB,GAAQxB,KAC7E9E,EAAMmG,SAASrC,IAGnB,OACA,cAAC9C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UACXzC,QAAS,EALb,SAOMwI,EACE,cAACb,GAAD,CAAkBD,KAAMc,EAAaH,eAAgBA,EAAgBZ,eAAgBA,IAErF,qCAAE,cAACN,GAAD,CAAaC,MAAOhG,EAAMgG,MAAOG,SAAUnG,EAAMmG,YAtBtCH,EAuBIhG,EAAMgG,MAtBvBA,EAAMnB,KAAI,SAACyB,GAAD,OAAoB,cAACF,GAAD,CAAUE,KAAMA,EAAMW,eAAgBA,EAAgBZ,eAAgBA,eCpBpH,IAAMhI,GAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,QAiBO,SAAS4I,GAAMrH,GACZ3B,KAiBhB,OAfmB,SAAC2B,GAClB,OAAOA,EAAMC,aACT,IAAK,UACH,OAAO,cAACc,EAAD,IACT,IAAK,UACH,OAAO,cAAC6D,GAAD,CAASjD,QAAS3B,EAAM2B,QAASW,WAAYtC,EAAMsC,WAAYkB,gBAAiBxD,EAAMwD,kBAC/F,IAAK,WACH,OAAO,cAAC,GAAD,CAAUqC,gBAAiB7F,EAAM6F,gBAAiBL,gBAAiBxF,EAAMwF,kBAClF,IAAK,QACH,OAAO,cAAC,GAAD,CAAOQ,MAAOhG,EAAMgG,MAAOG,SAAUnG,EAAMmG,WACpD,QACE,OAAO,8BAKbmB,CAAWtH,G,4CC1Cf,SAASuH,GAAMvH,GACb,OAAO,cAAC,KAAD,aAAUwH,UAAW,EAAGhI,QAAQ,UAAaQ,IAQvC,SAASyH,GAAazH,GACnC,IAAM0H,EAAc,SAACC,EAAYC,GAChB,cAAXA,GAIJ5H,EAAM6H,gBAAgB,CAACC,MAAM,KAG7B,OACG9H,EAAM+H,aAAaD,KAClB,cAACE,GAAA,EAAD,CACEC,aAAc,CAACC,SAAU,MAAOC,WAAW,SAC3CL,KAAM9H,EAAM+H,aAAaD,KACzBM,iBAAkB,IAClBC,QAASX,EAJX,SAME,cAAC,GAAD,CAAOY,SAAUtI,EAAM+H,aAAaO,SAAWtI,EAAM+H,aAAaO,SAAW,OAAQD,QAASX,EAA9F,SAA4G1H,EAAM+H,aAAaQ,SAGjI,6BC7BD,IAAMhK,GAAQiK,aAAe,CAClC9I,QAAS,CACP+I,QAAS,CACP7I,KAAM,WAERD,UAAW,CACTC,KAAM,cAKNvB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkK,IAAK,CACHC,cAAepK,EAAMK,QAAQ,UAmGpB8J,OA9Ff,WACE,MAAwBxF,IAAMC,SAAS,WAAvC,mBAAOyF,EAAP,KAAaC,EAAb,KACA,EAA8B3F,IAAMC,SAAS,IAA7C,mBAAOxB,EAAP,KAAgBW,EAAhB,KACA,EAA0BY,IAAMC,SAAS,IAAzC,mBAAO6C,EAAP,KAAcG,EAAd,KACA,EAAwCjD,IAAMC,SAAS,CAAC2E,MAAM,IAA9D,mBAAOC,EAAP,KAAqBF,EAArB,KAEM1I,EAAUd,KAyCVmF,EAAkB,SAAC+E,EAAcD,GAOrCT,EALA,CACEC,MAAM,EACNS,KAAMA,EACND,SAAUA,QAAsB7B,KAShCqC,EAA0B,CAC5B7I,YAAY2I,EACZ5C,MAAMA,EACNG,SAAUA,EACVxE,QAASA,EACTW,WAAYA,EACZuD,gBAzDsB,WACtB,IAAIkD,EAAiB,CACnBpH,QAASA,EACTqE,MAAOA,GAELgD,EAAY/G,EAAQ,KACpBgH,EAAOC,KAAKC,UAAUJ,GACtBK,EAAO,IAAIC,KAAK,CAACJ,GAAO,CAAC1D,KAAM,qBACnCyD,EAAUM,OAAOF,EAAM,2BAkDvB5D,gBA/CsB,SAACpB,GACvB,IACC,IAAD,EACEA,EAAEmF,iBACF,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAP,uCAAgB,WAAOtF,GAAP,iBAAAuF,EAAA,uDACd,UAAGvF,EAAEC,cAAL,aAAG,EAAUuF,UAELb,EAAOG,KAAKW,MAAMzF,EAAEC,OAAOuF,QACjCtH,EAAWyG,EAAKpH,SAChBwE,EAAS4C,EAAK/C,OACdxC,EAAgB,wBAAyB,WACzCqF,EAAQ,YAPI,2CAAhB,uDAUA,UAAGzE,EAAEC,cAAL,aAAG,EAAUyF,QAEXN,EAAOO,WAAW3F,EAAEC,OAAOyF,MAAM,IAGrC,SAEEtG,EAAgB,0BAA2B,WA0B7CA,gBAAiBA,GAGfwG,EAA2B,CAC7B3J,wBAhB8B,SAACsH,EAA8BsC,GAC7DpB,EAAQoB,IAgBRhK,YAAY2I,GAGVsB,EAAyC,CAC3CnC,aAAcA,EACdF,gBAAiBA,GAGnB,OACE,eAACsC,GAAA,EAAD,CAAe5L,MAAOA,GAAtB,UACE,sBAAKa,UAAWD,EAAQuJ,IAAxB,UACE,cAACxJ,EAAD,IACA,cAACmI,GAAD,eAAWyB,IACX,cAAC/I,EAAD,eAAYiK,OAEd,cAACvC,GAAD,eAAmByC,QChHzBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1024f429.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={currentPage === \"summary\" ? <Timeline /> : <TimelineOutlined />} />\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Badge,\n  Typography,\n  Paper,\nGrid,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n    badge: {\n        padding: theme.spacing(1),\n    },\n    first: {\n        padding: theme.spacing(2),\n        border: \"1px solid #FFD700\",\n        background: \"linear-gradient(to top, #FFD700, #FCF6BA)\"\n    },\n    second: {\n        padding: theme.spacing(2),\n        border: \"1px solid #C0C0C0\",\n        background: \"linear-gradient(to top, #B0B0B0, #DFDFDF)\"\n    },\n    third: {\n        padding: theme.spacing(2),\n        border: \"1px solid #cd7f32\",\n        background: \"linear-gradient(to top, #ad5f12, #dd9f52)\"\n    }\n}),\n);\n\nexport interface SummaryProps{\n\n}\n\nexport default function Summary(props: SummaryProps){\n  const classes = useStyles(); \n  \n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Grid item><Paper className={classes.second}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Silver player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.first}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Gold player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.third}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Bronze player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n          \n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { dataType, playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let new_player: playerType = \n    {   \n      uuid: uuid(),\n      username: \"New Player\",\n      color: color,\n    };    \n    props.setPlayers(props.players.concat(new_player));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  ClickAwayListener,\n  InputBase\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport { playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n\n  const [colorPickerOpen, setColorPickerOpen] = React.useState(false);\n  const [username, setUsername] = React.useState(props.player.username);\n\n  const handleColorChangeComplete = (color: ColorResult) => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.color = color.hex;\n    props.changePlayerData(new_data, props.player.uuid);\n  };\n\n  const handleChangeUsername = () => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.username = username;\n    props.changePlayerData(new_data, props.player.uuid);\n  }\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.addNotification('click on user','info')}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\" onClick={()=>{setColorPickerOpen(true)}}><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                                <ClickAwayListener onClickAway={() => handleChangeUsername()}><InputBase className={classes.Name} onChange={(e) => setUsername(e.target.value)} defaultValue={props.player.username}/></ClickAwayListener>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={4} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={14} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={0} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {colorPickerOpen && (\n                <ClickAwayListener onClickAway={() => setColorPickerOpen(false)}>\n                    <ChromePicker className={classes.ColorPicker} color={props.player.color} onChangeComplete={handleColorChangeComplete} disableAlpha={true}/>\n                </ClickAwayListener>\n            )}\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n\n}),\n);\n\nexport interface PlayersProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Players(props: PlayersProps){\n    const classes = useStyles(); \n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} changePlayerData={changePlayerData} addNotification={props.addNotification}></PlayerCard>))\n    };\n\n    const changePlayerData = (player: playerType, uuid: string) => {\n      let new_data: Array<playerType> = props.players;\n      new_data.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, player) : el))   \n      props.setPlayers(new_data);\n    }\n\n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader players={props.players} setPlayers={props.setPlayers}></PlayersHeader>\n            {renderPlayerCards(props.players)}\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography  variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by @stephane_branly.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography  variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it.</Typography>\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport { Publish, GetApp } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface LoadSaveProps{\n    handlerSaveData: () => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: LoadSaveProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  // className={classes.input}\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                    startIcon={<Publish />}\n                  >\n                    Load data\n                  </Button>\n                </label>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<GetApp />}\n                onClick={props.handlerSaveData}\n              >\n                Save data\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport LoadSave, { LoadSaveProps } from './LoadSave';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsProps{\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: SettingsProps){\n    const classes = useStyles(); \n  \n    const LoadSaveProps: LoadSaveProps = \n    { \n      handlerSaveData: props.handlerSaveData,\n      handlerLoadData: props.handlerLoadData,\n    }\n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <LoadSave {...LoadSaveProps}></LoadSave>\n          <About></About>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { dataType, gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    let new_game: gameType = \n    {   \n      uuid: uuid(),\n      gamename: \"New game\",\n    }\n    props.setGames(props.games.concat(new_game));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addPlayer()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  ClickAwayListener,\n  InputBase,\n  Typography\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.setCurrentGame(props.game)}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography>{props.game.gamename}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  ClickAwayListener,\n  InputBase,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\nimport { Delete, Edit, NavigateBefore, PostAdd } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCompleteCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>\n}\n\nexport default function GameCompleteCard(props: GameCompleteCardProps){\n  const classes = useStyles(); \n\n  const [gamename, setGamename] = React.useState(props.game.gamename);\n\n  const handleChangeGamename = () => {\n    let new_data: gameType = Object.assign({}, props.game); \n    new_data.gamename = gamename;\n    props.changeGameData(new_data, props.game.uuid);\n  }\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentGame(undefined)}><NavigateBefore/></IconButton></Grid>\n                </Grid>\n                <Grid item>\n                    <Typography color=\"primary\">\n                    {props.game.gamename}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                        <Button endIcon={<PostAdd/>}>New result</Button>\n                        <Button><Edit/></Button>\n                        <Button><Delete/></Button>\n                    </ButtonGroup>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <ClickAwayListener onClickAway={() => handleChangeGamename()}><InputBase className={classes.Name} onChange={(e) => setGamename(e.target.value)} defaultValue={props.game.gamename}/></ClickAwayListener>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { gameType } from '../../../types/data';\nimport GameCompleteCard from './GameCompleteCard';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface GamesProps{\n    games: Array<gameType>,\n    setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n}\n\nexport default function Games(props: GamesProps){\n    const classes = useStyles(); \n    \n    const [currentGame, setCurrentGame] = useState(undefined as unknown as gameType|undefined);\n\n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData} setCurrentGame={setCurrentGame}></GameCard>))\n    };\n\n    const changeGameData = (game: gameType, uuid: string) => {\n        let new_data: Array<gameType> = props.games\n        new_data.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, game) : el))   \n        props.setGames(new_data);\n    }\n\n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            { currentGame?\n                <GameCompleteCard game={currentGame} changeGameData={changeGameData} setCurrentGame={setCurrentGame}></GameCompleteCard>\n                :\n                <><GamesHeader games={props.games} setGames={props.setGames}></GamesHeader>\n                {renderGameCards(props.games)}</>\n            }\n            \n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport Summary from \"./summary/Summary\"\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport { gameType, playerType } from '../../types/data';\nimport { severityType } from '../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n   \n  },\n}),\n);\n  \nexport interface PagesProps{\n  currentPage: string,\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  const classes = useStyles(); \n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'summary':\n          return <Summary></Summary>;\n        case 'players':\n          return <Players players={props.players} setPlayers={props.setPlayers} addNotification={props.addNotification}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData}></Settings>;\n        case 'games':\n          return <Games games={props.games} setGames={props.setGames}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport interface NotificationProps{\n  notification: notificationType,\n  setNotification: any,\n}\n\nexport default function Notification(props: NotificationProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotification({open: false});\n  };\n\n    return (\n       props.notification.open ?  \n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal:'right'}}\n          open={props.notification.open}\n          autoHideDuration={6000} \n          onClose={handleClose}\n        >\n          <Alert severity={props.notification.severity ? props.notification.severity : \"info\"} onClose={handleClose}>{props.notification.text}</Alert>\n        </Snackbar> \n        :\n        <></>\n  );\n}","import Header from './components/header/Header'\nimport Footer, { FooterProps } from './components/footer/Footer'\nimport Pages, { PagesProps } from './components/pages/Pages'\nimport React from 'react';\nimport { createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { dataType, gameType, playerType } from './types/data';\nimport Notifications, { NotificationProps } from './components/pages/notifications/Notification';\nimport { notificationType, severityType } from './types/notification';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    App: {\n      paddingBottom: theme.spacing(15)\n    }\n  }),\n);\n\nfunction App() {\n  const [page, setPage] = React.useState('summary');\n  const [players, setPlayers] = React.useState([]as Array<playerType>);\n  const [games, setGames] = React.useState([] as Array<gameType>);\n  const [notification, setNotification] = React.useState({open: false} as notificationType);\n\n  const classes = useStyles(); \n\n  \n\n  const handlerSaveData = () => {\n    let data: dataType = {\n      players: players,\n      games: games\n    }\n    var FileSaver = require('file-saver');\n    var json = JSON.stringify(data);\n    var blob = new Blob([json], {type: \"application/json\"});\n    FileSaver.saveAs(blob, \"save_game-ranking.json\");\n  } \n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    try\n    {\n      e.preventDefault();\n      const reader = new FileReader();\n      reader.onload = async (e) => {   \n        if(e.target?.result)\n        {\n          const data = JSON.parse(e.target.result as string);\n          setPlayers(data.players);\n          setGames(data.games);\n          addNotification(\"Data correctly loaded\", \"success\");\n          setPage(\"summary\")\n        }\n      };\n      if(e.target?.files)\n      {\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n    catch\n    {\n      addNotification(\"Error when loading data\", \"error\");\n    }\n  };\n\n  const addNotification = (text: string, severity?: severityType) => {\n    const new_notification = \n    {\n      open: true,\n      text: text,\n      severity: severity ? severity : undefined\n    }\n    setNotification(new_notification)\n  }\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, new_page: string) => {\n    setPage(new_page);\n  };\n\n  let pages_props: PagesProps = {\n    currentPage:page,\n    games:games,\n    setGames: setGames,\n    players: players,\n    setPlayers: setPlayers,\n    handlerSaveData: handlerSaveData,\n    handlerLoadData: handlerLoadData,\n    addNotification: addNotification,\n  }\n\n  let footer_prop: FooterProps = {\n    handleChangeCurrentPage:handleChangeCurrentPage,\n    currentPage:page\n  }\n\n  let notifications_props: NotificationProps = {\n    notification: notification,\n    setNotification: setNotification,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header></Header>\n        <Pages {...pages_props}></Pages>\n        <Footer {...footer_prop}></Footer>\n      </div>\n      <Notifications {...notifications_props}></Notifications>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}