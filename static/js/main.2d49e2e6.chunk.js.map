{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/pages/summary/Summary.tsx","components/pages/players/PlayersHeader.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/LoadSave.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/GamesAddResultWho.tsx","components/pages/games/GameAddResultWhen.tsx","utils/lib.tsx","utils/elo.tsx","components/pages/games/GameAddResultResults.tsx","components/pages/games/GameAddResult.tsx","components/scoreChip/ScoreChip.tsx","components/pages/games/ResultCard.tsx","components/pages/games/DeleteGame.tsx","components/pages/games/EditGame.tsx","components/lineChartResult/LineChartResult.tsx","components/pages/games/GameCompleteCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","components/pages/notifications/Notification.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","zIndex","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","badge","padding","first","border","second","third","Summary","Container","Grid","container","direction","justify","alignItems","item","Paper","Badge","PlayersHeader","Card","players","length","Button","color","startIcon","onClick","require","randomColor","new_player","uuid","username","setPlayers","concat","addPlayer","Padding","ColorPicker","Name","paddingLeft","paddingRight","borderRadius","margin","PlayerCard","React","useState","colorPickerOpen","setColorPickerOpen","player","setUsername","addNotification","IconButton","size","style","ClickAwayListener","onClickAway","new_data","Object","assign","changePlayerData","handleChangeUsername","InputBase","e","target","defaultValue","badgeContent","showZero","onChangeComplete","hex","disableAlpha","Players","map","el","subSection","marginLeft","borderLeft","About","Settings","display","accept","id","type","handlerLoadData","htmlFor","component","Publish","GetApp","handlerSaveData","LoadSaveProps","GamesHeader","games","new_game","gamename","setGames","addGame","GameCard","setCurrentGame","game","GameAddResultWho","playerInResults","uuidPlayer","selectedPlayers","filter","togglePlayer","setSelectedPlayers","rank","DialogContent","dividers","List","ListItem","dense","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","checked","ListItemText","primary","GameAddResultWhen","utils","DateFnsUtils","DateTimePicker","selectedDate","date","setSelectedDate","showTodayButton","format","getPlayerProfile","getResult","results","resultUuid","result","getPlayerLabel","toUpperCase","generateNewEntry","lastEntry","newEntry","playersRank","forEach","p","push","playerUuid","score","deltaScore","ranks","currentPlayer","nbSameRank","rankFilter","otherPlayers","index","getIndexInEntry","lastScoreCurrentPlayer","sumDeltaScore","otherPlayer","A","B","lastScoreOtherPlayer","win","expected","newScore","old","exp","elo","entry","findIndex","obj","toChartScore","scores","chartScore","entreyToChartScore","console","log","playerRank","Math","round","stringDate","d","Date","getDay","getMonth","getFullYear","getHours","getMinutes","GameAddResultResults","renderPossibilities","possibilities","i","MenuItem","Avatar","alt","Select","event","handleChange","GameAddResult","currentStep","setCurrentStep","addResultOpen","Dialog","fullWidth","maxWidth","open","DialogTitle","DialogActions","setAddResultOpen","undefined","autoFocus","disabled","NavigateBefore","validResult","sorted","sort","a","b","addResult","endIcon","PostAdd","nextStep","NavigateNext","ScoreChip","text","Chip","ResultCard","Tooltip","overlap","borderColor","anchorOrigin","vertical","horizontal","toLocaleString","DeleteGame","onClose","reason","setDeleteGameOpen","DialogContentText","deleteGame","EditGame","currentGamename","setGamename","setEditMode","Input","handleChangeGamename","LineChartResult","generateLineScorePlayer","historyEntry","playing","playerInfo","alignContent","renderPlayersScore","data","rankHistory","uuidPresentPlayers","uuidOtherPlayers","indexOf","ResponsiveContainer","height","LineChart","top","right","left","XAxis","dataKey","content","propsTooltip","active","payload","Legend","verticalAlign","paddingBottom","CartesianGrid","stroke","strokeDasharray","Line","strokeWidth","yAxisId","flat","Main","GameCompleteCard","editMode","deleteGameOpen","ButtonGroup","disableElevation","Edit","Delete","align","newResult","some","calculateRanking","sortedRanks","changeGameData","displayResults","newGamename","Games","currentGame","Pages","renderPage","Alert","elevation","Notification","handleClose","setNotification","notification","Snackbar","autoHideDuration","severity","createMuiTheme","error","App","page","setPage","pages_props","FileSaver","json","JSON","stringify","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","parse","files","readAsText","footer_prop","new_page","notifications_props","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d49e2e6.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 100,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={currentPage === \"summary\" ? <Timeline /> : <TimelineOutlined />} />\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Badge,\n  Typography,\n  Paper,\nGrid,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n    badge: {\n        padding: theme.spacing(1),\n    },\n    first: {\n        padding: theme.spacing(2),\n        border: \"1px solid #FFD700\",\n        background: \"linear-gradient(to top, #FFD700, #FCF6BA)\"\n    },\n    second: {\n        padding: theme.spacing(2),\n        border: \"1px solid #C0C0C0\",\n        background: \"linear-gradient(to top, #B0B0B0, #DFDFDF)\"\n    },\n    third: {\n        padding: theme.spacing(2),\n        border: \"1px solid #cd7f32\",\n        background: \"linear-gradient(to top, #ad5f12, #dd9f52)\"\n    }\n}),\n);\n\nexport interface SummaryProps{\n\n}\n\nexport default function Summary(props: SummaryProps){\n  const classes = useStyles(); \n  \n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n        >\n            <Grid item><Paper className={classes.second}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Silver player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.first}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Gold player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n            <Grid item><Paper className={classes.third}><Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n            >\n                <Grid item><Typography>Bronze player</Typography></Grid><Grid item><Badge><EmojiEvents/></Badge></Grid></Grid></Paper>\n            </Grid>\n          \n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { dataType, playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let new_player: playerType = \n    {   \n      uuid: uuid(),\n      username: \"New Player\",\n      color: color,\n    };    \n    props.setPlayers(props.players.concat(new_player));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  ClickAwayListener,\n  InputBase\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport { playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n\n  const [colorPickerOpen, setColorPickerOpen] = React.useState(false);\n  const [username, setUsername] = React.useState(props.player.username);\n\n  const handleColorChangeComplete = (color: ColorResult) => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.color = color.hex;\n    props.changePlayerData(new_data, props.player.uuid);\n  };\n\n  const handleChangeUsername = () => {\n    let new_data: playerType = Object.assign({}, props.player); \n    new_data.username = username;\n    props.changePlayerData(new_data, props.player.uuid);\n  }\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.addNotification('click on user','info')}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\" onClick={()=>{setColorPickerOpen(true)}}><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                                <ClickAwayListener onClickAway={() => handleChangeUsername()}><InputBase className={classes.Name} onChange={(e) => setUsername(e.target.value)} defaultValue={props.player.username}/></ClickAwayListener>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={4} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={14} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={0} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {colorPickerOpen && (\n                <ClickAwayListener onClickAway={() => setColorPickerOpen(false)}>\n                    <ChromePicker className={classes.ColorPicker} color={props.player.color} onChangeComplete={handleColorChangeComplete} disableAlpha={true}/>\n                </ClickAwayListener>\n            )}\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n\n}),\n);\n\nexport interface PlayersProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Players(props: PlayersProps){\n    const classes = useStyles(); \n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} changePlayerData={changePlayerData} addNotification={props.addNotification}></PlayerCard>))\n    };\n\n    const changePlayerData = (player: playerType, uuid: string) => {\n      let new_data: Array<playerType> = props.players;\n      new_data.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, player) : el))   \n      props.setPlayers(new_data);\n    }\n\n  return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader players={props.players} setPlayers={props.setPlayers}></PlayersHeader>\n            {renderPlayerCards(props.players)}\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by @stephane_branly.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it.</Typography>\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport { Publish, GetApp } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface LoadSaveProps{\n    handlerSaveData: () => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: LoadSaveProps){\n    const classes = useStyles(); \n  \n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  // className={classes.input}\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                    startIcon={<Publish />}\n                  >\n                    Load data\n                  </Button>\n                </label>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<GetApp />}\n                onClick={props.handlerSaveData}\n              >\n                Save data\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport LoadSave, { LoadSaveProps } from './LoadSave';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsProps{\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nexport default function Settings(props: SettingsProps){\n    const classes = useStyles(); \n  \n    const LoadSaveProps: LoadSaveProps = \n    { \n      handlerSaveData: props.handlerSaveData,\n      handlerLoadData: props.handlerLoadData,\n    }\n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <LoadSave {...LoadSaveProps}></LoadSave>\n          <About></About>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addGame = () => {\n    let new_game: gameType = \n    {   \n      uuid: uuid(),\n      gamename: \"New game\",\n    }\n    props.setGames(props.games.concat(new_game));\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addGame()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  ClickAwayListener,\n  InputBase,\n  Typography\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n\n  return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.setCurrentGame(props.game)}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography>{props.game.gamename}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultWhoProps{\n    players: Array<playerType>,\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultWho(props: GameAddResultWhoProps){\n  const classes = useStyles(); \n\n  const playerInResults = (uuidPlayer: string) => {\n    return (props.selectedPlayers.filter(player => (player.uuid === uuidPlayer)).length !== 0)\n  }\n  const togglePlayer = (uuidPlayer: string) => {\n    if(playerInResults(uuidPlayer))\n      props.setSelectedPlayers(props.selectedPlayers.filter(player => player.uuid !== uuidPlayer));\n    else\n      props.setSelectedPlayers([...props.selectedPlayers,{uuid: uuidPlayer, rank: 1}]);\n  }\n   \n  const renderCheckboxPlayers = (players: Array<playerType>) => {\n    return players.map((player) => \n    <ListItem key={player.uuid} dense button onClick={() => togglePlayer(player.uuid)}>\n      <ListItemIcon>\n          <Checkbox\n            edge=\"end\"\n            tabIndex={-1}\n            disableRipple\n            checked={playerInResults(player.uuid)}\n            onClick={() => togglePlayer(player.uuid)}\n            style={{color: player.color}}\n        />\n        </ListItemIcon>\n        <ListItemText id={player.uuid} primary={player.username} />\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n      <Typography>Who was playing?</Typography>\n      <List>\n        {renderCheckboxPlayers(props.players)}\n      </List>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n} from \"@material-ui/core\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultWhenProps{\n    selectedDate: Date,\n    setSelectedDate: React.Dispatch<React.SetStateAction<Date>>\n}\n\nexport default function GameAddResultWhen(props: GameAddResultWhenProps){\n  const classes = useStyles(); \n\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    props.setSelectedDate(date as Date);\n  };\n\n  return (\n    <DialogContent dividers>\n        <Typography>When?</Typography>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n            value={props.selectedDate}\n            onChange={handleDateChange}\n            showTodayButton\n            format=\"dd/MM/yyyy HH:mm\"\n            />\n        </MuiPickersUtilsProvider>\n    </DialogContent>);\n}","import { algorithmType, gameType, historyEntryType, playerType, resultType, scoreType } from \"../types/data\"\nimport { elo, elo_expected } from \"./elo\";\n\nexport const getPlayerProfile = (players: Array<playerType>, uuidPlayer: string): playerType => {\n    return (players.filter(player => (player.uuid === uuidPlayer))[0])\n}\n\nexport const getResult = (results: Array<resultType>, resultUuid: string): resultType => {\n    return (results.filter(result => (result.uuid === resultUuid))[0])\n}\n\nexport const getPlayerLabel = (player: playerType): string => {\n    if(player.username.length>1)\n        return player.username[0].toUpperCase()+player.username[1];\n    return player.username[0].toUpperCase();\n}\n\n\n\nexport const calculateRanking = (game: gameType): Array<historyEntryType> => {\n    if(!game.results)\n        return [];\n    let rankHistory: Array<historyEntryType>  = []\n    rankHistory.push({ resultUuid: \"\", playersRank: []})\n    rankHistory[0].playersRank = game.players!.map(player => { return { playerUuid: player.uuid, score: 1200, deltaScore: 0 }}) \n    let lastEntry: historyEntryType = rankHistory[0]\n    game.results.forEach(result => {\n        const newEntry = generateNewEntry(result, lastEntry)\n        rankHistory.push(newEntry);\n        lastEntry = newEntry\n    });\n    return rankHistory;\n}\n\nexport const generateNewEntry = (result: resultType, lastEntry: historyEntryType) => {\n    let newEntry: historyEntryType = {\n        resultUuid: result.uuid,\n        playersRank: []\n    };\n    lastEntry.playersRank.forEach(p => { newEntry.playersRank.push({ playerUuid: p.playerUuid, score: p.score, deltaScore: p.deltaScore})})\n    result.ranks.forEach(currentPlayer => {\n        const nbSameRank = result.ranks.filter(rankFilter => (currentPlayer.rank === rankFilter.rank)).length\n        const otherPlayers = result.ranks.filter(rankFilter => (currentPlayer.rank !== rankFilter.rank))\n        const index = getIndexInEntry(currentPlayer.uuid,newEntry)\n        const lastScoreCurrentPlayer = lastEntry.playersRank[getIndexInEntry(currentPlayer.uuid,lastEntry)].score\n        let sumDeltaScore = 0\n        otherPlayers.forEach(otherPlayer => { \n            const lastScoreOtherPlayer = lastEntry.playersRank[getIndexInEntry(otherPlayer.uuid,lastEntry)].score\n            const win = currentPlayer.rank < otherPlayer.rank ? 1 : 0;\n            const expected = elo_expected(lastScoreCurrentPlayer,lastScoreOtherPlayer)\n            const newScore = elo(lastScoreCurrentPlayer, expected, win, nbSameRank)\n            sumDeltaScore += newScore - lastScoreCurrentPlayer\n        })\n        newEntry.playersRank[index].score = lastScoreCurrentPlayer + sumDeltaScore\n        newEntry.playersRank[index].deltaScore = sumDeltaScore\n    });\n    return newEntry\n}\n\n\nexport const getIndexInEntry = (playerUuid: string, entry: historyEntryType): number => {\n    return entry.playersRank.findIndex((obj => obj.playerUuid === playerUuid));\n}\n\nexport const toChartScore = (scores: Array<historyEntryType>) => {\n    const chartScore: any = []\n    scores.forEach((score) => chartScore.push(entreyToChartScore(score)))\n    console.log(chartScore)\n    return chartScore\n}\nconst entreyToChartScore = (score: historyEntryType) => {\n    let obj:any={}\n    obj['resultUuid']=score.resultUuid\n    score.playersRank.forEach(playerRank => obj[playerRank.playerUuid]=Math.round(playerRank.score))\n    return obj\n}\n\nexport const stringDate = (date: Date) => {\n    const d = new Date(date)\n    return `${d.getDay()}/${d.getMonth()}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`\n}","export const elo_expected = (A: number, B: number): number => {\n    return 1 / (1 + 10 ** ((B - A) / 400))\n}\n\nexport const elo = (old: number, exp: number, score: 0 | 1, nbTeam:number=1) => {\n    return old + 32 * (score - exp) / nbTeam\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Typography,\n  DialogContent,\n  Avatar,\n  Grid,\n  MenuItem,\n  Select,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\nimport { getPlayerProfile, getPlayerLabel } from '../../../utils/lib';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    \n}),\n);\nexport interface GameAddResultResultsProps{\n    players: Array<playerType>\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultResults(props: GameAddResultResultsProps){\n  const classes = useStyles(); \n  \n  const handleChange = (event: any,uuidPlayer: string) => {\n    let new_data: Array<scoreType> = props.selectedPlayers;\n    new_data.map((el: scoreType) => (el.uuid === uuidPlayer ? el.rank=event.target.value : el))   \n    props.setSelectedPlayers(new_data);\n  };\n\n  const renderPossibilities = () =>  {\n    let possibilities: any = [];\n\n    for(let i = 1; i<props.selectedPlayers.length+1; i++)\n    possibilities.push(<MenuItem key={i} value={i}>{i}</MenuItem>);\n\n    return possibilities;\n  }\n \n\n\n  const renderPlayerRank = (selectedPlayers: Array<scoreType>) => {\n    return selectedPlayers.map((player) =>\n    <ListItem key={player.uuid} dense button>\n      <Grid container\n        direction=\"row\"\n        alignItems=\"baseline\"\n        justify=\"space-between\"\n        spacing={1}\n        >\n          <Grid item><Avatar alt={player.uuid} style={{backgroundColor: getPlayerProfile(props.players, player.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players, player.uuid))}</Avatar></Grid>\n          <Grid item><Typography>{getPlayerProfile(props.players, player.uuid).username}</Typography></Grid>\n          <Grid item><Select\n              value={player.rank}\n              onChange={(event) => handleChange(event,player.uuid)}\n            >\n              {renderPossibilities()}\n          </Select>\n        </Grid>\n        </Grid>\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n        <Typography>Results</Typography>\n        <List>\n          {renderPlayerRank(props.selectedPlayers)}\n        </List>\n    </DialogContent>);\n}\n","import React from 'react';\nimport {\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { gameType, playerType, scoreType, resultType } from '../../../types/data';\nimport { NavigateBefore, NavigateNext, PostAdd } from '@material-ui/icons';\nimport GameAddResultWho from './GamesAddResultWho';\nimport GameAddResultWhen from './GameAddResultWhen';\nimport GameAddResultResults from './GameAddResultResults';\nimport { severityType } from '../../../types/notification';\nimport { getPlayerProfile } from '../../../utils/lib';\nimport { uuid } from 'uuidv4';\n\nexport interface GameAddResultProps{\n    game: gameType,\n    players: Array<playerType>,\n    addResultOpen: {id:string|undefined, open:boolean},\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    addResult: (result: resultType, id: string | undefined) => void,\n}\n\nexport default function GameAddResult(props: GameAddResultProps){\n  const [currentStep, setCurrentStep] = React.useState(\"who\");\n  const [selectedDate, setSelectedDate] = React.useState(props.addResultOpen.id ? props.game.results!.filter(item => item.uuid === props.addResultOpen.id)[0].date : new Date());\n  const [selectedPlayers, setSelectedPlayers] = React.useState(props.addResultOpen.id ? props.game.results!.filter(item => item.uuid === props.addResultOpen.id)[0].ranks : [] as Array<scoreType>);\n\n  const displayCurrentStep = () => {\n    if(currentStep === \"who\")\n      return (<GameAddResultWho players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    if(currentStep === \"when\")\n      return (<GameAddResultWhen setSelectedDate={setSelectedDate} selectedDate={selectedDate}/>);\n\n    if(currentStep === \"results\")\n      return (<GameAddResultResults players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    return <Typography>ERROR</Typography>\n  }\n\n  const nextStep = () => {\n    if(currentStep === \"who\")\n    {\n      if(selectedPlayers.length < 2)\n        props.addNotification(\"Please select a least 2 players\",\"error\");\n      else\n      {\n        setCurrentStep(\"when\");\n        const sorted = selectedPlayers.sort((a, b) => getPlayerProfile(props.players,a.uuid).username > getPlayerProfile(props.players,b.uuid).username ? 1 : -1)\n        setSelectedPlayers(sorted);\n      }\n    }\n    else if(currentStep === \"when\")\n      setCurrentStep(\"results\");\n  }\n  const backStep = () => {\n    if(currentStep === \"when\")\n      setCurrentStep(\"who\");\n    else if(currentStep === \"results\")\n      setCurrentStep(\"when\");\n  }\n\n  const addResult = () => {\n    let rank: number = 0;\n    let validResult: boolean = false;\n    selectedPlayers.forEach(player => {\n      if(rank===0)\n        rank=player.rank;\n      if(rank!==player.rank)\n        validResult=true;\n    });\n    if(validResult){\n      const sorted = selectedPlayers.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      setSelectedPlayers(sorted);\n      \n      const result: resultType = \n      {\n        date: selectedDate,\n        ranks: selectedPlayers,\n        uuid: uuid(),\n      }\n      if(props.addResultOpen.id)\n        props.addNotification(\"Result correctly edited\",\"success\");\n      else\n        props.addNotification(\"New result correctly added\",\"success\");\n\n      props.setAddResultOpen({id:undefined, open: false})\n      props.addResult(result,props.addResultOpen.id);\n    }\n    else\n      props.addNotification(\"Results need at least two different rank\",\"error\");\n  }\n\n  return (\n    <Dialog fullWidth={true} maxWidth=\"sm\" open={props.addResultOpen.open}>\n    {props.addResultOpen.id ?  <DialogTitle>Edit result</DialogTitle> :  <DialogTitle>New result</DialogTitle>}\n    {displayCurrentStep()}\n    <DialogActions>\n        <Button onClick={() => props.setAddResultOpen({id:undefined, open:false})} color=\"primary\" variant=\"outlined\">\n            Cancel\n        </Button>\n        <Button autoFocus disabled={currentStep === \"who\"} onClick={() => backStep()} color=\"primary\" variant=\"outlined\" startIcon={<NavigateBefore/>}>\n            Back\n        </Button>\n        {currentStep === \"results\" ? \n            <Button autoFocus onClick={() => addResult()} color=\"primary\" variant=\"outlined\" endIcon={<PostAdd/>}>\n              Send\n            </Button> :\n            <Button autoFocus onClick={() => nextStep()} color=\"primary\" variant=\"outlined\" endIcon={<NavigateNext/>}>\n              Next\n            </Button>\n        }\n       \n    </DialogActions>\n  </Dialog>\n  );\n}","import React from 'react';\nimport { Chip, createStyles, makeStyles } from \"@material-ui/core\";\nimport { EmojiEvents } from '@material-ui/icons';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        backgroundColor: \"rgba(0,0,0,0.9)\",\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        border: \"2px solid #FFFFFF\",\n        zIndex: 0\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n    },\n    third: {\n        color: \"#cd7f32\",\n    }\n}),\n);\nexport interface ScoreChipProps{\n  rank: number\n  score: number\n  deltaScore: boolean\n}\n\nexport default function ScoreChip(props: ScoreChipProps){\n    const classes = useStyles(); \n\n    const getRankBadge = (rank: number) => \n    {\n        if(rank===1) \n            return <EmojiEvents className={classes.first}/>\n        else if(rank===2)\n            return <EmojiEvents className={classes.second}/>\n        else if(rank===3)\n        return <EmojiEvents className={classes.third}/>\n        return <></>\n    }\n\n    let text: string = `${Math.round(props.score)}`, color: string = \"#FDFDFD\"\n    if(props.deltaScore){\n        text = props.score < 0 ? `${Math.round(props.score)}` : `+${Math.round(props.score)}`\n        color= props.score < 0 ? \"#FF2020\" : \"#10FFB0\"\n    }\n    return <Chip className={classes.root} icon={getRankBadge(props.rank)} label={text} size=\"small\" variant=\"outlined\" style={{color: color}}/>\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Avatar,\n  Badge,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { playerRankHistory, playerType, resultType } from '../../../types/data';\nimport { getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ScoreChip from '../../scoreChip/ScoreChip';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n}),\n);\n\nexport interface ResultCardProps{\n    result: resultType,\n    players: Array<playerType>,\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    playersRank: Array<playerRankHistory>\n}\n\nexport default function ResultCard(props: ResultCardProps){\n  const classes = useStyles(); \n\n  \n  const displayPlayersBadges = () => {\n    return (props.result.ranks.map((rank) => \n    {\n        const playerRank = props.playersRank.filter(player => player.playerUuid === rank.uuid)[0] \n        const title = `New score: ${Math.round(playerRank.score)}`\n\n        return <Grid item>\n            <Tooltip title={title}>\n            <Badge\n            overlap=\"circle\"\n            style={{borderColor: \"rgba(0,0,0,0)\"}}\n            anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n            }}\n            badgeContent={<ScoreChip rank={rank.rank} score={playerRank.deltaScore} deltaScore={true}/>}\n            >\n            \n            <Avatar alt={getPlayerProfile(props.players,rank.uuid).username} style={{backgroundColor: getPlayerProfile(props.players,rank.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,rank.uuid))}</Avatar>\n            </Badge>\n            </Tooltip>\n        </Grid>\n    }\n    ));\n  }\n\n  return (\n    <Grid item>\n        <Card className={classes.Padding} onClick={()=>props.setAddResultOpen({id: props.result.uuid, open:true})}>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n            <Grid item>\n                <Grid \n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    {displayPlayersBadges()}\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Typography>{props.result.date.toLocaleString()}</Typography>\n            </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n  );\n}","import React, { ChangeEvent, VoidFunctionComponent } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\n\nexport interface DeleteGameProps{\n  deleteGame: () => void,\n  setDeleteGameOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteGame(props: DeleteGameProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteGameOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this game?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this game and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteGameOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteGame()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\n\n\nexport interface EditGameProps{\n    handleChangeGamename: (newGamename: string) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n    currentGamename: string,\n}\n\nexport default function EditGame(props: EditGameProps){  \n    const [gamename, setGamename] = React.useState(props.currentGamename);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Change the gamename\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={gamename} onChange={(e) => setGamename(e.target.value)} ></Input>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangeGamename(gamename); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","\n\nimport {\n    makeStyles,\n    createStyles,\n    Grid,\n    Chip,\n    Avatar,\n    Badge,\n    Typography,\n    Paper,\n  } from \"@material-ui/core\";\nimport { Height, IndeterminateCheckBoxOutlined } from \"@material-ui/icons\";\nimport React, { Component } from \"react\";\nimport { LineChart, XAxis, Legend, CartesianGrid, Tooltip, Line, ResponsiveContainer } from \"recharts\";\nimport { theme } from \"../../App\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../../types/data\";\nimport { getPlayerLabel, getPlayerProfile, getResult, stringDate, toChartScore } from \"../../utils/lib\";\nimport ScoreChip from \"../scoreChip/ScoreChip\";\n  \n  \nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  }\n}),\n);\n  \nexport interface LineChartResultProps {\n  players: Array<playerType>,\n  game: gameType,\n}\n\n\n\nexport default function LineChartResult(props: LineChartResultProps){\n  const classes = useStyles(); \n  \n  // console.log(props.players)\n  const generateLines = (players: Array<scoreType>) => {\n    return players.map((player) => {\n        return <Line type=\"monotone\" strokeWidth={2} dataKey={player.uuid} stroke={getPlayerProfile(props.players,player.uuid).color} yAxisId={1} />\n      })\n  }\n\n  const renderLegend = () => {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\"  spacing={5} style={{paddingBottom: theme.spacing(2)}}>\n        {\n          props.game.rankHistory![props.game.rankHistory!.length-1].playersRank.sort((a, b) => a.score < b.score ? 1 : -1).map((player,index) => {\n              // <Tooltip title={Math.round(player.score)}>\n                  return <Grid item><Badge\n                      overlap=\"circle\"\n                      style={{borderColor: \"rgba(0,0,0,0)\"}}\n                      anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                      }}\n                      badgeContent={<ScoreChip rank={index+1} score={player.score} deltaScore={false}/>}\n                  >\n                      <Avatar alt={getPlayerProfile(props.players,player.playerUuid).username} style={{backgroundColor: getPlayerProfile(props.players,player.playerUuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,player.playerUuid))}</Avatar>\n                  </Badge></Grid>\n            })\n        }\n      </Grid>\n    );\n  }\n  const generateLineScorePlayer = (historyEntry: historyEntryType, playerUuid: string, playing: boolean) => {\n    const playerRank = historyEntry.playersRank.filter((player) => player.playerUuid === playerUuid)[0]\n    const playerInfo = getPlayerProfile(props.players, playerUuid)\n    if(playing)\n    {\n      const color = playerRank.deltaScore < 0 ? \"#FF2020\" : \"#10FFB0\" \n      const deltaScore = playerRank.deltaScore < 0 ? `${Math.round(playerRank.deltaScore)}` : `+${Math.round(playerRank.deltaScore)}`\n      return <Grid item><Grid container direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item><Chip label={playerInfo.username} style={{backgroundColor: playerInfo.color}} /></Grid>\n              <Grid>{Math.round(playerRank.score)}</Grid> \n              <Grid style={{color: color}}>({deltaScore})</Grid>\n            </Grid></Grid>\n    }\n    else\n      return <Grid item><Grid container direction=\"row\" justify=\"space-between\">\n              <Grid item><Chip label={playerInfo.username} variant=\"outlined\" style={{borderColor: playerInfo.color}} /></Grid>\n              <Grid>{Math.round(playerRank.score)}</Grid> \n              <Grid></Grid>\n            </Grid></Grid>\n  }\n\n  const renderPlayersScore = (result: resultType, data: any) => {\n    const historyEntry = props.game.rankHistory!.filter((entry) => entry.resultUuid === result.uuid)[0] as historyEntryType\n\n    const uuidPresentPlayers: Array<string> = []\n    const uuidOtherPlayers: Array<string> = []\n    result.ranks.forEach(rank => uuidPresentPlayers.push(rank.uuid))\n    props.game.players!.filter((player) => uuidPresentPlayers.indexOf(player.uuid) <= -1).forEach((player) => uuidOtherPlayers.push(player.uuid))\n    const componentPresentPlayers = uuidPresentPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, true)\n    })\n    const componentOtherPlayers = uuidOtherPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, false)\n    })\n   \n    return [componentPresentPlayers,componentOtherPlayers]\n  }\n\n  const renderTooltip = (propsTooltip: any) => {\n    const { active, payload, label} = propsTooltip\n    if (active && payload && payload.length && label) {\n      return (\n        <Paper variant=\"outlined\" style={{padding: theme.spacing(1)}}>\n          <Typography>{label ? stringDate(getResult(props.game.results!,label).date) : \"Start\"}</Typography>\n          <Grid container direction=\"column\" spacing={1}>{renderPlayersScore(getResult(props.game.results!, label), payload)}</Grid>\n        </Paper>\n      );\n    }\n\n    return null;\n};\n  \n  return (\n    props.game.rankHistory && props.game.players ? \n    <div style={{width:'100%'}}>\n    <ResponsiveContainer width=\"100%\" height={400}>\n    <LineChart\n      height={400}\n      data={toChartScore(props.game.rankHistory)}\n      margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\n      >\n      <XAxis dataKey=\"resultUuid\" />\n      <Tooltip content={renderTooltip} />\n      <Legend verticalAlign=\"top\" content={renderLegend}/>\n      <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"3 3\"/>\n      {generateLines(props.game.players).flat()}\n    </LineChart></ResponsiveContainer></div> : <></>\n  );  \n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n  Avatar,\n  Badge,\n//   Tooltip,\n} from \"@material-ui/core\";\nimport { gameType, playerType, resultType, scoreType } from '../../../types/data';\nimport { Delete, Edit, NavigateBefore, PostAdd } from '@material-ui/icons';\nimport GameAddResult from './GameAddResult';\nimport { severityType } from '../../../types/notification';\nimport { calculateRanking, getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ResultCard from './ResultCard';\nimport DeleteGame from './DeleteGame';\nimport EditGame from './EditGame';\nimport ScoreChip from '../../scoreChip/ScoreChip';\nimport LineChartResult from '../../lineChartResult/LineChartResult';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCompleteCardProps{\n    game: gameType,\n    players: Array<playerType>,\n    changeGameData: (game: gameType, uuid: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<gameType|undefined>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    deleteGame: (uuid: string) => void\n}\n\nexport default function GameCompleteCard(props: GameCompleteCardProps){\n  const classes = useStyles(); \n\n  const [addResultOpen, setAddResultOpen] = React.useState({id: undefined as string|undefined, open:false});\n  const [editMode, setEditMode] = React.useState(false);\n  const [deleteGameOpen, setDeleteGameOpen] = React.useState(false);\n\n  const handleChangeGamename = (newGamename: string) => {\n    let new_data: gameType = Object.assign({}, props.game); \n    new_data.gamename = newGamename;\n    props.changeGameData(new_data, props.game.uuid);\n  }\n\n  const deleteGame = () => {\n    props.addNotification(\"Game correctly deleted\",\"success\");\n    setDeleteGameOpen(false);\n    props.deleteGame(props.game.uuid);\n  }\n\n\n  const addResult = (newResult: resultType, id: string|undefined) => {\n    let new_data: gameType = Object.assign({}, props.game);\n    if(!new_data.results)\n        new_data.results = [];\n    else if(id)\n        new_data.results = new_data.results.filter(item => item.uuid !== id);\n    new_data.results.push(newResult);\n    newResult.ranks.forEach(rank => {\n        if(new_data.players)\n        {\n            if(!new_data.players.some(player => player.uuid === rank.uuid))\n                new_data.players?.push({uuid:rank.uuid,rank:0});\n        }\n        else\n            new_data.players=[{uuid:rank.uuid,rank:0}];\n    });\n    \n    new_data.rankHistory = calculateRanking(new_data);\n\n    if(new_data.players)\n    {\n        const sortedRanks = new_data.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n        new_data.players = sortedRanks;\n    }\n\n    props.changeGameData(new_data, props.game.uuid);\n  }\n\n  const displayResults = () => {\n    if (props.game.results){\n        return props.game.results.map(result => {\n            const playersRank = props.game.rankHistory!.filter((entry) => entry.resultUuid === result.uuid)[0].playersRank\n            return <ResultCard result={result} players={props.players} setAddResultOpen={setAddResultOpen} playersRank={playersRank}></ResultCard>}\n        );\n    }\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentGame(undefined)}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button endIcon={<PostAdd/>}  onClick={() => setAddResultOpen({id: undefined, open:true})}>New result</Button>\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                    <Button onClick={() => setDeleteGameOpen(true)}><Delete/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography color=\"primary\" variant=\"h3\" align=\"center\">\n                {props.game.gamename}\n            </Typography>\n        </Grid>\n        {props.game.players && \n        <Grid item>\n            <LineChartResult players={props.players} game={props.game}/>\n        </Grid>}\n       \n        </Grid>\n        {addResultOpen.open ? <GameAddResult game={props.game} players={props.players} addResultOpen={addResultOpen} setAddResultOpen={setAddResultOpen} addNotification={props.addNotification} addResult={addResult}></GameAddResult> : <></>}\n    </Card>\n    <Grid \n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={1}\n    >\n        {displayResults()}\n    </Grid>\n    {deleteGameOpen && <DeleteGame setDeleteGameOpen={setDeleteGameOpen} deleteGame={deleteGame}></DeleteGame>}\n    {editMode && <EditGame setEditMode={setEditMode} handleChangeGamename={handleChangeGamename} currentGamename={props.game.gamename}></EditGame>}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { gameType, playerType } from '../../../types/data';\nimport GameCompleteCard from './GameCompleteCard';\nimport { severityType } from '../../../types/notification';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface GamesProps{\n    games: Array<gameType>,\n    players: Array<playerType>\n    setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Games(props: GamesProps){\n    const classes = useStyles(); \n    \n    const [currentGame, setCurrentGame] = useState(undefined as unknown as gameType|undefined);\n\n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData} setCurrentGame={setCurrentGame}></GameCard>))\n    };\n\n    const changeGameData = (game: gameType, uuid: string) => {\n        let new_data: Array<gameType> = props.games\n        new_data.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, game) : el))   \n        props.setGames(new_data);\n    }\n\n    const deleteGame = (uuid: string) => {\n        let new_data: Array<gameType> = props.games.filter(item => item.uuid !== uuid);\n        setCurrentGame(undefined);\n        props.setGames(new_data);\n        props.addNotification(\"Game correctly deleted\",\"success\");\n    }\n\n    return (\n    <Container>\n        { currentGame?\n            <GameCompleteCard game={currentGame} changeGameData={changeGameData} setCurrentGame={setCurrentGame} players={props.players} addNotification={props.addNotification} deleteGame={deleteGame}></GameCompleteCard>\n            :\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n                <GamesHeader games={props.games} setGames={props.setGames}></GamesHeader>\n                {renderGameCards(props.games)}\n        </Grid>\n        }\n    </Container>\n  );\n}","import React from 'react';\nimport Summary from \"./summary/Summary\"\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport { gameType, playerType } from '../../types/data';\nimport { severityType } from '../../types/notification';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n   \n  },\n}),\n);\n  \nexport interface PagesProps{\n  currentPage: string,\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  handlerSaveData: () => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  const classes = useStyles(); \n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'summary':\n          return <Summary></Summary>;\n        case 'players':\n          return <Players players={props.players} setPlayers={props.setPlayers} addNotification={props.addNotification}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData}></Settings>;\n        case 'games':\n          return <Games games={props.games} setGames={props.setGames} players={props.players} addNotification={props.addNotification}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport interface NotificationProps{\n  notification: notificationType,\n  setNotification: any,\n}\n\nexport default function Notification(props: NotificationProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotification({open: false});\n  };\n\n    return (\n       props.notification.open ?  \n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal:'right'}}\n          open={props.notification.open}\n          autoHideDuration={6000} \n          onClose={handleClose}\n        >\n          <Alert severity={props.notification.severity ? props.notification.severity : \"info\"} onClose={handleClose}>{props.notification.text}</Alert>\n        </Snackbar> \n        :\n        <></>\n  );\n}","import Header from './components/header/Header'\nimport Footer, { FooterProps } from './components/footer/Footer'\nimport Pages, { PagesProps } from './components/pages/Pages'\nimport React from 'react';\nimport { createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { dataType, gameType, playerType } from './types/data';\nimport Notifications, { NotificationProps } from './components/pages/notifications/Notification';\nimport { notificationType, severityType } from './types/notification';\n\nexport const theme = createMuiTheme({\n  palette: {\n    error: {\n      main: \"#DD0505\",\n    },\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    App: {\n      paddingBottom: theme.spacing(15)\n    }\n  }),\n);\n\nfunction App() {\n  const [page, setPage] = React.useState('summary');\n  const [players, setPlayers] = React.useState([]as Array<playerType>);\n  const [games, setGames] = React.useState([] as Array<gameType>);\n  const [notification, setNotification] = React.useState({open: false} as notificationType);\n\n  const classes = useStyles(); \n\n  \n\n  const handlerSaveData = () => {\n    let data: dataType = {\n      players: players,\n      games: games\n    }\n    var FileSaver = require('file-saver');\n    var json = JSON.stringify(data);\n    var blob = new Blob([json], {type: \"application/json\"});\n    FileSaver.saveAs(blob, \"save_game-ranking.json\");\n  } \n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    try\n    {\n      e.preventDefault();\n      const reader = new FileReader();\n      reader.onload = async (e) => {   \n        if(e.target?.result)\n        {\n          const data = JSON.parse(e.target.result as string);\n          setPlayers(data.players);\n          setGames(data.games);\n          addNotification(\"Data correctly loaded\", \"success\");\n          setPage(\"summary\")\n        }\n      };\n      if(e.target?.files)\n      {\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n    catch\n    {\n      addNotification(\"Error when loading data\", \"error\");\n    }\n  };\n\n  const addNotification = (text: string, severity?: severityType) => {\n    const new_notification = \n    {\n      open: true,\n      text: text,\n      severity: severity ? severity : undefined\n    }\n    setNotification(new_notification)\n  }\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, new_page: string) => {\n    setPage(new_page);\n  };\n\n  let pages_props: PagesProps = {\n    currentPage:page,\n    games:games,\n    setGames: setGames,\n    players: players,\n    setPlayers: setPlayers,\n    handlerSaveData: handlerSaveData,\n    handlerLoadData: handlerLoadData,\n    addNotification: addNotification,\n  }\n\n  let footer_prop: FooterProps = {\n    handleChangeCurrentPage:handleChangeCurrentPage,\n    currentPage:page\n  }\n\n  let notifications_props: NotificationProps = {\n    notification: notification,\n    setNotification: setNotification,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header></Header>\n        <Pages {...pages_props}></Pages>\n        <Footer {...footer_prop}></Footer>\n      </div>\n      <Notifications {...notifications_props}></Notifications>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}