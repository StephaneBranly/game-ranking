{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/pages/players/PlayersHeader.tsx","utils/lib.tsx","utils/elo.tsx","components/pages/players/PlayerCard.tsx","components/pages/players/EditPlayer.tsx","components/pages/players/PlayerCompleteCard.tsx","components/pages/players/Players.tsx","components/pages/settings/About.tsx","components/pages/settings/SettingsHeader.tsx","components/pages/settings/Settings.tsx","components/pages/games/GamesHeader.tsx","components/pages/games/GameCard.tsx","components/pages/games/GamesAddResultWho.tsx","components/pages/games/GameAddResultWhen.tsx","components/pages/games/GameAddResultRanks.tsx","components/pages/games/DeleteResult.tsx","components/pages/games/GameAddResult.tsx","components/scoreChip/ScoreChip.tsx","components/pages/games/ResultCard.tsx","components/pages/games/DeleteGame.tsx","components/pages/games/EditGame.tsx","components/lineChartResult/LineChartResult.tsx","components/pages/games/GameCompleteCard.tsx","components/pages/games/Games.tsx","components/pages/Pages.tsx","components/pages/notifications/Notification.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","spacing","AppBar","background","EmojiEvents","marginRight","title","Header","classes","className","position","Toolbar","Typography","variant","backgroundColor","palette","secondary","main","width","bottom","zIndex","Footer","props","currentPage","BottomNavigation","value","onChange","handleChangeCurrentPage","BottomNavigationAction","label","icon","padding","PlayersHeader","Grid","item","Card","container","direction","justify","alignItems","players","length","Button","color","startIcon","onClick","require","randomColor","newPlayer","uuid","username","setPlayers","concat","setCurrentPlayer","player","edit","addPlayer","getPlayerProfile","uuidPlayer","filter","getResult","results","resultUuid","result","getPlayerLabel","toUpperCase","calculateRanking","game","rankHistory","push","playersRank","map","playerUuid","score","deltaScore","lastEntry","playedCpt","sort","a","b","date","forEach","newEntry","generateNewEntry","algorithmSettings","p","nbRank","i","ranks","rankFilter","rank","currentPlayer","otherPlayers","index","getIndexInEntry","lastScoreCurrentPlayer","sumDeltaScore","params","k_factor","k_first","n","k","nb_played","elo_get_k_factor","n_first","otherPlayer","A","B","lastScoreOtherPlayer","win","expected","newScore","old","exp","elo","entry","findIndex","obj","toChartScore","scores","chartScore","entreyToChartScore","playerRank","Math","round","generateGameFromLoadedData","newData","gamename","algo","newResult","Date","some","sortedRanks","calculatePresentPlayers","calculateNbPosition","games","total","resultRank","Padding","first","second","third","ColorPicker","Name","paddingLeft","paddingRight","borderRadius","margin","border","PlayerCard","IconButton","size","style","Badge","badgeContent","showZero","EditPlayer","React","useState","setPlayer","Dialog","open","onClose","event","reason","setEditMode","DialogTitle","DialogContent","DialogContentText","Input","e","target","onChangeComplete","c","hex","disableAlpha","DialogActions","autoFocus","handleChangePlayer","Main","PlayerCompleteCard","editMode","undefined","NavigateBefore","ButtonGroup","disableElevation","Edit","align","changePlayerData","Players","new_data","el","Object","assign","Container","addNotification","subSection","marginLeft","borderLeft","About","matches","useMediaQuery","Link","href","Provider","Node","formula","SettingsHeader","openDataMenu","setOpenDataMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","display","accept","id","type","handlerLoadData","htmlFor","MenuItem","ListItemIcon","Publish","fontSize","ListItemText","Storage","Divider","handlerSaveData","GetApp","handlerResetData","Delete","endIcon","Favorite","window","GitHub","currentTarget","Settings","GamesHeader","newGame","setGames","setCurrentGame","addGame","GameCard","alignContent","AvatarGroup","max","playerProfile","Avatar","alt","GameAddResultWho","playerInResults","selectedPlayers","togglePlayer","setSelectedPlayers","dividers","List","ListItem","dense","button","Checkbox","edge","tabIndex","disableRipple","checked","primary","GameAddResultWhen","utils","DateFnsUtils","DateTimePicker","selectedDate","setSelectedDate","showTodayButton","format","GameAddResultRanks","renderPossibilities","possibilities","selected","Select","defaultValue","handleChange","DeleteResult","setDeleteResultOpen","deleteResult","borderColor","GameAddResult","currentStep","setCurrentStep","addResultOpen","deleteResultOpen","fullWidth","maxWidth","setAddResultOpen","disabled","validResult","sorted","addResult","PostAdd","nextStep","NavigateNext","ScoreChip","text","Chip","ResultCard","Tooltip","overlap","toLocaleString","DeleteGame","setDeleteGameOpen","deleteGame","EditGame","currentGame","setGame","TextField","Box","sx","flexWrap","flexDirection","Number","handleChangeGame","LineChartResult","stateLineDesign","opacity","lineDesign","setLineDesign","generateLineScorePlayer","historyEntry","playing","playerInfo","xs","renderPlayersScore","data","uuidPresentPlayers","uuidOtherPlayers","indexOf","ResponsiveContainer","height","LineChart","top","right","left","XAxis","dataKey","tick","YAxis","yAxisId","domain","content","propsTooltip","active","payload","Paper","paddingTop","paddingBottom","Legend","verticalAlign","onMouseEnter","onMouseLeave","CartesianGrid","stroke","strokeDasharray","Line","strokeWidth","strokeOpacity","flat","overflow","GameCompleteCard","deleteGameOpen","changeGameData","displayResults","Games","Pages","renderPage","Alert","elevation","Notification","handleClose","setNotification","notification","Snackbar","autoHideDuration","severity","createMuiTheme","error","App","page","setPage","pagesProps","cookie","stringifiedData","JSON","stringify","localStorage","setItem","FileSaver","blob","Blob","saveAs","preventDefault","reader","FileReader","onload","parse","files","readAsText","getItem","removeItem","footerProps","newPage","notificationsProps","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.087dc330.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport React, { Component } from \"react\";\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(4),\n  },\n  AppBar: {\n    background: \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 110%)\"\n  },\n  EmojiEvents: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}),\n);\n\nexport default function Header(){\n  const classes = useStyles(); \n  \n  return (\n      <div className={classes.root}>\n          <AppBar className={classes.AppBar} position=\"static\">\n          <Toolbar>\n              <EmojiEvents className={classes.EmojiEvents}/>\n              <Typography variant=\"h6\" className={classes.title}>\n                  Game Ranking\n              </Typography>\n          </Toolbar>\n          </AppBar>\n      </div>\n      );\n  \n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core\";\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Group from '@material-ui/icons/Group';\nimport GroupOutlined from '@material-ui/icons/GroupOutlined';\nimport Timeline from '@material-ui/icons/Timeline';\nimport TimelineOutlined from '@material-ui/icons/TimelineOutlined';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport EmojiEventsOutlined from '@material-ui/icons/EmojiEventsOutlined';\nimport Settings from '@material-ui/icons/Settings';\nimport SettingsOutlined from '@material-ui/icons/SettingsOutlined';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.main,\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    zIndex: 100,\n  },\n}),\n);\n\nexport interface FooterProps{\n  currentPage: string;\n  handleChangeCurrentPage: (event: React.ChangeEvent<{}>, value: string) => void;\n}\n\nexport default function Footer(props: FooterProps){\n  const classes = useStyles(); \n  \n  const currentPage = props.currentPage;\n  return (\n    <BottomNavigation value={currentPage} onChange={props.handleChangeCurrentPage} className={classes.root}>\n      <BottomNavigationAction label=\"Games\" value=\"games\" icon={currentPage === \"games\" ? <EmojiEvents /> : <EmojiEventsOutlined />} />\n      <BottomNavigationAction label=\"Players\" value=\"players\" icon={currentPage === \"players\" ? <Group /> : <GroupOutlined />} />\n      <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={currentPage === \"settings\" ? <Settings /> : <SettingsOutlined />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport { uuid } from 'uuidv4';\nimport { playerType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface PlayersHeaderProps{\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  setCurrentPlayer: React.Dispatch<React.SetStateAction<{player:playerType | undefined, edit: boolean}>>,\n}\n\nexport default function PlayersHeader(props: PlayersHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addPlayer = () => {\n    var randomColor = require('randomcolor'); // import the script\n    var color = randomColor();\n    let newPlayer: playerType = \n    {   \n      uuid: uuid(),\n      username: \"New Player\",\n      color: color,\n    };    \n    props.setPlayers(props.players.concat(newPlayer));\n    props.setCurrentPlayer({player:newPlayer, edit:true})\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.players.length} player(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<PersonAdd />}\n                onClick={() => addPlayer()}\n              >\n                Add a new player\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import { gameType, historyEntryType, playerType, resultType, scoreType,algorithmSettings } from \"../types/data\"\nimport { elo, elo_expected, elo_get_k_factor } from \"./elo\";\n\nexport const getPlayerProfile = (players: Array<playerType>, uuidPlayer: string): playerType => {\n    return (players.filter(player => (player.uuid === uuidPlayer))[0])\n}\n\nexport const getResult = (results: Array<resultType>, resultUuid: string): resultType => {\n    return (results.filter(result => (result.uuid === resultUuid))[0])\n}\n\nexport const getPlayerLabel = (player: playerType): string => {\n    if(player.username.length>1)\n        return player.username[0].toUpperCase()+player.username[1];\n    return player.username[0].toUpperCase();\n}\n\n\n\nexport const calculateRanking = (game: gameType): Array<historyEntryType> => {\n    if(!game.results)\n        return [];\n    let rankHistory: Array<historyEntryType>  = []\n    rankHistory.push({ resultUuid: \"\", playersRank: []})\n    rankHistory[0].playersRank = game.players.map(player => { return { playerUuid: player.uuid, score: 1200, deltaScore: 0 }}) \n    let lastEntry: historyEntryType = rankHistory[0]\n    const playedCpt = {}\n    game.results.sort((a,b) => a.date >= b.date ? 1 : -1).forEach(result => {\n        const newEntry = generateNewEntry(result, lastEntry, playedCpt, game.algorithmSettings)\n        rankHistory.push(newEntry);\n        lastEntry = newEntry\n    });\n    return rankHistory;\n}\n\nexport const generateNewEntry = (result: resultType, lastEntry: historyEntryType, playedCpt: Record<string, number>, algorithmSettings: algorithmSettings) => {\n    let newEntry: historyEntryType = {\n        resultUuid: result.uuid,\n        playersRank: []\n    };\n    lastEntry.playersRank.forEach(p => { newEntry.playersRank.push({ playerUuid: p.playerUuid, score: p.score, deltaScore: p.deltaScore})})\n    let nbRank: any = {}\n    for(let i=0; i<result.ranks.length; i++)\n        nbRank[i+1] = result.ranks.filter(rankFilter => (i+1 === rankFilter.rank)).length\n\n    result.ranks.forEach(currentPlayer => {\n        if (!playedCpt[currentPlayer.uuid])\n            playedCpt[currentPlayer.uuid] = 0\n        const otherPlayers = result.ranks.filter(rankFilter => (currentPlayer.rank !== rankFilter.rank))\n        const index = getIndexInEntry(currentPlayer.uuid,newEntry)\n        const lastScoreCurrentPlayer = lastEntry.playersRank[getIndexInEntry(currentPlayer.uuid,lastEntry)].score\n        let sumDeltaScore = 0\n        const { k_first, n_first, k } = algorithmSettings.params\n        const k_factor = elo_get_k_factor(k_first, n_first, k, playedCpt[currentPlayer.uuid])\n        otherPlayers.forEach(otherPlayer => { \n            const lastScoreOtherPlayer = lastEntry.playersRank[getIndexInEntry(otherPlayer.uuid,lastEntry)].score\n            const win = currentPlayer.rank < otherPlayer.rank ? 1 : 0;\n            const expected = elo_expected(lastScoreCurrentPlayer, lastScoreOtherPlayer)\n            // const divFactor = nbRank[currentPlayer.rank] * nbRank[otherPlayer.rank]\n            const newScore = elo(lastScoreCurrentPlayer, expected, win, k_factor)\n            sumDeltaScore += newScore - lastScoreCurrentPlayer\n        })\n        newEntry.playersRank[index].score = lastScoreCurrentPlayer + sumDeltaScore\n        newEntry.playersRank[index].deltaScore = sumDeltaScore\n        playedCpt[currentPlayer.uuid] += 1\n    });\n    return newEntry\n}\n\n\nexport const getIndexInEntry = (playerUuid: string, entry: historyEntryType): number => {\n    return entry.playersRank.findIndex((obj => obj.playerUuid === playerUuid));\n}\n\nexport const toChartScore = (scores: Array<historyEntryType>) => {\n    const chartScore: any = []\n    scores.forEach((score) => chartScore.push(entreyToChartScore(score)))\n    return chartScore\n}\n\nconst entreyToChartScore = (score: historyEntryType) => {\n    let obj:any={}\n    obj['resultUuid']=score.resultUuid\n    score.playersRank.forEach(playerRank => obj[playerRank.playerUuid]=Math.round(playerRank.score))\n    return obj\n}\n\nexport const generateGameFromLoadedData  = (game: { gamename: any; uuid: any; results: resultType[]; algorithmSettings: any }) => {\n  let newData: gameType = {\n    gamename: game.gamename,\n    uuid: game.uuid,\n    players: [],\n    results: [],\n    rankHistory: [],\n    algorithmSettings: game.algorithmSettings\n  }\n \n  if (!newData.algorithmSettings) {\n    newData.algorithmSettings = {\n        algo: 'elo',\n        params: {\n            k_first: 40,\n            n_first: 5,\n            k: 25,\n        }\n    }\n  }\n\n  game.results.forEach((result: resultType) => {\n    const newResult: resultType = result\n    newResult.date = new Date(newResult.date)\n    newData.results.push(newResult);\n    newResult.ranks.forEach(rank => {\n    if(newData.players)\n    {\n        if(!newData.players.some(player => player.uuid === rank.uuid))\n        newData.players?.push({uuid:rank.uuid,rank:0});\n    }\n    else\n      newData.players=[{uuid:rank.uuid,rank:0}];\n    });\n  })\n  \n  newData.rankHistory = calculateRanking(newData);\n\n  if(newData.players)\n  {\n      const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      newData.players = sortedRanks;\n  }\n  return newData\n}\n\nexport const calculatePresentPlayers = (game: gameType): Array<scoreType> => {\n    const players: Array<scoreType> = []\n    game.results.forEach(result => {\n        result.ranks.forEach(rank => {\n        if(!players.some(player => player.uuid === rank.uuid))\n            players.push({uuid:rank.uuid,rank:0});\n        })\n    })\n    return players\n} \n\nexport const calculateNbPosition = (games: Array<gameType>, playerUuid: string, position: number) => {\n    let total = 0;\n    games.forEach(game => {\n        game.results.forEach(result => {\n            const resultRank = result.ranks.filter(rank => rank.uuid === playerUuid)\n            if(resultRank.length && resultRank[0].rank === position) total += 1\n        })\n    })\n    return total\n}","export const elo_get_k_factor = (k_first: number, n:number, k: number, nb_played: number): number => {\n    if (nb_played < n)\n        return k_first\n    return k\n}\n\nexport const elo_expected = (A: number, B: number): number => {\n    return 1 / (1 + 10 ** ((B - A) / 400))\n}\n\nexport const elo = (old: number, exp: number, score: 0 | 1, k_factor: number, nbTeam:number=1): number => {\n    return old + k_factor * (score - exp) / nbTeam\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Badge,\n  Typography\n} from \"@material-ui/core\";\nimport Person from '@material-ui/icons/Person';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport { gameType, playerType } from '../../../types/data';\nimport { calculateNbPosition } from '../../../utils/lib';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\n\nexport interface PlayerCardProps{\n    player: playerType,\n    games: Array<gameType>,\n    changePlayerData: (arg0: playerType, arg1: string) => void,\n    setCurrentPlayer: React.Dispatch<React.SetStateAction<{player:playerType | undefined, edit: boolean}>>,\n}\n\nexport default function PlayerCard(props: PlayerCardProps){\n  const classes = useStyles(); \n  return (\n    <Grid item spacing={1} onClick={() => props.setCurrentPlayer({player:props.player, edit:false})}>\n        <Card className={classes.Padding}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><IconButton size=\"small\"><Person style={{color: props.player.color}}/></IconButton></Grid>\n                        <Grid item>\n                            <Typography>{props.player.username}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container \n                        item\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,1)} showZero className={classes.first} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,2)} showZero className={classes.second} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                        <Grid item><Badge badgeContent={calculateNbPosition(props.games,props.player.uuid,3)} showZero className={classes.third} color=\"primary\"><EmojiEvents /></Badge></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n    \n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Input,\n} from \"@material-ui/core\";\nimport { playerType } from '../../../types/data';\nimport { ChromePicker } from 'react-color';\n\nexport interface EditPlayerProps{\n    player: playerType\n    handleChangePlayer: (player: playerType) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function EditPlayer(props: EditPlayerProps){  \n    const [player, setPlayer] = React.useState(props.player);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Edit player\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Input value={player.username} onChange={(e) => setPlayer({...player, username: e.target.value})} ></Input>\n          </DialogContentText>\n          <DialogContentText>\n            <ChromePicker color={player.color} onChangeComplete={(c) => setPlayer({...player, color: c.hex})} disableAlpha={true}/>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangePlayer(player); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n//   Tooltip,\n} from \"@material-ui/core\";\nimport { playerType } from '../../../types/data';\nimport { Edit, NavigateBefore } from '@material-ui/icons';\nimport { severityType } from '../../../types/notification';\nimport EditPlayer from './EditPlayer'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1)\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface PlayerCompleteCardProps{\n    player: playerType,\n    changePlayerData: (player: playerType, uuid: string) => void,\n    setCurrentPlayer: React.Dispatch<React.SetStateAction<{player:playerType | undefined, edit: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    edit: boolean\n}\n\nexport default function PlayerCompleteCard(props: PlayerCompleteCardProps){\n  const classes = useStyles(); \n\n  const [editMode, setEditMode] = React.useState(props.edit);\n \n  const handleChangePlayer = (player: playerType) => {\n    props.changePlayerData(player, player.uuid)\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentPlayer({player:undefined,edit:false})}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography style={{color: props.player.color}} variant=\"h3\" align=\"center\">\n                {props.player.username}\n            </Typography>\n        </Grid>\n       \n        </Grid>\n    </Card>\n    {editMode && <EditPlayer setEditMode={setEditMode} handleChangePlayer={handleChangePlayer} player={props.player}></EditPlayer>}\n    </>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n\n} from \"@material-ui/core\";\nimport PlayersHeader from './PlayersHeader'\nimport PlayerCard from './PlayerCard'\nimport { gameType, playerType } from '../../../types/data';\nimport { severityType } from '../../../types/notification';\nimport PlayerCompleteCard from './PlayerCompleteCard';\n\nexport interface PlayersProps{\n  players: Array<playerType>,\n  games: Array<gameType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>,\n  addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Players(props: PlayersProps){\n\n    const [currentPlayer, setCurrentPlayer] = useState({player:undefined, edit:false} as unknown as {player:playerType | undefined, edit: boolean});\n\n\n  \n    const renderPlayerCards = (players: Array<playerType>) => {\n        return (players.map((player: playerType) => <PlayerCard player={player} games={props.games} changePlayerData={changePlayerData} setCurrentPlayer={setCurrentPlayer}></PlayerCard>))\n    };\n\n    const changePlayerData = (player: playerType, uuid: string) => {\n      let new_data: Array<playerType> = props.players;\n      new_data.map((el: playerType) => (el.uuid === uuid ? Object.assign(el, player) : el))   \n      props.setPlayers(new_data);\n    }\n\n  return (\n    <Container>\n      { currentPlayer.player ?\n        <PlayerCompleteCard player={currentPlayer.player} edit={currentPlayer.edit} changePlayerData={changePlayerData} addNotification={props.addNotification} setCurrentPlayer={setCurrentPlayer} /> :\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n            <PlayersHeader players={props.players} setPlayers={props.setPlayers} setCurrentPlayer={setCurrentPlayer}></PlayersHeader>\n            {renderPlayerCards(props.players)}\n       </Grid> }\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Container,\n  Grid,\n  Card,\n  Typography,\n  Link,\n  useMediaQuery,\n} from \"@material-ui/core\"\nimport MathJax from 'react-mathjax'\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    },\n    subSection:\n    {\n        paddingLeft: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        borderLeft: \"3px solid rgba(0,0,0,.2)\"\n    }\n}),\n);\n\nexport interface AboutProps{\n}\n\nexport default function About(props: AboutProps){\n    const classes = useStyles(); \n  \n    const eloExpected = `E_{A} = \\\\frac{1}{1+10^{(R_{B} - R_{A}) / 400}}, E_{B} = \\\\frac{1}{1+10^{(R_{A} - R_{B}) / 400}}`\n    const eloNewScore = `R'_{A} = R_{A} + K(S_{A} - E_{A}), R'_{B} = R_{B} + K(S_{B} - E_{B})`\n    const eloLegend = `E (expected), R (rank), K (factor = 32), S (score : 1=win, 0=loss)`\n    const eloExpectedTeam = `E_{P,o} = \\\\frac{1}{1+10^{(R_{o} - R_{P}) / 400}}`\n    const eloNewScoreTeam = `R'_{P} = R_{P} + \\\\sum_{i}{K(S_{A} - E_{P,i})},\\\\ i \\\\in opponents(P)`\n    const matches = useMediaQuery('(min-width:600px)');\n    return (\n        <Grid item>\n            <Card>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                    className={classes.padding}\n                >\n                    <Grid item>\n                        <Typography variant=\"h4\" color=\"primary\">About...</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the author</Typography>\n                            <Typography>Made with love by <Link href='https://github.com/StephaneBranly' target=\"_blank\">@stephane_branly</Link>.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <Typography variant=\"h5\" color=\"textSecondary\">the project</Typography>\n                            <Typography>Project made for personal use first. But feel free to use it and to give feedback (positive or negative). You can add <Link href='https://github.com/StephaneBranly/game-ranking/issues' target=\"_blank\">issues</Link> if you want.</Typography>\n                        </Container>\n                    </Grid>\n                    <Grid item>\n                        <Container className={classes.subSection}>\n                            <MathJax.Provider>\n\n                            <Typography variant=\"h5\" color=\"textSecondary\">the algorithm</Typography>\n                            <Typography>Currently, the <Link href=\"https://en.wikipedia.org/wiki/Elo_rating_system\" target=\"_blank\">ELO</Link> algorithm is used.</Typography>\n                            {matches && <><MathJax.Node formula={eloExpected} />\n                            <MathJax.Node formula={eloNewScore} />\n                            <MathJax.Node formula={eloLegend} /></>}\n                            <Typography>It is adapted to work with more than 2 players and more than 2 teams.</Typography>\n                            {matches && <><MathJax.Node formula={eloExpectedTeam} />\n                            <MathJax.Node formula={eloNewScoreTeam} /></>}\n                            <Typography>If the project grows, new algorithms can be added and parameterized on the interface.</Typography>\n                            </MathJax.Provider>\n\n                        </Container>\n                    </Grid>\n                </Grid>\n            </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Card,\n  Button,\n  Menu,\n  MenuItem,\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { Publish, GetApp, Storage, Delete, Favorite, GitHub } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    padding: {\n        padding: theme.spacing(1),\n    }\n}),\n);\n\nexport interface SettingsHeaderProps{\n    handlerResetData: (cookie: boolean) => void,\n    handlerSaveData: (cookie: boolean) => void,\n    handlerLoadData: (e: React.ChangeEvent<HTMLInputElement> | null) => void,\n}\n\nexport default function SettingsHeader(props: SettingsHeaderProps){\n    const classes = useStyles(); \n\n    const [openDataMenu, setOpenDataMenu] = React.useState(null as null | HTMLElement)\n  \n    const handleClose = (event: any, reason: string) => {\n      setOpenDataMenu(null)\n    }\n\n    return (\n        <Grid item>\n            <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"baseline\"\n            spacing={1}\n            className={classes.padding}\n          >\n            <Grid item>\n              <Menu\n                onClose={handleClose}\n                open={openDataMenu !== null}\n                anchorEl={openDataMenu}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                 <input\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  id=\"contained-button-import\"\n                  type=\"file\"\n                  onChange={props.handlerLoadData}\n                />\n                <label htmlFor=\"contained-button-import\">\n                <MenuItem>\n                  <ListItemIcon>\n                  <Publish fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Load from file</ListItemText>\n                </MenuItem>\n                </label>\n                <MenuItem onClick={() => props.handlerLoadData(null)}>\n                  <ListItemIcon>\n                  <Storage fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Load from cookies</ListItemText>\n                </MenuItem>\n                <Divider />\n                <MenuItem onClick={() => props.handlerSaveData(false)}>\n                  <ListItemIcon>\n                  <GetApp fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Save as file</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={() => props.handlerSaveData(true)}>\n                  <ListItemIcon>\n                  <Storage fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Save as cookies</ListItemText>\n                </MenuItem>\n                <Divider />\n                <MenuItem onClick={() => props.handlerResetData(false)}>\n                  <ListItemIcon>\n                  <Delete fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Delete current session</ListItemText>\n                </MenuItem>\n                <MenuItem onClick={() => props.handlerResetData(true)}>\n                  <ListItemIcon>\n                  <Delete fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText>Delete cookies</ListItemText>\n                </MenuItem>\n            </Menu>\n            <ButtonGroup                 \n                variant=\"contained\"\n                color=\"primary\">\n              <Button \n                endIcon={<Favorite/>} \n                onClick={() => window.open(\"https://www.paypal.com/paypalme/StephaneBranly\", \"_blank\")}\n                >\n                  Sponsor\n              </Button>\n              <Button \n                endIcon={<GitHub/>}\n                onClick={() => window.open(\"https://github.com/StephaneBranly/game-ranking\", \"_blank\")}\n                >\n                  GitHub\n              </Button>\n              <Button\n                startIcon={<Storage />}\n                onClick={(event) => setOpenDataMenu(event.currentTarget)}\n              >\n                Data\n              </Button>\n            </ButtonGroup>\n            </Grid>\n          </Grid>\n       </Card>\n       </Grid>\n  );\n}","import React from 'react';\nimport {\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport About from './About';\nimport SettingsHeader, { SettingsHeaderProps } from './SettingsHeader';\n\n\nexport interface SettingsProps{\n  handlerResetData: (cookie: boolean) => void,\n  handlerSaveData: (cookie: boolean) => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement> | null) => void,\n}\n\nexport default function Settings(props: SettingsProps){  \n    return (\n    <Container>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n          <SettingsHeader {...props}/>\n          <About/>\n       </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport Games from '@material-ui/icons/Games';\nimport { uuid } from 'uuidv4';\nimport { gameType } from '../../../types/data';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n  root: {\n    padding: theme.spacing(1),\n  },\n}),\n);\n\nexport interface GamesHeaderProps{\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n  setCurrentGame: React.Dispatch<React.SetStateAction<{game: gameType|undefined, edit: boolean}>>\n\n}\n\nexport default function GamesHeader(props: GamesHeaderProps){\n  const classes = useStyles(); \n  \n\n  const addGame = () => {\n    let newGame: gameType = \n    {   \n      uuid: uuid(),\n      gamename: \"New game\",\n      results: [],\n      players: [],\n      rankHistory: [],\n      algorithmSettings: {\n        algo: 'elo',\n        params: {\n          k_first: 40,\n          n_first: 5,\n          k: 25,\n        }\n      }\n    }\n    props.setGames(props.games.concat(newGame));\n    props.setCurrentGame({game: newGame, edit: true})\n  }\n\n\n  return (\n    <Grid item>\n        <Card>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n            spacing={2}\n            className={classes.root}\n          >\n            <Grid item><Typography>{props.games.length} game(s)</Typography></Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<Games />}\n                onClick={() => addGame()}\n              >\n                Add a new game\n              </Button>\n            </Grid>\n          </Grid>\n       </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Avatar\n} from \"@material-ui/core\";\nimport { gameType, playerType } from '../../../types/data';\nimport { AvatarGroup } from '@material-ui/lab';\nimport { getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n);\nexport interface GameCardProps{\n    game: gameType,\n    players: playerType[],\n    changeGameData: (arg0: gameType, arg1: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<{game: gameType|undefined, edit: boolean}>>\n}\n\nexport default function GameCard(props: GameCardProps){\n  const classes = useStyles(); \n\n    const renderPlayers = () => {\n        return (<AvatarGroup max={4}>\n                {\n                    props.game.rankHistory[props.game.rankHistory.length-1].playersRank.sort((a, b) => a.score < b.score ? 1 : -1).map((player,index) => {\n                        const playerProfile = getPlayerProfile(props.players,player.playerUuid)\n                        return <Avatar alt={playerProfile.username} style={{backgroundColor: playerProfile.color}}>{getPlayerLabel(playerProfile)}</Avatar>\n                    })\n                }\n              </AvatarGroup>)\n    }\n\n    return (\n    <Grid item spacing={1}>\n        <Card className={classes.Padding} onClick={() => props.setCurrentGame({game: props.game, edit: false})}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"baseline\"\n                alignContent=\"space-between\"\n            >\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography>{props.game.gamename}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"baseline\"\n                        spacing={1}\n                    >\n                        <Grid item><Typography>{`${props.game.results.length} results | `}</Typography></Grid>\n                        <Grid item>{renderPlayers()}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n  );\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\n\nexport interface GameAddResultWhoProps{\n    players: Array<playerType>,\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultWho(props: GameAddResultWhoProps){\n\n  const playerInResults = (uuidPlayer: string) => {\n    return (props.selectedPlayers.filter(player => (player.uuid === uuidPlayer)).length !== 0)\n  }\n\n  const togglePlayer = (uuidPlayer: string) => {\n    if(playerInResults(uuidPlayer))\n      props.setSelectedPlayers(props.selectedPlayers.filter(player => player.uuid !== uuidPlayer));\n    else\n      props.setSelectedPlayers([...props.selectedPlayers,{uuid: uuidPlayer, rank: 1}]);\n  }\n   \n  const renderCheckboxPlayers = (players: Array<playerType>) => {\n    return players.map((player) => \n    <ListItem key={player.uuid} dense button onClick={() => togglePlayer(player.uuid)}>\n      <ListItemIcon>\n          <Checkbox\n            edge=\"end\"\n            tabIndex={-1}\n            disableRipple\n            checked={playerInResults(player.uuid)}\n            onClick={() => togglePlayer(player.uuid)}\n            style={{color: player.color}}\n        />\n        </ListItemIcon>\n        <ListItemText id={player.uuid} primary={player.username} />\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n      <Typography>Who was playing?</Typography>\n      <List>\n        {renderCheckboxPlayers(props.players)}\n      </List>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n} from \"@material-ui/core\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\nexport interface GameAddResultWhenProps{\n    selectedDate: Date,\n    setSelectedDate: React.Dispatch<React.SetStateAction<Date>>\n}\n\nexport default function GameAddResultWhen(props: GameAddResultWhenProps){\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    props.setSelectedDate(date as Date);\n  };\n\n  return (\n    <DialogContent dividers>\n        <Typography>When?</Typography>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DateTimePicker\n            value={props.selectedDate}\n            onChange={handleDateChange}\n            showTodayButton\n            format=\"dd/MM/yyyy HH:mm\"\n            />\n        </MuiPickersUtilsProvider>\n    </DialogContent>);\n}","import React from 'react';\nimport {\n  Typography,\n  DialogContent,\n  Avatar,\n  Grid,\n  MenuItem,\n  Select,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { playerType, scoreType } from '../../../types/data';\nimport { getPlayerProfile, getPlayerLabel } from '../../../utils/lib';\n\nexport interface GameAddResultRanksProps{\n    players: Array<playerType>\n    selectedPlayers: Array<scoreType>,\n    setSelectedPlayers: React.Dispatch<React.SetStateAction<Array<scoreType>>>\n}\n\nexport default function GameAddResultRanks(props: GameAddResultRanksProps){\n  const handleChange = (event: any,uuidPlayer: string) => {\n    let newData: Array<scoreType> = props.selectedPlayers;\n    newData.map((el: scoreType) => (el.uuid === uuidPlayer ? el.rank=event.target.value : el))   \n    props.setSelectedPlayers(newData);\n  };\n\n  const renderPossibilities = (player: scoreType) =>  {\n    let possibilities: any = [];\n\n    for(let i = 1; i<props.selectedPlayers.length+1; i++)\n    {\n      const selected = player.rank ? player.rank === i : i === 1\n      possibilities.push(<MenuItem selected={selected} key={i} value={i}>{i}</MenuItem>);\n    }\n\n    return possibilities;\n  }\n \n  const renderPlayerRank = (selectedPlayers: scoreType[]) => {\n    return selectedPlayers.map((player) =>\n    <ListItem key={player.uuid} dense button>\n      <Grid container\n        direction=\"row\"\n        alignItems=\"baseline\"\n        justify=\"space-between\"\n        spacing={1}\n        >\n          <Grid item><Avatar alt={player.uuid} style={{backgroundColor: getPlayerProfile(props.players, player.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players, player.uuid))}</Avatar></Grid>\n          <Grid item><Typography>{getPlayerProfile(props.players, player.uuid).username}</Typography></Grid>\n          <Grid item><Select\n              id={player.uuid}\n              defaultValue={player.rank}\n              onChange={(event) => handleChange(event,player.uuid)}\n            >\n              {renderPossibilities(player)}\n          </Select>\n        </Grid>\n        </Grid>\n      </ListItem>)\n  }\n\n  return (\n    <DialogContent dividers>\n        <Typography>Ranks</Typography>\n        <List>\n          {renderPlayerRank(props.selectedPlayers)}\n        </List>\n    </DialogContent>);\n}\n","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\n\n\nexport interface DeleteResultProps{\n  deleteResult: () => void,\n  setDeleteResultOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteResult(props: DeleteResultProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteResultOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this Result?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this Result and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteResultOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteResult()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { gameType, playerType, scoreType, resultType } from '../../../types/data';\nimport { Delete, NavigateBefore, NavigateNext, PostAdd } from '@material-ui/icons';\nimport GameAddResultWho from './GamesAddResultWho';\nimport GameAddResultWhen from './GameAddResultWhen';\nimport GameAddResultRanks from './GameAddResultRanks';\nimport { severityType } from '../../../types/notification';\nimport { getPlayerProfile } from '../../../utils/lib';\nimport { uuid } from 'uuidv4';\nimport DeleteResult from './DeleteResult';\n\nexport interface GameAddResultProps{\n    game: gameType,\n    players: Array<playerType>,\n    addResultOpen: {id:string|undefined, open:boolean},\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    addResult: (result: resultType, id: string | undefined) => void,\n    deleteResult: (uuid: string) => void,\n}\n\nexport default function GameAddResult(props: GameAddResultProps){\n  const [currentStep, setCurrentStep] = React.useState(\"who\");\n  const [selectedDate, setSelectedDate] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].date : new Date());\n  const [selectedPlayers, setSelectedPlayers] = React.useState(props.addResultOpen.id ? props.game.results.filter(item => item.uuid === props.addResultOpen.id)[0].ranks : [] as Array<scoreType>);\n  const [deleteResultOpen, setDeleteResultOpen] = React.useState(false);\n\n  const displayCurrentStep = () => {\n    if(currentStep === \"who\")\n      return (<GameAddResultWho players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    if(currentStep === \"when\")\n      return (<GameAddResultWhen setSelectedDate={setSelectedDate} selectedDate={selectedDate}/>);\n\n    if(currentStep === \"ranks\")\n      return (<GameAddResultRanks players={props.players} setSelectedPlayers={setSelectedPlayers} selectedPlayers={selectedPlayers}/>);\n\n    return <Typography>ERROR</Typography>\n  }\n\n  const nextStep = () => {\n    if(currentStep === \"who\")\n    {\n      if(selectedPlayers.length < 2)\n        props.addNotification(\"Please select a least 2 players\",\"error\");\n      else\n      {\n        setCurrentStep(\"when\");\n        const sorted = selectedPlayers.sort((a, b) => getPlayerProfile(props.players,a.uuid).username > getPlayerProfile(props.players,b.uuid).username ? 1 : -1)\n        setSelectedPlayers(sorted);\n      }\n    }\n    else if(currentStep === \"when\")\n      setCurrentStep(\"ranks\");\n  }\n  const backStep = () => {\n    if(currentStep === \"when\")\n      setCurrentStep(\"who\");\n    else if(currentStep === \"ranks\")\n      setCurrentStep(\"when\");\n  }\n\n  const addResult = () => {\n    let rank: number = 0;\n    let validResult: boolean = false;\n    selectedPlayers.forEach(player => {\n      if(rank===0)\n        rank=player.rank;\n      if(rank!==player.rank)\n        validResult=true;\n    });\n    if(validResult){\n      const sorted = selectedPlayers.sort((a, b) => a.rank > b.rank ? 1 : -1)\n      setSelectedPlayers(sorted);\n      \n      const result: resultType = \n      {\n        date: selectedDate,\n        ranks: selectedPlayers,\n        uuid: uuid(),\n      }\n      if(props.addResultOpen.id)\n        props.addNotification(\"Result correctly edited\",\"success\");\n      else\n        props.addNotification(\"New result correctly added\",\"success\");\n\n      props.setAddResultOpen({id:undefined, open: false})\n      props.addResult(result,props.addResultOpen.id);\n    }\n    else\n      props.addNotification(\"Results need at least two different rank\",\"error\");\n  }\n\n  const deleteResult = () => {\n    setDeleteResultOpen(false)\n    props.setAddResultOpen({id:undefined, open:false})\n    props.deleteResult(props.addResultOpen.id!)\n  }\n\n  return (\n    <><Dialog fullWidth={true} maxWidth=\"sm\" open={props.addResultOpen.open}>\n    {props.addResultOpen.id ?  <DialogTitle>Edit result</DialogTitle> :  <DialogTitle>New result</DialogTitle>}\n    {displayCurrentStep()}\n    <DialogActions>\n      <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n        <Button onClick={() => props.setAddResultOpen({id:undefined, open:false})} >\n            Cancel\n        </Button>\n        {props.addResultOpen.id && <Button onClick={() => setDeleteResultOpen(true)}><Delete/></Button>}\n        <Button autoFocus disabled={currentStep === \"who\"} onClick={() => backStep()}>\n          <NavigateBefore/>\n        </Button>\n        {currentStep === \"ranks\" ? \n            <Button autoFocus onClick={() => addResult()} endIcon={<PostAdd/>}>\n              Send\n            </Button> :\n            <Button autoFocus onClick={() => nextStep()}>\n              <NavigateNext/>\n            </Button>\n        }\n       </ButtonGroup>\n    </DialogActions>\n  </Dialog>\n        {deleteResultOpen && <DeleteResult setDeleteResultOpen={setDeleteResultOpen} deleteResult={deleteResult}/>}\n  </>\n  );\n}","import React from 'react';\nimport { Chip, createStyles, makeStyles } from \"@material-ui/core\";\nimport { EmojiEvents } from '@material-ui/icons';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        backgroundColor: \"rgba(0,0,0,0.9)\",\n        marginLeft: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        border: \"2px solid #FFFFFF\",\n        zIndex: 0\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n    },\n    third: {\n        color: \"#cd7f32\",\n    }\n}),\n);\nexport interface ScoreChipProps{\n  rank: number\n  score: number\n  deltaScore: boolean\n}\n\nexport default function ScoreChip(props: ScoreChipProps){\n    const classes = useStyles(); \n\n    const getRankBadge = (rank: number) => \n    {\n        if(rank===1) \n            return <EmojiEvents className={classes.first}/>\n        else if(rank===2)\n            return <EmojiEvents className={classes.second}/>\n        else if(rank===3)\n        return <EmojiEvents className={classes.third}/>\n        return <></>\n    }\n\n    let text: string = `${Math.round(props.score)}`, color: string = \"#FDFDFD\"\n    if(props.deltaScore){\n        text = props.score < 0 ? `${Math.round(props.score)}` : `+${Math.round(props.score)}`\n        color= props.score < 0 ? \"#FF2020\" : \"#10FFB0\"\n    }\n    return <Chip className={classes.root} icon={getRankBadge(props.rank)} label={text} size=\"small\" variant=\"outlined\" style={{color: color}}/>\n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Avatar,\n  Badge,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { playerRankHistory, playerType, resultType } from '../../../types/data';\nimport { getPlayerLabel, getPlayerProfile } from '../../../utils/lib';\nimport ScoreChip from '../../scoreChip/ScoreChip';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Padding: {\n        padding: theme.spacing(2),\n    },\n    first: {\n        color: \"#FFD700\",\n    },\n    second: {\n        color: \"#C0C0C0\",\n\n    },\n    third: {\n        color: \"#cd7f32\",\n    },\n    ColorPicker: {\n        position: \"absolute\",\n        zIndex: 2\n    },\n}),\n);\n\nexport interface ResultCardProps{\n    result: resultType,\n    players: Array<playerType>,\n    setAddResultOpen: React.Dispatch<React.SetStateAction<{id: string|undefined, open: boolean}>>,\n    playersRank: Array<playerRankHistory>\n}\n\nexport default function ResultCard(props: ResultCardProps){\n  const classes = useStyles(); \n\n  \n  const displayPlayersBadges = () => {\n    return (props.result.ranks.map((rank) => \n    {\n        const playerRank = props.playersRank.filter(player => player.playerUuid === rank.uuid)[0] \n        const title = `${getPlayerProfile(props.players, rank.uuid).username} - New score: ${Math.round(playerRank.score)}`\n\n        return <Grid item>\n            <Tooltip title={title}>\n            <Badge\n            overlap=\"circle\"\n            style={{borderColor: \"rgba(0,0,0,0)\"}}\n            anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n            }}\n            badgeContent={<ScoreChip rank={rank.rank} score={playerRank.deltaScore} deltaScore={true}/>}\n            >\n            \n            <Avatar alt={getPlayerProfile(props.players,rank.uuid).username} style={{backgroundColor: getPlayerProfile(props.players,rank.uuid).color}}>{getPlayerLabel(getPlayerProfile(props.players,rank.uuid))}</Avatar>\n            </Badge>\n            </Tooltip>\n        </Grid>\n    }\n    ));\n  }\n\n  return (\n    <Grid item>\n        <Card className={classes.Padding} onClick={()=>props.setAddResultOpen({id: props.result.uuid, open:true})}>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n            <Grid item>\n                <Grid \n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    {displayPlayersBadges()}\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Typography>{props.result.date.toLocaleString()}</Typography>\n            </Grid>\n            </Grid>\n        </Card>\n    </Grid>\n  );\n}","import React, { ChangeEvent, VoidFunctionComponent } from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\n\nexport interface DeleteGameProps{\n  deleteGame: () => void,\n  setDeleteGameOpen: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport default function DeleteGame(props: DeleteGameProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setDeleteGameOpen(false);\n  };\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Delete this game?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will delete this game and all associated results.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setDeleteGameOpen(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => props.deleteGame()} variant=\"outlined\" style={{color: \"#DD0505\", borderColor: \"#DD0505\"}}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    MenuItem,\n    Select,\n    Box,\n  Divider,\n  TextField,\n  Input,\n} from \"@material-ui/core\";\nimport { gameType } from '../../../types/data';\n\n\nexport interface EditGameProps{\n    handleChangeGame: (newGame: gameType) => void,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>,\n    currentGame: gameType,\n}\n\nexport default function EditGame(props: EditGameProps){  \n    const [game, setGame] = React.useState(props.currentGame);\n \n    const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n        return;\n    }\n        props.setEditMode(false);\n    };\n\n\n    return (\n    <Dialog\n        open={true}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n          {\"Change the game settings\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <TextField value={game.gamename} onChange={(e) => setGame({...game, 'gamename': e.target.value })} label='Gamename' ></TextField>\n          </DialogContentText>\n          <Divider />\n          <DialogContentText>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', flexDirection: 'column' }}>\n            <Select value={game.algorithmSettings.algo} label='Algorithm'><MenuItem selected={true} key={'elo'} value={'elo'}>{'elo'}</MenuItem></Select>\n            <TextField\n              label=\"K factor for n first games\"\n              type='number'\n              value={game.algorithmSettings.params.k_first}\n              onChange={(e) => setGame({...game, 'algorithmSettings': { ...game.algorithmSettings, 'params': { ...game.algorithmSettings.params, 'k_first': Number(e.target.value)} } })}\n            />\n            <TextField\n              label=\"N\"\n              type='number'\n              value={game.algorithmSettings.params.n_first}\n              onChange={(e) => setGame({...game, 'algorithmSettings': { ...game.algorithmSettings, 'params': { ...game.algorithmSettings.params, 'n_first': Number(e.target.value)} } })}\n            />\n            <TextField\n              label=\"K factor after n first games\"\n              type='number'\n              value={game.algorithmSettings.params.k}\n              onChange={(e) => setGame({...game, 'algorithmSettings': { ...game.algorithmSettings, 'params': { ...game.algorithmSettings.params, 'k': Number(e.target.value)} } })}\n            />\n            </Box>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => props.setEditMode(false)} autoFocus>Cancel</Button>\n          <Button onClick={() => {props.handleChangeGame(game); props.setEditMode(false);}} variant=\"outlined\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import {\n    Grid,\n    Chip,\n    Avatar,\n    Badge,\n    Typography,\n    Paper,\n    Tooltip as Tooltip1\n  } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { LineChart, XAxis, Legend, CartesianGrid, Tooltip, Line, ResponsiveContainer, YAxis } from \"recharts\";\nimport { theme } from \"../../App\";\nimport { gameType, historyEntryType, playerType, resultType, scoreType } from \"../../types/data\";\nimport { getPlayerLabel, getPlayerProfile, getResult, toChartScore } from \"../../utils/lib\";\nimport ScoreChip from \"../scoreChip/ScoreChip\";\n  \nexport interface LineChartResultProps {\n  players: Array<playerType>,\n  game: gameType,\n}\n\nexport default function LineChartResult(props: LineChartResultProps){\n  const stateLineDesign = (players: Array<scoreType>, uuid: string) => {\n    let opacity: Record<string, number> = {}\n    let width: Record<string, number> = {}\n   \n    players.forEach((player) => {\n      if(uuid && player.uuid===uuid)\n      {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 4\n      } else if(uuid) {\n        opacity[player.uuid] = 0.7\n        width[player.uuid] = 2\n      } else {\n        opacity[player.uuid] = 1\n        width[player.uuid] = 2\n      }\n    })\n    return { opacity: opacity, width: width }\n  }\n  const [lineDesign, setLineDesign] = useState(stateLineDesign(props.game.players, \"\"));\n\n  const generateLines = (players: Array<scoreType>) => {\n    return players.map((player) => {\n        return <Line key={player.uuid} type=\"natural\" strokeWidth={lineDesign.width[player.uuid]} strokeOpacity={lineDesign.opacity[player.uuid]} dataKey={player.uuid} stroke={getPlayerProfile(props.players,player.uuid).color} yAxisId={1}/>\n      })\n  }\n\n  const handleMouseEnter = (uuid: string) => {\n    setLineDesign(stateLineDesign(props.game.players, uuid))\n  };\n\n  const handleMouseLeave = () => {\n    setLineDesign(stateLineDesign(props.game.players, \"\"));\n  };\n\n\n  const renderLegend = () => {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\"  spacing={5} style={{paddingBottom: theme.spacing(2)}}>\n        {\n          props.game.rankHistory[props.game.rankHistory.length-1].playersRank.sort((a, b) => a.score < b.score ? 1 : -1).map((player,index) => {\n            const playerProfile = getPlayerProfile(props.players,player.playerUuid)\n                  return <Grid item key={index} onMouseEnter={() => handleMouseEnter(player.playerUuid)} onMouseLeave={() => handleMouseLeave()}><Tooltip1 title={playerProfile.username}><Badge\n                      overlap=\"circle\"\n                      style={{borderColor: \"rgba(0,0,0,0)\"}}\n                      anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                      }}\n                      badgeContent={<ScoreChip rank={index+1} score={player.score} deltaScore={false}/>}\n                  >\n                      <Avatar alt={playerProfile.username} style={{backgroundColor: playerProfile.color}}>{getPlayerLabel(playerProfile)}</Avatar>\n                  </Badge></Tooltip1></Grid>\n            })\n        }\n      </Grid>\n    );\n  }\n  const generateLineScorePlayer = (historyEntry: historyEntryType, playerUuid: string, playing: boolean) => {\n    const playerRank = historyEntry.playersRank.filter((player) => player.playerUuid === playerUuid)[0]\n    const playerInfo = getPlayerProfile(props.players, playerUuid)\n    if(playing)\n    {\n      const color = playerRank.deltaScore < 0 ? \"#FF2020\" : \"#10FFB0\" \n      const deltaScore = playerRank.deltaScore < 0 ? `${Math.round(playerRank.deltaScore)}` : `+${Math.round(playerRank.deltaScore)}`\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} style={{backgroundColor: playerInfo.color, color: \"#FFFFFF\"}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1} style={{color: color}}>({deltaScore})</Grid>\n            </Grid>\n    }\n    else\n      return <Grid key={playerInfo.uuid} container item direction=\"row\" justify=\"space-between\" alignContent=\"center\" alignItems=\"baseline\">\n              <Grid item xs={5}><Chip label={playerInfo.username} variant=\"outlined\" style={{borderColor: playerInfo.color}} /></Grid>\n              <Grid item xs={3}>{Math.round(playerRank.score)}</Grid> \n              <Grid item xs={1}></Grid>\n            </Grid>\n  }\n\n  const renderPlayersScore = (result: resultType, data: any) => {\n    const historyEntry = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0] as historyEntryType\n\n    const uuidPresentPlayers: Array<string> = []\n    const uuidOtherPlayers: Array<string> = []\n    result.ranks.forEach(rank => uuidPresentPlayers.push(rank.uuid))\n    props.game.players.filter((player) => uuidPresentPlayers.indexOf(player.uuid) <= -1).forEach((player) => uuidOtherPlayers.push(player.uuid))\n    const componentPresentPlayers = uuidPresentPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, true)\n    })\n    const componentOtherPlayers = uuidOtherPlayers.map((player) => \n    {\n      return generateLineScorePlayer(historyEntry, player, false)\n    })\n   \n    return [componentPresentPlayers,componentOtherPlayers]\n  }\n\n  const renderTooltip = (propsTooltip: any) => {\n    const { active, payload, label} = propsTooltip\n    if (active && payload && payload.length && label) {\n      return (\n        <Paper variant=\"outlined\" style={{ paddingTop: theme.spacing(2), paddingBottom: theme.spacing(2),paddingLeft: theme.spacing(2),paddingRight: theme.spacing(4)}}>\n          <Typography>{label ? getResult(props.game.results,label).date.toLocaleString() : \"Start\"}</Typography>\n          <Grid container direction=\"column\" spacing={1}>{renderPlayersScore(getResult(props.game.results, label), payload)}</Grid>\n        </Paper>\n      );\n    }\n\n    return null;\n};\n  \n  return (\n    props.game.rankHistory.length && props.game.players.length ? \n    <div style={{width:'100%'}}>\n    <ResponsiveContainer width=\"100%\" height={400}>\n    <LineChart\n      height={400}\n      data={toChartScore(props.game.rankHistory)}\n      margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\n      >\n      <XAxis dataKey=\"resultUuid\" tick={false} />\n      <YAxis yAxisId={1} domain={['dataMin - 50', 'dataMax + 50']}/>\n      <Tooltip content={renderTooltip} />\n      <Legend verticalAlign=\"top\" content={renderLegend}/>\n      <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"3 3\"/>\n      {generateLines(props.game.players).flat()}\n    </LineChart></ResponsiveContainer></div> : <></>\n  );  \n}\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  IconButton,\n  Button,\n  ButtonGroup,\n  Typography,\n} from \"@material-ui/core\"\nimport { gameType, playerType, resultType } from '../../../types/data'\nimport { Delete, Edit, NavigateBefore, PostAdd } from '@material-ui/icons'\nimport GameAddResult from './GameAddResult'\nimport { severityType } from '../../../types/notification'\nimport { calculatePresentPlayers, calculateRanking } from '../../../utils/lib'\nimport ResultCard from './ResultCard'\nimport DeleteGame from './DeleteGame'\nimport EditGame from './EditGame'\nimport LineChartResult from '../../lineChartResult/LineChartResult'\nimport BarChartResult from '../../barChartResult/BarChartResult';\n\nconst useStyles = makeStyles((theme) =>\ncreateStyles({  \n    Main: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        overflow: 'visible',\n        zIndex: 150\n    },\n    Name: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n        margin: \"0px\",\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        width: theme.spacing(17)\n    }\n}),\n)\nexport interface GameCompleteCardProps{\n    game: gameType,\n    players: Array<playerType>,\n    changeGameData: (game: gameType, uuid: string) => void,\n    setCurrentGame: React.Dispatch<React.SetStateAction<{game: gameType|undefined, edit: boolean}>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n    deleteGame: (uuid: string) => void,\n    edit: boolean\n}\n\nexport default function GameCompleteCard(props: GameCompleteCardProps){\n  const classes = useStyles()\n\n  const [addResultOpen, setAddResultOpen] = React.useState({id: undefined as string|undefined, open:false})\n  const [editMode, setEditMode] = React.useState(props.edit)\n  const [deleteGameOpen, setDeleteGameOpen] = React.useState(false)\n\n  const handleChangeGame = (newGame: gameType) => {\n    let newData: gameType = Object.assign({}, newGame)\n    newData.rankHistory = calculateRanking(newData)\n\n    if(newData.players)\n    {\n        const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n        newData.players = sortedRanks\n    }\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const deleteGame = () => {\n    props.addNotification(\"Game correctly deleted\",\"success\")\n    setDeleteGameOpen(false)\n    props.deleteGame(props.game.uuid)\n  }\n\n  const deleteResult = (id: string) => {\n    let newData: gameType = Object.assign({}, props.game)\n    newData.results = newData.results.filter(result => result.uuid !== id)\n    newData.players = calculatePresentPlayers(newData)\n    newData.rankHistory = calculateRanking(newData)\n\n    props.addNotification(\"Result correctly deleted\",\"success\")\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const addResult = (newResult: resultType, id: string|undefined) => {\n    let newData: gameType = Object.assign({}, props.game)\n    if(!newData.results)\n        newData.results = []\n    else if(id)\n        newData.results = newData.results.filter(item => item.uuid !== id)\n    newData.results.push(newResult)\n    newData.players = calculatePresentPlayers(newData)\n    newData.rankHistory = calculateRanking(newData)\n\n    if(newData.players)\n    {\n        const sortedRanks = newData.players.sort((a, b) => a.rank > b.rank ? 1 : -1)\n        newData.players = sortedRanks\n    }\n\n    props.changeGameData(newData, props.game.uuid)\n  }\n\n  const displayResults = () => {\n    if (props.game.results){\n        return props.game.results.sort((a,b) => a.date < b.date ? 1 : -1).map(result => {\n            const playersRank = props.game.rankHistory.filter((entry) => entry.resultUuid === result.uuid)[0].playersRank\n            return <ResultCard result={result} players={props.players} setAddResultOpen={setAddResultOpen} playersRank={playersRank}></ResultCard>}\n        );\n    }\n  }\n\n  const handlerAddResult = () => {\n    if(props.players.length<2)\n        props.addNotification(\"You must add at least 2 players before\", \"error\")\n    else\n        setAddResultOpen({id: undefined, open:true})\n  }\n\n  return (\n    <>\n    <Card className={classes.Main}>\n        <Grid \n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={1}\n        >\n        <Grid item><Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"baseline\"\n        >\n            <Grid item>\n                <Grid item><IconButton size=\"medium\" onClick={() => props.setCurrentGame({game: undefined, edit: false})}><NavigateBefore/></IconButton></Grid>\n            </Grid>\n            <Grid item>\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n                    <Button endIcon={<PostAdd/>}  onClick={() => handlerAddResult()}>New result</Button>\n                    <Button onClick={() => setEditMode(true)}><Edit/></Button>\n                    <Button onClick={() => setDeleteGameOpen(true)}><Delete/></Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid></Grid>\n        <Grid item>\n            <Typography color=\"primary\" variant=\"h3\" align=\"center\">\n                {props.game.gamename}\n            </Typography>\n        </Grid>\n        {props.game.players && \n        <Grid item>\n            <LineChartResult players={props.players} game={props.game}/>\n        </Grid>}\n        {/* <Grid item>\n            <BarChartResult players={props.players} game={props.game}/>\n        </Grid> */}\n        </Grid>\n        {addResultOpen.open ? <GameAddResult game={props.game} players={props.players} addResultOpen={addResultOpen} setAddResultOpen={setAddResultOpen} addNotification={props.addNotification} addResult={addResult} deleteResult={deleteResult}></GameAddResult> : <></>}\n    </Card>\n    <Grid \n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={1}\n    >\n        {displayResults()}\n    </Grid>\n    {deleteGameOpen && <DeleteGame setDeleteGameOpen={setDeleteGameOpen} deleteGame={deleteGame}></DeleteGame>}\n    {editMode && <EditGame setEditMode={setEditMode} handleChangeGame={handleChangeGame} currentGame={props.game}></EditGame>}\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport GamesHeader from './GamesHeader';\nimport GameCard from './GameCard';\nimport { gameType, playerType } from '../../../types/data';\nimport GameCompleteCard from './GameCompleteCard';\nimport { severityType } from '../../../types/notification';\n\nexport interface GamesProps{\n    games: Array<gameType>,\n    players: Array<playerType>\n    setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>,\n    addNotification: (arg0: string, arg1: severityType) => void,\n}\n\nexport default function Games(props: GamesProps){\n    const [currentGame, setCurrentGame] = useState({game: undefined, edit: false} as unknown as {game: gameType|undefined, edit: boolean});\n\n    const renderGameCards = (games: Array<gameType>) => {\n        return (games.map((game: gameType) => <GameCard game={game} changeGameData={changeGameData} setCurrentGame={setCurrentGame} players={props.players} ></GameCard>))\n    };\n\n    const changeGameData = (game: gameType, uuid: string) => {\n        let new_data: Array<gameType> = props.games\n        new_data.map((el: gameType) => (el.uuid === uuid ? Object.assign(el, game) : el))   \n        props.setGames(new_data);\n    }\n\n    const deleteGame = (uuid: string) => {\n        let new_data: Array<gameType> = props.games.filter(item => item.uuid !== uuid);\n        setCurrentGame({game: undefined, edit: false});\n        props.setGames(new_data);\n        props.addNotification(\"Game correctly deleted\",\"success\");\n    }\n\n    return (\n    <Container>\n        { currentGame.game?\n            <GameCompleteCard game={currentGame.game} edit={currentGame.edit} changeGameData={changeGameData} setCurrentGame={setCurrentGame} players={props.players} addNotification={props.addNotification} deleteGame={deleteGame}></GameCompleteCard>\n            :\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n                <GamesHeader games={props.games} setGames={props.setGames} setCurrentGame={setCurrentGame}></GamesHeader>\n                {renderGameCards(props.games)}\n        </Grid>\n        }\n    </Container>\n  );\n}","import React from 'react';\nimport Players from \"./players/Players\"\nimport Settings from \"./settings/Settings\"\nimport Games from \"./games/Games\"\nimport { gameType, playerType } from '../../types/data';\nimport { severityType } from '../../types/notification';\n\nexport interface PagesProps{\n  currentPage: string,\n  games: Array<gameType>,\n  setGames: React.Dispatch<React.SetStateAction<Array<gameType>>>\n  players: Array<playerType>,\n  setPlayers:React.Dispatch<React.SetStateAction<Array<playerType>>>\n  handlerSaveData: (cookie: boolean) => void,\n  handlerLoadData: (e: React.ChangeEvent<HTMLInputElement> | null) => void,\n  addNotification: (arg0: string, arg1: severityType) => void,\n  handlerResetData: (cookie: boolean) => void,\n}\n\nexport default function Pages(props: PagesProps){\n  \n  const renderPage = (props: PagesProps) => {\n    switch(props.currentPage) {\n        case 'players':\n          return <Players players={props.players} games={props.games} setPlayers={props.setPlayers} addNotification={props.addNotification}></Players>;\n        case 'settings':\n          return <Settings handlerSaveData={props.handlerSaveData} handlerLoadData={props.handlerLoadData} handlerResetData={props.handlerResetData}></Settings>;\n        case 'games':\n          return <Games games={props.games} setGames={props.setGames} players={props.players} addNotification={props.addNotification}></Games>    \n        default:\n          return <></>;\n      }\n  };\n\n  return (\n    renderPage(props)\n  );\n}","import React, { ChangeEvent } from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { notificationType } from '../../../types/notification';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport interface NotificationProps{\n  notification: notificationType,\n  setNotification: any,\n}\n\nexport default function Notification(props: NotificationProps){  \n  const handleClose = (event: any, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setNotification({open: false});\n  };\n\n    return (\n       props.notification.open ?  \n        <Snackbar\n          anchorOrigin={{vertical: 'top', horizontal:'right'}}\n          open={props.notification.open}\n          autoHideDuration={6000} \n          onClose={handleClose}\n        >\n          <Alert severity={props.notification.severity ? props.notification.severity : \"info\"} onClose={handleClose}>{props.notification.text}</Alert>\n        </Snackbar> \n        :\n        <></>\n  );\n}","import React from \"react\"\nimport {\n  createMuiTheme, ThemeProvider, createStyles, makeStyles, Theme,\n} from \"@material-ui/core/styles\"\nimport Header from \"./components/header/Header\"\nimport Footer, { FooterProps } from \"./components/footer/Footer\"\nimport Pages, { PagesProps } from \"./components/pages/Pages\"\nimport { dataType, gameType, playerType } from \"./types/data\"\nimport Notifications, { NotificationProps } from \"./components/pages/notifications/Notification\"\nimport { notificationType, severityType } from \"./types/notification\"\nimport { generateGameFromLoadedData } from \"./utils/lib\"\n\nexport const theme = createMuiTheme({\n  palette: {\n    error: {\n      main: \"#DD0505\",\n    },\n    primary: {\n      main: \"#3f5efb\",\n    },\n    secondary: {\n      main: \"#d2d2d2\",\n    },\n  },\n})\n\nconst useStyles = makeStyles((theme) => createStyles({\n  App: {\n    paddingBottom: theme.spacing(15),\n  },\n}))\n\nfunction App() {\n  const [page, setPage] = React.useState(\"games\")\n  const [players, setPlayers] = React.useState([]as Array<playerType>)\n  const [games, setGames] = React.useState([] as Array<gameType>)\n  const [notification, setNotification] = React.useState({ open: false } as notificationType)\n\n  const classes = useStyles()\n\n  const getJsonSavedData = () => {\n    const data = {\n      players,\n      games: games.map(game => { return { uuid: game.uuid, gamename: game.gamename, results: game.results }})\n    }\n    return data\n  }\n\n  const handlerSaveData = (cookie: boolean) => {\n    const stringifiedData = JSON.stringify(getJsonSavedData())\n\n    if(cookie)\n    {\n      try {\n        localStorage.setItem('data', stringifiedData)\n        addNotification('Data saved as cookies', \"success\")\n      } catch(e) {\n        addNotification('Error when saving as cookies', \"error\")\n      }\n    }\n    else {\n      const FileSaver = require(\"file-saver\")\n      const blob = new Blob([stringifiedData], { type: \"application/json\" })\n      FileSaver.saveAs(blob, \"save_game-ranking.json\")\n    }\n  }\n\n  const handlerLoadData = (e: React.ChangeEvent<HTMLInputElement> | null) => {\n    if(e){\n      try {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n          if (e.target?.result) {\n            const data = JSON.parse(e.target.result as string)\n            setPlayers(data.players)\n            const games: Array<gameType> = data.games.map((game: { uuid: any; gamename: any; results: any, algorithmSettings: any }) => generateGameFromLoadedData(game))\n            setGames(games)\n            addNotification(\"Data correctly loaded\", \"success\")\n            setPage(\"games\")\n          }\n        }\n        if (e.target?.files) {\n          reader.readAsText(e.target.files[0])\n        }\n      } catch {\n        addNotification(\"Error when loading data\", \"error\")\n      }\n    }\n    else{\n      if(localStorage.getItem('data'))\n      {\n        const data = JSON.parse(localStorage.getItem('data')!)\n        setPlayers(data.players)\n        const games: Array<gameType> = data.games.map((game: { uuid: any; gamename: any; results: any, algorithmSettings: any  }) => generateGameFromLoadedData(game))\n        setGames(games)\n        addNotification(\"Data correctly loaded\", \"success\")\n        setPage(\"games\")\n      }\n      else \n        addNotification(\"Data not found in cookies\", \"warning\")\n    }\n  }\n\n  const handlerResetData = (cookie: boolean) => {\n    if(cookie){\n      localStorage.removeItem('data')\n      addNotification(\"Cookie correctly removed\", \"success\")\n    } else {\n      setPlayers([])\n      setGames([])\n      addNotification(\"Current session correctly reinitiliazed\", \"success\")\n    }\n  }\n\n  const addNotification = (text: string, severity?: severityType) => {\n    const new_notification = {\n      open: true,\n      text,\n      severity: severity || undefined,\n    }\n    setNotification(new_notification)\n  }\n\n  const handleChangeCurrentPage = (event: React.ChangeEvent<{}>, newPage: string) => {\n    setPage(newPage)\n  }\n\n  const pagesProps: PagesProps = {\n    currentPage: page,\n    games,\n    setGames,\n    players,\n    setPlayers,\n    handlerSaveData,\n    handlerLoadData,\n    handlerResetData,\n    addNotification,\n  }\n\n  const footerProps: FooterProps = {\n    handleChangeCurrentPage,\n    currentPage: page,\n  }\n\n  const notificationsProps: NotificationProps = {\n    notification,\n    setNotification,\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <Header />\n        <Pages {...pagesProps} />\n        <Footer {...footerProps} />\n      </div>\n      <Notifications {...notificationsProps} />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}